{"remainingRequest":"/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/node_modules/thread-loader/dist/cjs.js!/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/node_modules/babel-loader/lib/index.js??ref--5!/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/server/util/squel.js","dependencies":[{"path":"/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/server/util/squel.js","mtime":1657404556451},{"path":"/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/server/.babelrc","mtime":1657404556444},{"path":"/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9Vc2Vycy9oeWFtYWthd2EvVlNDb2RlV29yay9Nb2Rlcm4tVC9Nb2Rlcm4tVC9zdHVkeV90ZW1wbGF0ZS93ZWJfYXBwbGljYXRpb24vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7CgovKgpDb3B5cmlnaHQgKGMpIDIwMTQgUmFtZXNoIE5haXIgKGhpZGRlbnRhby5jb20pCgpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbgpvYnRhaW5pbmcgYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbgpmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0CnJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLApjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbApjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcKY29uZGl0aW9uczoKClRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlCmluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsCkVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUwpPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORApOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVApIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwKV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HCkZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgoqLwp2YXIgU1E7CmV4cG9ydCBmdW5jdGlvbiBzZXRTUSgpIHsKICB2YXIgZ2V0VmFsdWVIYW5kbGVyLAogICAgICByZWdpc3RlclZhbHVlSGFuZGxlciwKICAgICAgc3F1ZWwsCiAgICAgIF9idWlsZFNxdWVsLAogICAgICBfY2xvbmUyLAogICAgICBfZXh0ZW5kLAogICAgICBfaXNBcnJheSwKICAgICAgX2lzUGxhaW5PYmplY3QsCiAgICAgIF9fc2xpY2UgPSBbXS5zbGljZSwKICAgICAgX19oYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHksCiAgICAgIF9fYmluZCA9IGZ1bmN0aW9uIF9fYmluZChmbiwgbWUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBmbi5hcHBseShtZSwgYXJndW1lbnRzKTsKICAgIH07CiAgfSwKICAgICAgX19leHRlbmRzID0gZnVuY3Rpb24gX19leHRlbmRzKGNoaWxkLCBwYXJlbnQpIHsKICAgIGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsKICAgICAgaWYgKF9faGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOwogICAgfQoKICAgIGZ1bmN0aW9uIGN0b3IoKSB7CiAgICAgIHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsKICAgIH0KCiAgICBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7CiAgICBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOwogICAgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsKICAgIHJldHVybiBjaGlsZDsKICB9OwoKICBfZXh0ZW5kID0gZnVuY3Rpb24gX2V4dGVuZCgpIHsKICAgIHZhciBkc3QsIGssIHNvdXJjZXMsIHNyYywgdiwgX2ksIF9sZW47CgogICAgZHN0ID0gYXJndW1lbnRzWzBdLCBzb3VyY2VzID0gMiA8PSBhcmd1bWVudHMubGVuZ3RoID8gX19zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkgOiBbXTsKCiAgICBpZiAoc291cmNlcykgewogICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IHNvdXJjZXMubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICBzcmMgPSBzb3VyY2VzW19pXTsKCiAgICAgICAgaWYgKHNyYykgewogICAgICAgICAgZm9yIChrIGluIHNyYykgewogICAgICAgICAgICBpZiAoIV9faGFzUHJvcC5jYWxsKHNyYywgaykpIGNvbnRpbnVlOwogICAgICAgICAgICB2ID0gc3JjW2tdOwogICAgICAgICAgICBkc3Rba10gPSB2OwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHJldHVybiBkc3Q7CiAgfTsKCiAgX2lzUGxhaW5PYmplY3QgPSBmdW5jdGlvbiBfaXNQbGFpbk9iamVjdChvYmopIHsKICAgIHJldHVybiBvYmouY29uc3RydWN0b3IucHJvdG90eXBlID09PSBPYmplY3QucHJvdG90eXBlOwogIH07CgogIF9pc0FycmF5ID0gZnVuY3Rpb24gX2lzQXJyYXkob2JqKSB7CiAgICByZXR1cm4gb2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSA9PT0gQXJyYXkucHJvdG90eXBlOwogIH07CgogIF9jbG9uZTIgPSBmdW5jdGlvbiBfY2xvbmUoc3JjKSB7CiAgICB2YXIgaywgcmV0LCB2OwoKICAgIGlmICghc3JjKSB7CiAgICAgIHJldHVybiBzcmM7CiAgICB9CgogICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBzcmMuY2xvbmUpIHsKICAgICAgcmV0dXJuIHNyYy5jbG9uZSgpOwogICAgfSBlbHNlIGlmIChfaXNQbGFpbk9iamVjdChzcmMpIHx8IF9pc0FycmF5KHNyYykpIHsKICAgICAgcmV0ID0gbmV3IHNyYy5jb25zdHJ1Y3RvcigpOwoKICAgICAgZm9yIChrIGluIHNyYykgewogICAgICAgIGlmICghX19oYXNQcm9wLmNhbGwoc3JjLCBrKSkgY29udGludWU7CiAgICAgICAgdiA9IHNyY1trXTsKCiAgICAgICAgaWYgKCdmdW5jdGlvbicgIT09IHR5cGVvZiB2KSB7CiAgICAgICAgICByZXRba10gPSBfY2xvbmUyKHYpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHJldDsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNyYykpOwogICAgfQogIH07CgogIHJlZ2lzdGVyVmFsdWVIYW5kbGVyID0gZnVuY3Rpb24gcmVnaXN0ZXJWYWx1ZUhhbmRsZXIoaGFuZGxlcnMsIHR5cGUsIGhhbmRsZXIpIHsKICAgIHZhciB0eXBlSGFuZGxlciwgX2ksIF9sZW47CgogICAgaWYgKCdmdW5jdGlvbicgIT09IHR5cGVvZiB0eXBlICYmICdzdHJpbmcnICE9PSB0eXBlb2YgdHlwZSkgewogICAgICB0aHJvdyBuZXcgRXJyb3IoInR5cGUgbXVzdCBiZSBhIGNsYXNzIGNvbnN0cnVjdG9yIG9yIHN0cmluZyBkZW5vdGluZyAndHlwZW9mJyByZXN1bHQiKTsKICAgIH0KCiAgICBpZiAoJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIGhhbmRsZXIpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCJoYW5kbGVyIG11c3QgYmUgYSBmdW5jdGlvbiIpOwogICAgfQoKICAgIGZvciAoX2kgPSAwLCBfbGVuID0gaGFuZGxlcnMubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgdHlwZUhhbmRsZXIgPSBoYW5kbGVyc1tfaV07CgogICAgICBpZiAodHlwZUhhbmRsZXIudHlwZSA9PT0gdHlwZSkgewogICAgICAgIHR5cGVIYW5kbGVyLmhhbmRsZXIgPSBoYW5kbGVyOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBoYW5kbGVycy5wdXNoKHsKICAgICAgdHlwZTogdHlwZSwKICAgICAgaGFuZGxlcjogaGFuZGxlcgogICAgfSk7CiAgfTsKCiAgZ2V0VmFsdWVIYW5kbGVyID0gZnVuY3Rpb24gZ2V0VmFsdWVIYW5kbGVyKCkgewogICAgdmFyIGhhbmRsZXJMaXN0cywgaGFuZGxlcnMsIHR5cGVIYW5kbGVyLCB2YWx1ZSwgX2ksIF9qLCBfbGVuLCBfbGVuMTsKCiAgICB2YWx1ZSA9IGFyZ3VtZW50c1swXSwgaGFuZGxlckxpc3RzID0gMiA8PSBhcmd1bWVudHMubGVuZ3RoID8gX19zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkgOiBbXTsKCiAgICBmb3IgKF9pID0gMCwgX2xlbiA9IGhhbmRsZXJMaXN0cy5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICBoYW5kbGVycyA9IGhhbmRsZXJMaXN0c1tfaV07CgogICAgICBmb3IgKF9qID0gMCwgX2xlbjEgPSBoYW5kbGVycy5sZW5ndGg7IF9qIDwgX2xlbjE7IF9qKyspIHsKICAgICAgICB0eXBlSGFuZGxlciA9IGhhbmRsZXJzW19qXTsKCiAgICAgICAgaWYgKHR5cGVIYW5kbGVyLnR5cGUgPT09IF90eXBlb2YodmFsdWUpIHx8IHR5cGVvZiB0eXBlSGFuZGxlci50eXBlICE9PSAnc3RyaW5nJyAmJiB2YWx1ZSBpbnN0YW5jZW9mIHR5cGVIYW5kbGVyLnR5cGUpIHsKICAgICAgICAgIHJldHVybiB0eXBlSGFuZGxlci5oYW5kbGVyOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHJldHVybiB2b2lkIDA7CiAgfTsKCiAgX2J1aWxkU3F1ZWwgPSBmdW5jdGlvbiBfYnVpbGRTcXVlbChmbGF2b3VyKSB7CiAgICB2YXIgY2xzLCBfcmVmLCBfcmVmMSwgX3JlZjIsIF9yZWYzLCBfcmVmNCwgX3JlZjUsIF9zcXVlbDsKCiAgICBpZiAoZmxhdm91ciA9PSBudWxsKSB7CiAgICAgIGZsYXZvdXIgPSBudWxsOwogICAgfQoKICAgIGNscyA9IHt9OwogICAgY2xzLkRlZmF1bHRRdWVyeUJ1aWxkZXJPcHRpb25zID0gewogICAgICBhdXRvUXVvdGVUYWJsZU5hbWVzOiBmYWxzZSwKICAgICAgYXV0b1F1b3RlRmllbGROYW1lczogZmFsc2UsCiAgICAgIGF1dG9RdW90ZUFsaWFzTmFtZXM6IHRydWUsCiAgICAgIG5hbWVRdW90ZUNoYXJhY3RlcjogJ2AnLAogICAgICB0YWJsZUFsaWFzUXVvdGVDaGFyYWN0ZXI6ICdgJywKICAgICAgZmllbGRBbGlhc1F1b3RlQ2hhcmFjdGVyOiAnIicsCiAgICAgIHZhbHVlSGFuZGxlcnM6IFtdLAogICAgICBwYXJhbWV0ZXJDaGFyYWN0ZXI6ICc/JywKICAgICAgbnVtYmVyZWRQYXJhbWV0ZXJzOiBmYWxzZSwKICAgICAgbnVtYmVyZWRQYXJhbWV0ZXJzUHJlZml4OiAnJCcsCiAgICAgIG51bWJlcmVkUGFyYW1ldGVyc1N0YXJ0QXQ6IDEsCiAgICAgIHJlcGxhY2VTaW5nbGVRdW90ZXM6IGZhbHNlLAogICAgICBzaW5nbGVRdW90ZVJlcGxhY2VtZW50OiAnXCdcJycsCiAgICAgIHNlcGFyYXRvcjogJyAnCiAgICB9OwogICAgY2xzLmdsb2JhbFZhbHVlSGFuZGxlcnMgPSBbXTsKCiAgICBjbHMucmVnaXN0ZXJWYWx1ZUhhbmRsZXIgPSBmdW5jdGlvbiAodHlwZSwgaGFuZGxlcikgewogICAgICByZXR1cm4gcmVnaXN0ZXJWYWx1ZUhhbmRsZXIoY2xzLmdsb2JhbFZhbHVlSGFuZGxlcnMsIHR5cGUsIGhhbmRsZXIpOwogICAgfTsKCiAgICBjbHMuQ2xvbmVhYmxlID0gZnVuY3Rpb24gKCkgewogICAgICBmdW5jdGlvbiBDbG9uZWFibGUoKSB7fQoKICAgICAgQ2xvbmVhYmxlLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgbmV3SW5zdGFuY2U7CiAgICAgICAgbmV3SW5zdGFuY2UgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcigpOwogICAgICAgIHJldHVybiBfZXh0ZW5kKG5ld0luc3RhbmNlLCBfY2xvbmUyKF9leHRlbmQoe30sIHRoaXMpKSk7CiAgICAgIH07CgogICAgICByZXR1cm4gQ2xvbmVhYmxlOwogICAgfSgpOwoKICAgIGNscy5CYXNlQnVpbGRlciA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKEJhc2VCdWlsZGVyLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gQmFzZUJ1aWxkZXIob3B0aW9ucykgewogICAgICAgIHRoaXMuX3Nhbml0aXplTmVzdGFibGVRdWVyeSA9IF9fYmluZCh0aGlzLl9zYW5pdGl6ZU5lc3RhYmxlUXVlcnksIHRoaXMpOwogICAgICAgIHZhciBkZWZhdWx0czsKICAgICAgICBkZWZhdWx0cyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoY2xzLkRlZmF1bHRRdWVyeUJ1aWxkZXJPcHRpb25zKSk7CiAgICAgICAgdGhpcy5vcHRpb25zID0gX2V4dGVuZCh7fSwgZGVmYXVsdHMsIG9wdGlvbnMpOwogICAgICB9CgogICAgICBCYXNlQnVpbGRlci5wcm90b3R5cGUucmVnaXN0ZXJWYWx1ZUhhbmRsZXIgPSBmdW5jdGlvbiAodHlwZSwgaGFuZGxlcikgewogICAgICAgIHJlZ2lzdGVyVmFsdWVIYW5kbGVyKHRoaXMub3B0aW9ucy52YWx1ZUhhbmRsZXJzLCB0eXBlLCBoYW5kbGVyKTsKICAgICAgICByZXR1cm4gdGhpczsKICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fZ2V0T2JqZWN0Q2xhc3NOYW1lID0gZnVuY3Rpb24gKG9iaikgewogICAgICAgIHZhciBhcnI7CgogICAgICAgIGlmIChvYmogJiYgb2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3Rvci50b1N0cmluZykgewogICAgICAgICAgYXJyID0gb2JqLmNvbnN0cnVjdG9yLnRvU3RyaW5nKCkubWF0Y2goL2Z1bmN0aW9uXHMqKFx3KykvKTsKCiAgICAgICAgICBpZiAoYXJyICYmIGFyci5sZW5ndGggPT09IDIpIHsKICAgICAgICAgICAgcmV0dXJuIGFyclsxXTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB2b2lkIDA7CiAgICAgIH07CgogICAgICBCYXNlQnVpbGRlci5wcm90b3R5cGUuX3Nhbml0aXplQ29uZGl0aW9uID0gZnVuY3Rpb24gKGNvbmRpdGlvbikgewogICAgICAgIGlmICghKGNvbmRpdGlvbiBpbnN0YW5jZW9mIGNscy5FeHByZXNzaW9uKSkgewogICAgICAgICAgaWYgKCJzdHJpbmciICE9PSB0eXBlb2YgY29uZGl0aW9uKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiY29uZGl0aW9uIG11c3QgYmUgYSBzdHJpbmcgb3IgRXhwcmVzc2lvbiBpbnN0YW5jZSIpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGNvbmRpdGlvbjsKICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVOYW1lID0gZnVuY3Rpb24gKHZhbHVlLCB0eXBlKSB7CiAgICAgICAgaWYgKCJzdHJpbmciICE9PSB0eXBlb2YgdmFsdWUpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiIiArIHR5cGUgKyAiIG11c3QgYmUgYSBzdHJpbmciKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVGaWVsZCA9IGZ1bmN0aW9uIChpdGVtLCBmb3JtYXR0aW5nT3B0aW9ucykgewogICAgICAgIHZhciBxdW90ZUNoYXI7CgogICAgICAgIGlmIChmb3JtYXR0aW5nT3B0aW9ucyA9PSBudWxsKSB7CiAgICAgICAgICBmb3JtYXR0aW5nT3B0aW9ucyA9IHt9OwogICAgICAgIH0KCiAgICAgICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBjbHMuUXVlcnlCdWlsZGVyKSB7CiAgICAgICAgICBpdGVtID0gIigiICsgaXRlbSArICIpIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaXRlbSA9IHRoaXMuX3Nhbml0aXplTmFtZShpdGVtLCAiZmllbGQgbmFtZSIpOwoKICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXV0b1F1b3RlRmllbGROYW1lcykgewogICAgICAgICAgICBxdW90ZUNoYXIgPSB0aGlzLm9wdGlvbnMubmFtZVF1b3RlQ2hhcmFjdGVyOwoKICAgICAgICAgICAgaWYgKGZvcm1hdHRpbmdPcHRpb25zLmlnbm9yZVBlcmlvZHNGb3JGaWVsZE5hbWVRdW90ZXMpIHsKICAgICAgICAgICAgICBpdGVtID0gIiIgKyBxdW90ZUNoYXIgKyBpdGVtICsgcXVvdGVDaGFyOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGl0ZW0gPSBpdGVtLnNwbGl0KCcuJykubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICAgICAgICBpZiAoJyonID09PSB2KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB2OwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICIiICsgcXVvdGVDaGFyICsgdiArIHF1b3RlQ2hhcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KS5qb2luKCcuJyk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBpdGVtOwogICAgICB9OwoKICAgICAgQmFzZUJ1aWxkZXIucHJvdG90eXBlLl9zYW5pdGl6ZU5lc3RhYmxlUXVlcnkgPSBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGlmIChpdGVtIGluc3RhbmNlb2YgY2xzLlF1ZXJ5QnVpbGRlciAmJiBpdGVtLmlzTmVzdGFibGUoKSkgewogICAgICAgICAgcmV0dXJuIGl0ZW07CiAgICAgICAgfQoKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIm11c3QgYmUgYSBuZXN0YWJsZSBxdWVyeSwgZS5nLiBTRUxFQ1QiKTsKICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVUYWJsZSA9IGZ1bmN0aW9uIChpdGVtLCBhbGxvd05lc3RlZCkgewogICAgICAgIHZhciBlLCBzYW5pdGl6ZWQ7CgogICAgICAgIGlmIChhbGxvd05lc3RlZCA9PSBudWxsKSB7CiAgICAgICAgICBhbGxvd05lc3RlZCA9IGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgaWYgKGFsbG93TmVzdGVkKSB7CiAgICAgICAgICBpZiAoInN0cmluZyIgPT09IHR5cGVvZiBpdGVtKSB7CiAgICAgICAgICAgIHNhbml0aXplZCA9IGl0ZW07CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIHNhbml0aXplZCA9IHRoaXMuX3Nhbml0aXplTmVzdGFibGVRdWVyeShpdGVtKTsKICAgICAgICAgICAgfSBjYXRjaCAoX2Vycm9yKSB7CiAgICAgICAgICAgICAgZSA9IF9lcnJvcjsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoInRhYmxlIG5hbWUgbXVzdCBiZSBhIHN0cmluZyBvciBhIG5lc3RhYmxlIHF1ZXJ5IGluc3RhbmNlIik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgc2FuaXRpemVkID0gdGhpcy5fc2FuaXRpemVOYW1lKGl0ZW0sICd0YWJsZSBuYW1lJyk7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5vcHRpb25zLmF1dG9RdW90ZVRhYmxlTmFtZXMpIHsKICAgICAgICAgIHJldHVybiAiIiArIHRoaXMub3B0aW9ucy5uYW1lUXVvdGVDaGFyYWN0ZXIgKyBzYW5pdGl6ZWQgKyB0aGlzLm9wdGlvbnMubmFtZVF1b3RlQ2hhcmFjdGVyOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gc2FuaXRpemVkOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVUYWJsZUFsaWFzID0gZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICB2YXIgc2FuaXRpemVkOwogICAgICAgIHNhbml0aXplZCA9IHRoaXMuX3Nhbml0aXplTmFtZShpdGVtLCAidGFibGUgYWxpYXMiKTsKCiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hdXRvUXVvdGVBbGlhc05hbWVzKSB7CiAgICAgICAgICByZXR1cm4gIiIgKyB0aGlzLm9wdGlvbnMudGFibGVBbGlhc1F1b3RlQ2hhcmFjdGVyICsgc2FuaXRpemVkICsgdGhpcy5vcHRpb25zLnRhYmxlQWxpYXNRdW90ZUNoYXJhY3RlcjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHNhbml0aXplZDsKICAgICAgICB9CiAgICAgIH07CgogICAgICBCYXNlQnVpbGRlci5wcm90b3R5cGUuX3Nhbml0aXplRmllbGRBbGlhcyA9IGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgdmFyIHNhbml0aXplZDsKICAgICAgICBzYW5pdGl6ZWQgPSB0aGlzLl9zYW5pdGl6ZU5hbWUoaXRlbSwgImZpZWxkIGFsaWFzIik7CgogICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXV0b1F1b3RlQWxpYXNOYW1lcykgewogICAgICAgICAgcmV0dXJuICIiICsgdGhpcy5vcHRpb25zLmZpZWxkQWxpYXNRdW90ZUNoYXJhY3RlciArIHNhbml0aXplZCArIHRoaXMub3B0aW9ucy5maWVsZEFsaWFzUXVvdGVDaGFyYWN0ZXI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBzYW5pdGl6ZWQ7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgQmFzZUJ1aWxkZXIucHJvdG90eXBlLl9zYW5pdGl6ZUxpbWl0T2Zmc2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgdmFsdWUgPSBwYXJzZUludCh2YWx1ZSk7CgogICAgICAgIGlmICgwID4gdmFsdWUgfHwgaXNOYU4odmFsdWUpKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoImxpbWl0L29mZnNldCBtdXN0IGJlID49IDAiKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVWYWx1ZSA9IGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgdmFyIGl0ZW1UeXBlLCB0eXBlSXNWYWxpZDsKICAgICAgICBpdGVtVHlwZSA9IF90eXBlb2YoaXRlbSk7CgogICAgICAgIGlmIChudWxsID09PSBpdGVtKSB7fSBlbHNlIGlmICgic3RyaW5nIiA9PT0gaXRlbVR5cGUgfHwgIm51bWJlciIgPT09IGl0ZW1UeXBlIHx8ICJib29sZWFuIiA9PT0gaXRlbVR5cGUpIHt9IGVsc2UgaWYgKGl0ZW0gaW5zdGFuY2VvZiBjbHMuUXVlcnlCdWlsZGVyICYmIGl0ZW0uaXNOZXN0YWJsZSgpKSB7fSBlbHNlIGlmIChpdGVtIGluc3RhbmNlb2YgY2xzLkZ1bmN0aW9uQmxvY2spIHt9IGVsc2UgewogICAgICAgICAgdHlwZUlzVmFsaWQgPSB2b2lkIDAgIT09IGdldFZhbHVlSGFuZGxlcihpdGVtLCB0aGlzLm9wdGlvbnMudmFsdWVIYW5kbGVycywgY2xzLmdsb2JhbFZhbHVlSGFuZGxlcnMpOwoKICAgICAgICAgIGlmICghdHlwZUlzVmFsaWQpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJmaWVsZCB2YWx1ZSBtdXN0IGJlIGEgc3RyaW5nLCBudW1iZXIsIGJvb2xlYW4sIG51bGwgb3Igb25lIG9mIHRoZSByZWdpc3RlcmVkIGN1c3RvbSB2YWx1ZSB0eXBlcyIpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGl0ZW07CiAgICAgIH07CgogICAgICBCYXNlQnVpbGRlci5wcm90b3R5cGUuX2VzY2FwZVZhbHVlID0gZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgaWYgKHRydWUgIT09IHRoaXMub3B0aW9ucy5yZXBsYWNlU2luZ2xlUXVvdGVzKSB7CiAgICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvXCcvZywgdGhpcy5vcHRpb25zLnNpbmdsZVF1b3RlUmVwbGFjZW1lbnQpOwogICAgICB9OwoKICAgICAgQmFzZUJ1aWxkZXIucHJvdG90eXBlLl9mb3JtYXRDdXN0b21WYWx1ZSA9IGZ1bmN0aW9uICh2YWx1ZSwgYXNQYXJhbSkgewogICAgICAgIHZhciBjdXN0b21IYW5kbGVyOwoKICAgICAgICBpZiAoYXNQYXJhbSA9PSBudWxsKSB7CiAgICAgICAgICBhc1BhcmFtID0gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBjdXN0b21IYW5kbGVyID0gZ2V0VmFsdWVIYW5kbGVyKHZhbHVlLCB0aGlzLm9wdGlvbnMudmFsdWVIYW5kbGVycywgY2xzLmdsb2JhbFZhbHVlSGFuZGxlcnMpOwoKICAgICAgICBpZiAoY3VzdG9tSGFuZGxlcikgewogICAgICAgICAgdmFsdWUgPSBjdXN0b21IYW5kbGVyKHZhbHVlLCBhc1BhcmFtKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fZm9ybWF0VmFsdWVBc1BhcmFtID0gZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgdmFyIHAsCiAgICAgICAgICAgIF90aGlzID0gdGhpczsKCiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7CiAgICAgICAgICByZXR1cm4gdmFsdWUubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5fZm9ybWF0VmFsdWVBc1BhcmFtKHYpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIGNscy5RdWVyeUJ1aWxkZXIgJiYgdmFsdWUuaXNOZXN0YWJsZSgpKSB7CiAgICAgICAgICAgIHZhbHVlLnVwZGF0ZU9wdGlvbnMoewogICAgICAgICAgICAgICJuZXN0ZWRCdWlsZGVyIjogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIHAgPSB2YWx1ZS50b1BhcmFtKCk7CiAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgY2xzLkV4cHJlc3Npb24pIHsKICAgICAgICAgICAgcmV0dXJuIHAgPSB2YWx1ZS50b1BhcmFtKCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gdGhpcy5fZm9ybWF0Q3VzdG9tVmFsdWUodmFsdWUsIHRydWUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKCiAgICAgIEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fZm9ybWF0VmFsdWUgPSBmdW5jdGlvbiAodmFsdWUsIGZvcm1hdHRpbmdPcHRpb25zKSB7CiAgICAgICAgdmFyIGN1c3RvbUZvcm1hdHRlZFZhbHVlLAogICAgICAgICAgICBlc2NhcGVkVmFsdWUsCiAgICAgICAgICAgIF90aGlzID0gdGhpczsKCiAgICAgICAgaWYgKGZvcm1hdHRpbmdPcHRpb25zID09IG51bGwpIHsKICAgICAgICAgIGZvcm1hdHRpbmdPcHRpb25zID0ge307CiAgICAgICAgfQoKICAgICAgICBjdXN0b21Gb3JtYXR0ZWRWYWx1ZSA9IHRoaXMuX2Zvcm1hdEN1c3RvbVZhbHVlKHZhbHVlKTsKCiAgICAgICAgaWYgKGN1c3RvbUZvcm1hdHRlZFZhbHVlICE9PSB2YWx1ZSkgewogICAgICAgICAgcmV0dXJuICIoIiArIGN1c3RvbUZvcm1hdHRlZFZhbHVlICsgIikiOwogICAgICAgIH0KCiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7CiAgICAgICAgICB2YWx1ZSA9IHZhbHVlLm1hcChmdW5jdGlvbiAodikgewogICAgICAgICAgICByZXR1cm4gX3RoaXMuX2Zvcm1hdFZhbHVlKHYpOwogICAgICAgICAgfSk7CiAgICAgICAgICB2YWx1ZSA9ICIoIiArIHZhbHVlLmpvaW4oJywgJykgKyAiKSI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChudWxsID09PSB2YWx1ZSkgewogICAgICAgICAgICB2YWx1ZSA9ICJOVUxMIjsKICAgICAgICAgIH0gZWxzZSBpZiAoImJvb2xlYW4iID09PSB0eXBlb2YgdmFsdWUpIHsKICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZSA/ICJUUlVFIiA6ICJGQUxTRSI7CiAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgY2xzLlF1ZXJ5QnVpbGRlcikgewogICAgICAgICAgICB2YWx1ZSA9ICIoIiArIHZhbHVlICsgIikiOwogICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIGNscy5FeHByZXNzaW9uKSB7CiAgICAgICAgICAgIHZhbHVlID0gIigiICsgdmFsdWUgKyAiKSI7CiAgICAgICAgICB9IGVsc2UgaWYgKCJudW1iZXIiICE9PSB0eXBlb2YgdmFsdWUpIHsKICAgICAgICAgICAgaWYgKGZvcm1hdHRpbmdPcHRpb25zLmRvbnRRdW90ZSkgewogICAgICAgICAgICAgIHZhbHVlID0gIiIgKyB2YWx1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBlc2NhcGVkVmFsdWUgPSB0aGlzLl9lc2NhcGVWYWx1ZSh2YWx1ZSk7CiAgICAgICAgICAgICAgdmFsdWUgPSAiJyIgKyBlc2NhcGVkVmFsdWUgKyAiJyI7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfTsKCiAgICAgIHJldHVybiBCYXNlQnVpbGRlcjsKICAgIH0oY2xzLkNsb25lYWJsZSk7CgogICAgY2xzLkV4cHJlc3Npb24gPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhFeHByZXNzaW9uLCBfc3VwZXIpOwoKICAgICAgRXhwcmVzc2lvbi5wcm90b3R5cGUudHJlZSA9IG51bGw7CiAgICAgIEV4cHJlc3Npb24ucHJvdG90eXBlLmN1cnJlbnQgPSBudWxsOwoKICAgICAgZnVuY3Rpb24gRXhwcmVzc2lvbihvcHRpb25zKSB7CiAgICAgICAgdmFyIGRlZmF1bHRzLAogICAgICAgICAgICBfdGhpcyA9IHRoaXM7CgogICAgICAgIEV4cHJlc3Npb24uX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7CgogICAgICAgIGRlZmF1bHRzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjbHMuRGVmYXVsdFF1ZXJ5QnVpbGRlck9wdGlvbnMpKTsKICAgICAgICB0aGlzLm9wdGlvbnMgPSBfZXh0ZW5kKHt9LCBkZWZhdWx0cywgb3B0aW9ucyk7CiAgICAgICAgdGhpcy50cmVlID0gewogICAgICAgICAgcGFyZW50OiBudWxsLAogICAgICAgICAgbm9kZXM6IFtdCiAgICAgICAgfTsKICAgICAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLnRyZWU7CgogICAgICAgIHRoaXMuX2JlZ2luID0gZnVuY3Rpb24gKG9wKSB7CiAgICAgICAgICB2YXIgbmV3X3RyZWU7CiAgICAgICAgICBuZXdfdHJlZSA9IHsKICAgICAgICAgICAgdHlwZTogb3AsCiAgICAgICAgICAgIHBhcmVudDogX3RoaXMuY3VycmVudCwKICAgICAgICAgICAgbm9kZXM6IFtdCiAgICAgICAgICB9OwoKICAgICAgICAgIF90aGlzLmN1cnJlbnQubm9kZXMucHVzaChuZXdfdHJlZSk7CgogICAgICAgICAgX3RoaXMuY3VycmVudCA9IF90aGlzLmN1cnJlbnQubm9kZXNbX3RoaXMuY3VycmVudC5ub2Rlcy5sZW5ndGggLSAxXTsKICAgICAgICAgIHJldHVybiBfdGhpczsKICAgICAgICB9OwogICAgICB9CgogICAgICBFeHByZXNzaW9uLnByb3RvdHlwZS5hbmRfYmVnaW4gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX2JlZ2luKCdBTkQnKTsKICAgICAgfTsKCiAgICAgIEV4cHJlc3Npb24ucHJvdG90eXBlLm9yX2JlZ2luID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLl9iZWdpbignT1InKTsKICAgICAgfTsKCiAgICAgIEV4cHJlc3Npb24ucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoIXRoaXMuY3VycmVudC5wYXJlbnQpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiYmVnaW4oKSBuZWVkcyB0byBiZSBjYWxsZWQiKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5wYXJlbnQ7CiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgIH07CgogICAgICBFeHByZXNzaW9uLnByb3RvdHlwZS5hbmQgPSBmdW5jdGlvbiAoZXhwciwgcGFyYW0pIHsKICAgICAgICBpZiAoIWV4cHIgfHwgInN0cmluZyIgIT09IHR5cGVvZiBleHByKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoImV4cHIgbXVzdCBiZSBhIHN0cmluZyIpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5jdXJyZW50Lm5vZGVzLnB1c2goewogICAgICAgICAgdHlwZTogJ0FORCcsCiAgICAgICAgICBleHByOiBleHByLAogICAgICAgICAgcGFyYTogcGFyYW0KICAgICAgICB9KTsKICAgICAgICByZXR1cm4gdGhpczsKICAgICAgfTsKCiAgICAgIEV4cHJlc3Npb24ucHJvdG90eXBlLm9yID0gZnVuY3Rpb24gKGV4cHIsIHBhcmFtKSB7CiAgICAgICAgaWYgKCFleHByIHx8ICJzdHJpbmciICE9PSB0eXBlb2YgZXhwcikgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJleHByIG11c3QgYmUgYSBzdHJpbmciKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuY3VycmVudC5ub2Rlcy5wdXNoKHsKICAgICAgICAgIHR5cGU6ICdPUicsCiAgICAgICAgICBleHByOiBleHByLAogICAgICAgICAgcGFyYTogcGFyYW0KICAgICAgICB9KTsKICAgICAgICByZXR1cm4gdGhpczsKICAgICAgfTsKCiAgICAgIEV4cHJlc3Npb24ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChudWxsICE9PSB0aGlzLmN1cnJlbnQucGFyZW50KSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoImVuZCgpIG5lZWRzIHRvIGJlIGNhbGxlZCIpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuX3RvU3RyaW5nKHRoaXMudHJlZSk7CiAgICAgIH07CgogICAgICBFeHByZXNzaW9uLnByb3RvdHlwZS50b1BhcmFtID0gZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChudWxsICE9PSB0aGlzLmN1cnJlbnQucGFyZW50KSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoImVuZCgpIG5lZWRzIHRvIGJlIGNhbGxlZCIpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuX3RvU3RyaW5nKHRoaXMudHJlZSwgdHJ1ZSk7CiAgICAgIH07CgogICAgICBFeHByZXNzaW9uLnByb3RvdHlwZS5fdG9TdHJpbmcgPSBmdW5jdGlvbiAobm9kZSwgcGFyYW1Nb2RlKSB7CiAgICAgICAgdmFyIGNoaWxkLAogICAgICAgICAgICBjdiwKICAgICAgICAgICAgaW5TdHIsCiAgICAgICAgICAgIG5vZGVTdHIsCiAgICAgICAgICAgIHBhcmFtcywKICAgICAgICAgICAgc3RyLAogICAgICAgICAgICBfaSwKICAgICAgICAgICAgX2xlbiwKICAgICAgICAgICAgX3JlZiwKICAgICAgICAgICAgX3RoaXMgPSB0aGlzOwoKICAgICAgICBpZiAocGFyYW1Nb2RlID09IG51bGwpIHsKICAgICAgICAgIHBhcmFtTW9kZSA9IGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgc3RyID0gIiI7CiAgICAgICAgcGFyYW1zID0gW107CiAgICAgICAgX3JlZiA9IG5vZGUubm9kZXM7CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgY2hpbGQgPSBfcmVmW19pXTsKCiAgICAgICAgICBpZiAoY2hpbGQuZXhwciAhPSBudWxsKSB7CiAgICAgICAgICAgIG5vZGVTdHIgPSBjaGlsZC5leHByOwoKICAgICAgICAgICAgaWYgKHZvaWQgMCAhPT0gY2hpbGQucGFyYSkgewogICAgICAgICAgICAgIGlmICghcGFyYW1Nb2RlKSB7CiAgICAgICAgICAgICAgICBub2RlU3RyID0gbm9kZVN0ci5yZXBsYWNlKHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJDaGFyYWN0ZXIsIHRoaXMuX2Zvcm1hdFZhbHVlKGNoaWxkLnBhcmEpKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY3YgPSB0aGlzLl9mb3JtYXRWYWx1ZUFzUGFyYW0oY2hpbGQucGFyYSk7CgogICAgICAgICAgICAgICAgaWYgKChjdiAhPSBudWxsID8gY3YudGV4dCA6IHZvaWQgMCkgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICBwYXJhbXMgPSBwYXJhbXMuY29uY2F0KGN2LnZhbHVlcyk7CiAgICAgICAgICAgICAgICAgIG5vZGVTdHIgPSBub2RlU3RyLnJlcGxhY2UodGhpcy5vcHRpb25zLnBhcmFtZXRlckNoYXJhY3RlciwgIigiICsgY3YudGV4dCArICIpIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBwYXJhbXMgPSBwYXJhbXMuY29uY2F0KGN2KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZC5wYXJhKSkgewogICAgICAgICAgICAgICAgICBpblN0ciA9IEFycmF5LmFwcGx5KG51bGwsIG5ldyBBcnJheShjaGlsZC5wYXJhLmxlbmd0aCkpLm1hcChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLm9wdGlvbnMucGFyYW1ldGVyQ2hhcmFjdGVyOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgbm9kZVN0ciA9IG5vZGVTdHIucmVwbGFjZSh0aGlzLm9wdGlvbnMucGFyYW1ldGVyQ2hhcmFjdGVyLCAiKCIgKyBpblN0ci5qb2luKCcsICcpICsgIikiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5vZGVTdHIgPSB0aGlzLl90b1N0cmluZyhjaGlsZCwgcGFyYW1Nb2RlKTsKCiAgICAgICAgICAgIGlmIChwYXJhbU1vZGUpIHsKICAgICAgICAgICAgICBwYXJhbXMgPSBwYXJhbXMuY29uY2F0KG5vZGVTdHIudmFsdWVzKTsKICAgICAgICAgICAgICBub2RlU3RyID0gbm9kZVN0ci50ZXh0OwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoIiIgIT09IG5vZGVTdHIpIHsKICAgICAgICAgICAgICBub2RlU3RyID0gIigiICsgbm9kZVN0ciArICIpIjsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmICgiIiAhPT0gbm9kZVN0cikgewogICAgICAgICAgICBpZiAoIiIgIT09IHN0cikgewogICAgICAgICAgICAgIHN0ciArPSAiICIgKyBjaGlsZC50eXBlICsgIiAiOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzdHIgKz0gbm9kZVN0cjsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChwYXJhbU1vZGUpIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRleHQ6IHN0ciwKICAgICAgICAgICAgdmFsdWVzOiBwYXJhbXMKICAgICAgICAgIH07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBzdHI7CiAgICAgICAgfQogICAgICB9OwogICAgICAvKgogICAgICBDbG9uZSB0aGlzIGV4cHJlc3Npb24uCiAgICAgIAogICAgICBOb3RlIHRoYXQgdGhlIGFsZ29yaXRobSBjb250YWluZWQgd2l0aGluIHRoaXMgbWV0aG9kIGlzIHByb2JhYmx5IG5vbi1vcHRpbWFsLCBzbyBwbGVhc2UgYXZvaWQgY2xvbmluZyBsYXJnZQogICAgICBleHByZXNzaW9uIHRyZWVzLgogICAgICAqLwoKCiAgICAgIEV4cHJlc3Npb24ucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBuZXdJbnN0YW5jZSwgX2Nsb25lVHJlZTI7CgogICAgICAgIG5ld0luc3RhbmNlID0gbmV3IHRoaXMuY29uc3RydWN0b3IoKTsKCiAgICAgICAgKF9jbG9uZVRyZWUyID0gZnVuY3Rpb24gX2Nsb25lVHJlZShub2RlKSB7CiAgICAgICAgICB2YXIgY2hpbGQsIF9pLCBfbGVuLCBfcmVmLCBfcmVzdWx0czsKCiAgICAgICAgICBfcmVmID0gbm9kZS5ub2RlczsKICAgICAgICAgIF9yZXN1bHRzID0gW107CgogICAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICAgIGNoaWxkID0gX3JlZltfaV07CgogICAgICAgICAgICBpZiAoY2hpbGQuZXhwciAhPSBudWxsKSB7CiAgICAgICAgICAgICAgX3Jlc3VsdHMucHVzaChuZXdJbnN0YW5jZS5jdXJyZW50Lm5vZGVzLnB1c2goX2Nsb25lMihjaGlsZCkpKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBuZXdJbnN0YW5jZS5fYmVnaW4oY2hpbGQudHlwZSk7CgogICAgICAgICAgICAgIF9jbG9uZVRyZWUyKGNoaWxkKTsKCiAgICAgICAgICAgICAgaWYgKCF0aGlzLmN1cnJlbnQgPT09IGNoaWxkKSB7CiAgICAgICAgICAgICAgICBfcmVzdWx0cy5wdXNoKG5ld0luc3RhbmNlLmVuZCgpKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3Jlc3VsdHMucHVzaCh2b2lkIDApOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBfcmVzdWx0czsKICAgICAgICB9KSh0aGlzLnRyZWUpOwoKICAgICAgICByZXR1cm4gbmV3SW5zdGFuY2U7CiAgICAgIH07CgogICAgICByZXR1cm4gRXhwcmVzc2lvbjsKICAgIH0oY2xzLkJhc2VCdWlsZGVyKTsKCiAgICBjbHMuQmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhCbG9jaywgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIEJsb2NrKCkgewogICAgICAgIF9yZWYgPSBCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICByZXR1cm4gX3JlZjsKICAgICAgfQoKICAgICAgQmxvY2sucHJvdG90eXBlLmV4cG9zZWRNZXRob2RzID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBhdHRyLCByZXQsIHZhbHVlOwogICAgICAgIHJldCA9IHt9OwoKICAgICAgICBmb3IgKGF0dHIgaW4gdGhpcykgewogICAgICAgICAgdmFsdWUgPSB0aGlzW2F0dHJdOwoKICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICJmdW5jdGlvbiIgJiYgYXR0ci5jaGFyQXQoMCkgIT09ICdfJyAmJiAhY2xzLkJsb2NrLnByb3RvdHlwZVthdHRyXSkgewogICAgICAgICAgICByZXRbYXR0cl0gPSB2YWx1ZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiByZXQ7CiAgICAgIH07CgogICAgICBCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9OwoKICAgICAgQmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW0gPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHRleHQ6IHRoaXMuYnVpbGRTdHIocXVlcnlCdWlsZGVyKSwKICAgICAgICAgIHZhbHVlczogW10KICAgICAgICB9OwogICAgICB9OwoKICAgICAgcmV0dXJuIEJsb2NrOwogICAgfShjbHMuQmFzZUJ1aWxkZXIpOwoKICAgIGNscy5TdHJpbmdCbG9jayA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKFN0cmluZ0Jsb2NrLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gU3RyaW5nQmxvY2sob3B0aW9ucywgc3RyKSB7CiAgICAgICAgU3RyaW5nQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7CgogICAgICAgIHRoaXMuc3RyID0gc3RyOwogICAgICB9CgogICAgICBTdHJpbmdCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc3RyOwogICAgICB9OwoKICAgICAgcmV0dXJuIFN0cmluZ0Jsb2NrOwogICAgfShjbHMuQmxvY2spOwoKICAgIGNscy5BYnN0cmFjdFZhbHVlQmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhBYnN0cmFjdFZhbHVlQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBBYnN0cmFjdFZhbHVlQmxvY2sob3B0aW9ucykgewogICAgICAgIEFic3RyYWN0VmFsdWVCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTsKCiAgICAgICAgdGhpcy5fc3RyID0gJyc7CiAgICAgICAgdGhpcy5fdmFsdWVzID0gW107CiAgICAgIH0KCiAgICAgIEFic3RyYWN0VmFsdWVCbG9jay5wcm90b3R5cGUuX3NldFZhbHVlID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBzdHIsIHZhbHVlczsKICAgICAgICBzdHIgPSBhcmd1bWVudHNbMF0sIHZhbHVlcyA9IDIgPD0gYXJndW1lbnRzLmxlbmd0aCA/IF9fc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpIDogW107CiAgICAgICAgdGhpcy5fc3RyID0gc3RyOwogICAgICAgIHRoaXMuX3ZhbHVlcyA9IHZhbHVlczsKICAgICAgICByZXR1cm4gdGhpczsKICAgICAgfTsKCiAgICAgIEFic3RyYWN0VmFsdWVCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIGMsIGZpbmFsU3RyLCBpZHgsIHN0ciwgdmFsdWVzLCBfaSwgX3JlZjE7CgogICAgICAgIHN0ciA9IHRoaXMuX3N0cjsKICAgICAgICBmaW5hbFN0ciA9ICcnOwogICAgICAgIHZhbHVlcyA9IFtdLmNvbmNhdCh0aGlzLl92YWx1ZXMpOwoKICAgICAgICBmb3IgKGlkeCA9IF9pID0gMCwgX3JlZjEgPSBzdHIubGVuZ3RoOyAwIDw9IF9yZWYxID8gX2kgPCBfcmVmMSA6IF9pID4gX3JlZjE7IGlkeCA9IDAgPD0gX3JlZjEgPyArK19pIDogLS1faSkgewogICAgICAgICAgYyA9IHN0ci5jaGFyQXQoaWR4KTsKCiAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnBhcmFtZXRlckNoYXJhY3RlciA9PT0gYyAmJiAwIDwgdmFsdWVzLmxlbmd0aCkgewogICAgICAgICAgICBjID0gdmFsdWVzLnNoaWZ0KCk7CiAgICAgICAgICB9CgogICAgICAgICAgZmluYWxTdHIgKz0gYzsKICAgICAgICB9CgogICAgICAgIHJldHVybiBmaW5hbFN0cjsKICAgICAgfTsKCiAgICAgIEFic3RyYWN0VmFsdWVCbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbSA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogdGhpcy5fc3RyLAogICAgICAgICAgdmFsdWVzOiB0aGlzLl92YWx1ZXMKICAgICAgICB9OwogICAgICB9OwoKICAgICAgcmV0dXJuIEFic3RyYWN0VmFsdWVCbG9jazsKICAgIH0oY2xzLkJsb2NrKTsKCiAgICBjbHMuRnVuY3Rpb25CbG9jayA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKEZ1bmN0aW9uQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBGdW5jdGlvbkJsb2NrKCkgewogICAgICAgIF9yZWYxID0gRnVuY3Rpb25CbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICByZXR1cm4gX3JlZjE7CiAgICAgIH0KCiAgICAgIEZ1bmN0aW9uQmxvY2sucHJvdG90eXBlWyJmdW5jdGlvbiJdID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBzdHIsIHZhbHVlczsKICAgICAgICBzdHIgPSBhcmd1bWVudHNbMF0sIHZhbHVlcyA9IDIgPD0gYXJndW1lbnRzLmxlbmd0aCA/IF9fc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpIDogW107CiAgICAgICAgcmV0dXJuIHRoaXMuX3NldFZhbHVlLmFwcGx5KHRoaXMsIFtzdHJdLmNvbmNhdCh2YWx1ZXMpKTsKICAgICAgfTsKCiAgICAgIHJldHVybiBGdW5jdGlvbkJsb2NrOwogICAgfShjbHMuQWJzdHJhY3RWYWx1ZUJsb2NrKTsKCiAgICBjbHMuZnZhbCA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGluc3QsIHN0ciwgdmFsdWVzOwogICAgICBzdHIgPSBhcmd1bWVudHNbMF0sIHZhbHVlcyA9IDIgPD0gYXJndW1lbnRzLmxlbmd0aCA/IF9fc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpIDogW107CiAgICAgIGluc3QgPSBuZXcgY2xzLkZ1bmN0aW9uQmxvY2soKTsKICAgICAgcmV0dXJuIGluc3RbImZ1bmN0aW9uIl0uYXBwbHkoaW5zdCwgW3N0cl0uY29uY2F0KHZhbHVlcykpOwogICAgfTsKCiAgICBjbHMucmVnaXN0ZXJWYWx1ZUhhbmRsZXIoY2xzLkZ1bmN0aW9uQmxvY2ssIGZ1bmN0aW9uICh2YWx1ZSwgYXNQYXJhbSkgewogICAgICBpZiAoYXNQYXJhbSA9PSBudWxsKSB7CiAgICAgICAgYXNQYXJhbSA9IGZhbHNlOwogICAgICB9CgogICAgICBpZiAoYXNQYXJhbSkgewogICAgICAgIHJldHVybiB2YWx1ZS5idWlsZFBhcmFtKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHZhbHVlLmJ1aWxkU3RyKCk7CiAgICAgIH0KICAgIH0pOwoKICAgIGNscy5BYnN0cmFjdFRhYmxlQmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhBYnN0cmFjdFRhYmxlQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBBYnN0cmFjdFRhYmxlQmxvY2sob3B0aW9ucykgewogICAgICAgIEFic3RyYWN0VGFibGVCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTsKCiAgICAgICAgdGhpcy50YWJsZXMgPSBbXTsKICAgICAgfQoKICAgICAgQWJzdHJhY3RUYWJsZUJsb2NrLnByb3RvdHlwZS5fdGFibGUgPSBmdW5jdGlvbiAodGFibGUsIGFsaWFzKSB7CiAgICAgICAgaWYgKGFsaWFzID09IG51bGwpIHsKICAgICAgICAgIGFsaWFzID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIGlmIChhbGlhcykgewogICAgICAgICAgYWxpYXMgPSB0aGlzLl9zYW5pdGl6ZVRhYmxlQWxpYXMoYWxpYXMpOwogICAgICAgIH0KCiAgICAgICAgdGFibGUgPSB0aGlzLl9zYW5pdGl6ZVRhYmxlKHRhYmxlLCB0aGlzLm9wdGlvbnMuYWxsb3dOZXN0ZWQgfHwgZmFsc2UpOwoKICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNpbmdsZVRhYmxlKSB7CiAgICAgICAgICB0aGlzLnRhYmxlcyA9IFtdOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMudGFibGVzLnB1c2goewogICAgICAgICAgdGFibGU6IHRhYmxlLAogICAgICAgICAgYWxpYXM6IGFsaWFzCiAgICAgICAgfSk7CiAgICAgIH07CgogICAgICBBYnN0cmFjdFRhYmxlQmxvY2sucHJvdG90eXBlLl9oYXNUYWJsZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gMCA8IHRoaXMudGFibGVzLmxlbmd0aDsKICAgICAgfTsKCiAgICAgIEFic3RyYWN0VGFibGVCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIHRhYmxlLCB0YWJsZXMsIF9pLCBfbGVuLCBfcmVmMjsKCiAgICAgICAgaWYgKCF0aGlzLl9oYXNUYWJsZSgpKSB7CiAgICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgfQoKICAgICAgICB0YWJsZXMgPSAiIjsKICAgICAgICBfcmVmMiA9IHRoaXMudGFibGVzOwoKICAgICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYyLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICB0YWJsZSA9IF9yZWYyW19pXTsKCiAgICAgICAgICBpZiAoIiIgIT09IHRhYmxlcykgewogICAgICAgICAgICB0YWJsZXMgKz0gIiwgIjsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoInN0cmluZyIgPT09IHR5cGVvZiB0YWJsZS50YWJsZSkgewogICAgICAgICAgICB0YWJsZXMgKz0gdGFibGUudGFibGU7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0YWJsZXMgKz0gIigiICsgdGFibGUudGFibGUgKyAiKSI7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHRhYmxlLmFsaWFzKSB7CiAgICAgICAgICAgIHRhYmxlcyArPSAiICIgKyB0YWJsZS5hbGlhczsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB0YWJsZXM7CiAgICAgIH07CgogICAgICBBYnN0cmFjdFRhYmxlQmxvY2sucHJvdG90eXBlLl9idWlsZFBhcmFtID0gZnVuY3Rpb24gKHF1ZXJ5QnVpbGRlciwgcHJlZml4KSB7CiAgICAgICAgdmFyIGJsaywgcCwgcGFyYW1TdHIsIHBhcmFtcywgcmV0LCB2LCBfaSwgX2osIF9rLCBfbGVuLCBfbGVuMSwgX2xlbjIsIF9yZWYyLCBfcmVmMzsKCiAgICAgICAgaWYgKHByZWZpeCA9PSBudWxsKSB7CiAgICAgICAgICBwcmVmaXggPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgcmV0ID0gewogICAgICAgICAgdGV4dDogIiIsCiAgICAgICAgICB2YWx1ZXM6IFtdCiAgICAgICAgfTsKICAgICAgICBwYXJhbXMgPSBbXTsKICAgICAgICBwYXJhbVN0ciA9ICIiOwoKICAgICAgICBpZiAoIXRoaXMuX2hhc1RhYmxlKCkpIHsKICAgICAgICAgIHJldHVybiByZXQ7CiAgICAgICAgfQoKICAgICAgICBfcmVmMiA9IHRoaXMudGFibGVzOwoKICAgICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYyLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICBibGsgPSBfcmVmMltfaV07CgogICAgICAgICAgaWYgKCJzdHJpbmciID09PSB0eXBlb2YgYmxrLnRhYmxlKSB7CiAgICAgICAgICAgIHAgPSB7CiAgICAgICAgICAgICAgInRleHQiOiAiIiArIGJsay50YWJsZSwKICAgICAgICAgICAgICAidmFsdWVzIjogW10KICAgICAgICAgICAgfTsKICAgICAgICAgIH0gZWxzZSBpZiAoYmxrLnRhYmxlIGluc3RhbmNlb2YgY2xzLlF1ZXJ5QnVpbGRlcikgewogICAgICAgICAgICBibGsudGFibGUudXBkYXRlT3B0aW9ucyh7CiAgICAgICAgICAgICAgIm5lc3RlZEJ1aWxkZXIiOiB0cnVlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBwID0gYmxrLnRhYmxlLnRvUGFyYW0oKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGJsay51cGRhdGVPcHRpb25zKHsKICAgICAgICAgICAgICAibmVzdGVkQnVpbGRlciI6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHAgPSBibGsuYnVpbGRQYXJhbShxdWVyeUJ1aWxkZXIpOwogICAgICAgICAgfQoKICAgICAgICAgIHAudGFibGUgPSBibGs7CiAgICAgICAgICBwYXJhbXMucHVzaChwKTsKICAgICAgICB9CgogICAgICAgIGZvciAoX2ogPSAwLCBfbGVuMSA9IHBhcmFtcy5sZW5ndGg7IF9qIDwgX2xlbjE7IF9qKyspIHsKICAgICAgICAgIHAgPSBwYXJhbXNbX2pdOwoKICAgICAgICAgIGlmIChwYXJhbVN0ciAhPT0gIiIpIHsKICAgICAgICAgICAgcGFyYW1TdHIgKz0gIiwgIjsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChwcmVmaXggIT0gbnVsbCAmJiBwcmVmaXggIT09ICIiKSB7CiAgICAgICAgICAgICAgcGFyYW1TdHIgKz0gIiIgKyBwcmVmaXggKyAiICIgKyBwYXJhbVN0cjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcGFyYW1TdHI7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKCJzdHJpbmciID09PSB0eXBlb2YgcC50YWJsZS50YWJsZSkgewogICAgICAgICAgICBwYXJhbVN0ciArPSAiIiArIHAudGV4dDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBhcmFtU3RyICs9ICIoIiArIHAudGV4dCArICIpIjsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAocC50YWJsZS5hbGlhcyAhPSBudWxsKSB7CiAgICAgICAgICAgIHBhcmFtU3RyICs9ICIgIiArIHAudGFibGUuYWxpYXM7CiAgICAgICAgICB9CgogICAgICAgICAgX3JlZjMgPSBwLnZhbHVlczsKCiAgICAgICAgICBmb3IgKF9rID0gMCwgX2xlbjIgPSBfcmVmMy5sZW5ndGg7IF9rIDwgX2xlbjI7IF9rKyspIHsKICAgICAgICAgICAgdiA9IF9yZWYzW19rXTsKICAgICAgICAgICAgcmV0LnZhbHVlcy5wdXNoKHRoaXMuX2Zvcm1hdEN1c3RvbVZhbHVlKHYpKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldC50ZXh0ICs9IHBhcmFtU3RyOwogICAgICAgIHJldHVybiByZXQ7CiAgICAgIH07CgogICAgICBBYnN0cmFjdFRhYmxlQmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW0gPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX2J1aWxkUGFyYW0ocXVlcnlCdWlsZGVyKTsKICAgICAgfTsKCiAgICAgIHJldHVybiBBYnN0cmFjdFRhYmxlQmxvY2s7CiAgICB9KGNscy5CbG9jayk7CgogICAgY2xzLlVwZGF0ZVRhYmxlQmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhVcGRhdGVUYWJsZUJsb2NrLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gVXBkYXRlVGFibGVCbG9jaygpIHsKICAgICAgICBfcmVmMiA9IFVwZGF0ZVRhYmxlQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgcmV0dXJuIF9yZWYyOwogICAgICB9CgogICAgICBVcGRhdGVUYWJsZUJsb2NrLnByb3RvdHlwZS50YWJsZSA9IGZ1bmN0aW9uICh0YWJsZSwgYWxpYXMpIHsKICAgICAgICBpZiAoYWxpYXMgPT0gbnVsbCkgewogICAgICAgICAgYWxpYXMgPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuX3RhYmxlKHRhYmxlLCBhbGlhcyk7CiAgICAgIH07CgogICAgICByZXR1cm4gVXBkYXRlVGFibGVCbG9jazsKICAgIH0oY2xzLkFic3RyYWN0VGFibGVCbG9jayk7CgogICAgY2xzLkZyb21UYWJsZUJsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoRnJvbVRhYmxlQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBGcm9tVGFibGVCbG9jaygpIHsKICAgICAgICBfcmVmMyA9IEZyb21UYWJsZUJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIHJldHVybiBfcmVmMzsKICAgICAgfQoKICAgICAgRnJvbVRhYmxlQmxvY2sucHJvdG90eXBlLmZyb20gPSBmdW5jdGlvbiAodGFibGUsIGFsaWFzKSB7CiAgICAgICAgaWYgKGFsaWFzID09IG51bGwpIHsKICAgICAgICAgIGFsaWFzID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzLl90YWJsZSh0YWJsZSwgYWxpYXMpOwogICAgICB9OwoKICAgICAgRnJvbVRhYmxlQmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyID0gZnVuY3Rpb24gKHF1ZXJ5QnVpbGRlcikgewogICAgICAgIHZhciB0YWJsZXM7CiAgICAgICAgdGFibGVzID0gRnJvbVRhYmxlQmxvY2suX19zdXBlcl9fLmJ1aWxkU3RyLmNhbGwodGhpcywgcXVlcnlCdWlsZGVyKTsKCiAgICAgICAgaWYgKHRhYmxlcy5sZW5ndGgpIHsKICAgICAgICAgIHJldHVybiAiRlJPTSAiICsgdGFibGVzOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgRnJvbVRhYmxlQmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW0gPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX2J1aWxkUGFyYW0ocXVlcnlCdWlsZGVyLCAiRlJPTSIpOwogICAgICB9OwoKICAgICAgcmV0dXJuIEZyb21UYWJsZUJsb2NrOwogICAgfShjbHMuQWJzdHJhY3RUYWJsZUJsb2NrKTsKCiAgICBjbHMuSW50b1RhYmxlQmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhJbnRvVGFibGVCbG9jaywgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIEludG9UYWJsZUJsb2NrKG9wdGlvbnMpIHsKICAgICAgICBJbnRvVGFibGVCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTsKCiAgICAgICAgdGhpcy50YWJsZSA9IG51bGw7CiAgICAgIH0KCiAgICAgIEludG9UYWJsZUJsb2NrLnByb3RvdHlwZS5pbnRvID0gZnVuY3Rpb24gKHRhYmxlKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudGFibGUgPSB0aGlzLl9zYW5pdGl6ZVRhYmxlKHRhYmxlLCBmYWxzZSk7CiAgICAgIH07CgogICAgICBJbnRvVGFibGVCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgaWYgKCF0aGlzLnRhYmxlKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoImludG8oKSBuZWVkcyB0byBiZSBjYWxsZWQiKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAiSU5UTyAiICsgdGhpcy50YWJsZTsKICAgICAgfTsKCiAgICAgIHJldHVybiBJbnRvVGFibGVCbG9jazsKICAgIH0oY2xzLkJsb2NrKTsKCiAgICBjbHMuR2V0RmllbGRCbG9jayA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKEdldEZpZWxkQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBHZXRGaWVsZEJsb2NrKG9wdGlvbnMpIHsKICAgICAgICBHZXRGaWVsZEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG9wdGlvbnMpOwoKICAgICAgICB0aGlzLl9maWVsZEFsaWFzZXMgPSB7fTsKICAgICAgICB0aGlzLl9maWVsZHMgPSBbXTsKICAgICAgfQoKICAgICAgR2V0RmllbGRCbG9jay5wcm90b3R5cGUuZmllbGRzID0gZnVuY3Rpb24gKF9maWVsZHMsIG9wdGlvbnMpIHsKICAgICAgICB2YXIgYWxpYXMsIGZpZWxkLCBfaSwgX2xlbiwgX3Jlc3VsdHMsIF9yZXN1bHRzMTsKCiAgICAgICAgaWYgKG9wdGlvbnMgPT0gbnVsbCkgewogICAgICAgICAgb3B0aW9ucyA9IHt9OwogICAgICAgIH0KCiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoX2ZpZWxkcykpIHsKICAgICAgICAgIF9yZXN1bHRzID0gW107CgogICAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfZmllbGRzLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICAgIGZpZWxkID0gX2ZpZWxkc1tfaV07CgogICAgICAgICAgICBfcmVzdWx0cy5wdXNoKHRoaXMuZmllbGQoZmllbGQsIG51bGwsIG9wdGlvbnMpKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gX3Jlc3VsdHM7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF9yZXN1bHRzMSA9IFtdOwoKICAgICAgICAgIGZvciAoZmllbGQgaW4gX2ZpZWxkcykgewogICAgICAgICAgICBhbGlhcyA9IF9maWVsZHNbZmllbGRdOwoKICAgICAgICAgICAgX3Jlc3VsdHMxLnB1c2godGhpcy5maWVsZChmaWVsZCwgYWxpYXMsIG9wdGlvbnMpKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gX3Jlc3VsdHMxOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIEdldEZpZWxkQmxvY2sucHJvdG90eXBlLmZpZWxkID0gZnVuY3Rpb24gKGZpZWxkLCBhbGlhcywgb3B0aW9ucykgewogICAgICAgIGlmIChhbGlhcyA9PSBudWxsKSB7CiAgICAgICAgICBhbGlhcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAob3B0aW9ucyA9PSBudWxsKSB7CiAgICAgICAgICBvcHRpb25zID0ge307CiAgICAgICAgfQoKICAgICAgICBmaWVsZCA9IHRoaXMuX3Nhbml0aXplRmllbGQoZmllbGQsIG9wdGlvbnMpOwoKICAgICAgICBpZiAoYWxpYXMpIHsKICAgICAgICAgIGFsaWFzID0gdGhpcy5fc2FuaXRpemVGaWVsZEFsaWFzKGFsaWFzKTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLl9maWVsZEFsaWFzZXNbZmllbGRdID09PSBhbGlhcykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5fZmllbGRBbGlhc2VzW2ZpZWxkXSA9IGFsaWFzOwogICAgICAgIHJldHVybiB0aGlzLl9maWVsZHMucHVzaCh7CiAgICAgICAgICBuYW1lOiBmaWVsZCwKICAgICAgICAgIGFsaWFzOiBhbGlhcwogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgR2V0RmllbGRCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIGZpZWxkLCBmaWVsZHMsIF9pLCBfbGVuLCBfcmVmNDsKCiAgICAgICAgaWYgKCFxdWVyeUJ1aWxkZXIuZ2V0QmxvY2soY2xzLkZyb21UYWJsZUJsb2NrKS5faGFzVGFibGUoKSkgewogICAgICAgICAgcmV0dXJuICIiOwogICAgICAgIH0KCiAgICAgICAgZmllbGRzID0gIiI7CiAgICAgICAgX3JlZjQgPSB0aGlzLl9maWVsZHM7CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjQubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgIGZpZWxkID0gX3JlZjRbX2ldOwoKICAgICAgICAgIGlmICgiIiAhPT0gZmllbGRzKSB7CiAgICAgICAgICAgIGZpZWxkcyArPSAiLCAiOwogICAgICAgICAgfQoKICAgICAgICAgIGZpZWxkcyArPSBmaWVsZC5uYW1lOwoKICAgICAgICAgIGlmIChmaWVsZC5hbGlhcykgewogICAgICAgICAgICBmaWVsZHMgKz0gIiBBUyAiICsgZmllbGQuYWxpYXM7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoIiIgPT09IGZpZWxkcykgewogICAgICAgICAgcmV0dXJuICIqIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZpZWxkczsKICAgICAgICB9CiAgICAgIH07CgogICAgICByZXR1cm4gR2V0RmllbGRCbG9jazsKICAgIH0oY2xzLkJsb2NrKTsKCiAgICBjbHMuQWJzdHJhY3RTZXRGaWVsZEJsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoQWJzdHJhY3RTZXRGaWVsZEJsb2NrLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gQWJzdHJhY3RTZXRGaWVsZEJsb2NrKG9wdGlvbnMpIHsKICAgICAgICBBYnN0cmFjdFNldEZpZWxkQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7CgogICAgICAgIHRoaXMuZmllbGRPcHRpb25zID0gW107CiAgICAgICAgdGhpcy5maWVsZHMgPSBbXTsKICAgICAgICB0aGlzLnZhbHVlcyA9IFtdOwogICAgICB9CgogICAgICBBYnN0cmFjdFNldEZpZWxkQmxvY2sucHJvdG90eXBlLl9zZXQgPSBmdW5jdGlvbiAoZmllbGQsIHZhbHVlLCBvcHRpb25zKSB7CiAgICAgICAgdmFyIGluZGV4OwoKICAgICAgICBpZiAob3B0aW9ucyA9PSBudWxsKSB7CiAgICAgICAgICBvcHRpb25zID0ge307CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy52YWx1ZXMubGVuZ3RoID4gMSkgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgY2FsbCBzZXQgb3Igc2V0RmllbGRzIG9uIG11bHRpcGxlIHJvd3Mgb2YgZmllbGRzLiIpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHZvaWQgMCAhPT0gdmFsdWUpIHsKICAgICAgICAgIHZhbHVlID0gdGhpcy5fc2FuaXRpemVWYWx1ZSh2YWx1ZSk7CiAgICAgICAgfQoKICAgICAgICBpbmRleCA9IHRoaXMuZmllbGRzLmluZGV4T2YodGhpcy5fc2FuaXRpemVGaWVsZChmaWVsZCwgb3B0aW9ucykpOwoKICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7CiAgICAgICAgICB0aGlzLnZhbHVlc1swXVtpbmRleF0gPSB2YWx1ZTsKICAgICAgICAgIHRoaXMuZmllbGRPcHRpb25zWzBdW2luZGV4XSA9IG9wdGlvbnM7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuZmllbGRzLnB1c2godGhpcy5fc2FuaXRpemVGaWVsZChmaWVsZCwgb3B0aW9ucykpOwogICAgICAgICAgaW5kZXggPSB0aGlzLmZpZWxkcy5sZW5ndGggLSAxOwoKICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMudmFsdWVzWzBdKSkgewogICAgICAgICAgICB0aGlzLnZhbHVlc1swXVtpbmRleF0gPSB2YWx1ZTsKICAgICAgICAgICAgdGhpcy5maWVsZE9wdGlvbnNbMF1baW5kZXhdID0gb3B0aW9uczsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMudmFsdWVzLnB1c2goW3ZhbHVlXSk7CiAgICAgICAgICAgIHRoaXMuZmllbGRPcHRpb25zLnB1c2goW29wdGlvbnNdKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzOwogICAgICB9OwoKICAgICAgQWJzdHJhY3RTZXRGaWVsZEJsb2NrLnByb3RvdHlwZS5fc2V0RmllbGRzID0gZnVuY3Rpb24gKGZpZWxkcywgb3B0aW9ucykgewogICAgICAgIHZhciBmaWVsZDsKCiAgICAgICAgaWYgKG9wdGlvbnMgPT0gbnVsbCkgewogICAgICAgICAgb3B0aW9ucyA9IHt9OwogICAgICAgIH0KCiAgICAgICAgaWYgKF90eXBlb2YoZmllbGRzKSAhPT0gJ29iamVjdCcpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiRXhwZWN0ZWQgYW4gb2JqZWN0IGJ1dCBnb3QgIiArIF90eXBlb2YoZmllbGRzKSk7CiAgICAgICAgfQoKICAgICAgICBmb3IgKGZpZWxkIGluIGZpZWxkcykgewogICAgICAgICAgaWYgKCFfX2hhc1Byb3AuY2FsbChmaWVsZHMsIGZpZWxkKSkgY29udGludWU7CgogICAgICAgICAgdGhpcy5fc2V0KGZpZWxkLCBmaWVsZHNbZmllbGRdLCBvcHRpb25zKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzOwogICAgICB9OwoKICAgICAgQWJzdHJhY3RTZXRGaWVsZEJsb2NrLnByb3RvdHlwZS5fc2V0RmllbGRzUm93cyA9IGZ1bmN0aW9uIChmaWVsZHNSb3dzLCBvcHRpb25zKSB7CiAgICAgICAgdmFyIGZpZWxkLCBpLCBpbmRleCwgdmFsdWUsIF9pLCBfcmVmNCwgX3JlZjU7CgogICAgICAgIGlmIChvcHRpb25zID09IG51bGwpIHsKICAgICAgICAgIG9wdGlvbnMgPSB7fTsKICAgICAgICB9CgogICAgICAgIGlmICghQXJyYXkuaXNBcnJheShmaWVsZHNSb3dzKSkgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJFeHBlY3RlZCBhbiBhcnJheSBvZiBvYmplY3RzIGJ1dCBnb3QgIiArIF90eXBlb2YoZmllbGRzUm93cykpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5maWVsZHMgPSBbXTsKICAgICAgICB0aGlzLnZhbHVlcyA9IFtdOwoKICAgICAgICBmb3IgKGkgPSBfaSA9IDAsIF9yZWY0ID0gZmllbGRzUm93cy5sZW5ndGg7IDAgPD0gX3JlZjQgPyBfaSA8IF9yZWY0IDogX2kgPiBfcmVmNDsgaSA9IDAgPD0gX3JlZjQgPyArK19pIDogLS1faSkgewogICAgICAgICAgX3JlZjUgPSBmaWVsZHNSb3dzW2ldOwoKICAgICAgICAgIGZvciAoZmllbGQgaW4gX3JlZjUpIHsKICAgICAgICAgICAgaWYgKCFfX2hhc1Byb3AuY2FsbChfcmVmNSwgZmllbGQpKSBjb250aW51ZTsKICAgICAgICAgICAgaW5kZXggPSB0aGlzLmZpZWxkcy5pbmRleE9mKHRoaXMuX3Nhbml0aXplRmllbGQoZmllbGQsIG9wdGlvbnMpKTsKCiAgICAgICAgICAgIGlmICgwIDwgaSAmJiAtMSA9PT0gaW5kZXgpIHsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FsbCBmaWVsZHMgaW4gc3Vic2VxdWVudCByb3dzIG11c3QgbWF0Y2ggdGhlIGZpZWxkcyBpbiB0aGUgZmlyc3Qgcm93Jyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgtMSA9PT0gaW5kZXgpIHsKICAgICAgICAgICAgICB0aGlzLmZpZWxkcy5wdXNoKHRoaXMuX3Nhbml0aXplRmllbGQoZmllbGQsIG9wdGlvbnMpKTsKICAgICAgICAgICAgICBpbmRleCA9IHRoaXMuZmllbGRzLmxlbmd0aCAtIDE7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhbHVlID0gdGhpcy5fc2FuaXRpemVWYWx1ZShmaWVsZHNSb3dzW2ldW2ZpZWxkXSk7CgogICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlc1tpXSkpIHsKICAgICAgICAgICAgICB0aGlzLnZhbHVlc1tpXVtpbmRleF0gPSB2YWx1ZTsKICAgICAgICAgICAgICB0aGlzLmZpZWxkT3B0aW9uc1tpXVtpbmRleF0gPSBvcHRpb25zOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHRoaXMudmFsdWVzW2ldID0gW3ZhbHVlXTsKICAgICAgICAgICAgICB0aGlzLmZpZWxkT3B0aW9uc1tpXSA9IFtvcHRpb25zXTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgIH07CgogICAgICBBYnN0cmFjdFNldEZpZWxkQmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRocm93IG5ldyBFcnJvcignTm90IHlldCBpbXBsZW1lbnRlZCcpOwogICAgICB9OwoKICAgICAgQWJzdHJhY3RTZXRGaWVsZEJsb2NrLnByb3RvdHlwZS5idWlsZFBhcmFtID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRocm93IG5ldyBFcnJvcignTm90IHlldCBpbXBsZW1lbnRlZCcpOwogICAgICB9OwoKICAgICAgcmV0dXJuIEFic3RyYWN0U2V0RmllbGRCbG9jazsKICAgIH0oY2xzLkJsb2NrKTsKCiAgICBjbHMuU2V0RmllbGRCbG9jayA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKFNldEZpZWxkQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBTZXRGaWVsZEJsb2NrKCkgewogICAgICAgIF9yZWY0ID0gU2V0RmllbGRCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICByZXR1cm4gX3JlZjQ7CiAgICAgIH0KCiAgICAgIFNldEZpZWxkQmxvY2sucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChmaWVsZCwgdmFsdWUsIG9wdGlvbnMpIHsKICAgICAgICByZXR1cm4gdGhpcy5fc2V0KGZpZWxkLCB2YWx1ZSwgb3B0aW9ucyk7CiAgICAgIH07CgogICAgICBTZXRGaWVsZEJsb2NrLnByb3RvdHlwZS5zZXRGaWVsZHMgPSBmdW5jdGlvbiAoZmllbGRzLCBvcHRpb25zKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX3NldEZpZWxkcyhmaWVsZHMsIG9wdGlvbnMpOwogICAgICB9OwoKICAgICAgU2V0RmllbGRCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIGZpZWxkLCBmaWVsZE9wdGlvbnMsIGksIHN0ciwgdmFsdWUsIF9pLCBfcmVmNTsKCiAgICAgICAgaWYgKDAgPj0gdGhpcy5maWVsZHMubGVuZ3RoKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoInNldCgpIG5lZWRzIHRvIGJlIGNhbGxlZCIpOwogICAgICAgIH0KCiAgICAgICAgc3RyID0gIiI7CgogICAgICAgIGZvciAoaSA9IF9pID0gMCwgX3JlZjUgPSB0aGlzLmZpZWxkcy5sZW5ndGg7IDAgPD0gX3JlZjUgPyBfaSA8IF9yZWY1IDogX2kgPiBfcmVmNTsgaSA9IDAgPD0gX3JlZjUgPyArK19pIDogLS1faSkgewogICAgICAgICAgZmllbGQgPSB0aGlzLmZpZWxkc1tpXTsKCiAgICAgICAgICBpZiAoIiIgIT09IHN0cikgewogICAgICAgICAgICBzdHIgKz0gIiwgIjsKICAgICAgICAgIH0KCiAgICAgICAgICB2YWx1ZSA9IHRoaXMudmFsdWVzWzBdW2ldOwogICAgICAgICAgZmllbGRPcHRpb25zID0gdGhpcy5maWVsZE9wdGlvbnNbMF1baV07CgogICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgICAgc3RyICs9IGZpZWxkOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc3RyICs9ICIiICsgZmllbGQgKyAiID0gIiArIHRoaXMuX2Zvcm1hdFZhbHVlKHZhbHVlLCBmaWVsZE9wdGlvbnMpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICJTRVQgIiArIHN0cjsKICAgICAgfTsKCiAgICAgIFNldEZpZWxkQmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW0gPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIGZpZWxkLCBpLCBwLCBzdHIsIHYsIHZhbHMsIHZhbHVlLCBfaSwgX2osIF9sZW4sIF9yZWY1LCBfcmVmNjsKCiAgICAgICAgaWYgKDAgPj0gdGhpcy5maWVsZHMubGVuZ3RoKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoInNldCgpIG5lZWRzIHRvIGJlIGNhbGxlZCIpOwogICAgICAgIH0KCiAgICAgICAgc3RyID0gIiI7CiAgICAgICAgdmFscyA9IFtdOwoKICAgICAgICBmb3IgKGkgPSBfaSA9IDAsIF9yZWY1ID0gdGhpcy5maWVsZHMubGVuZ3RoOyAwIDw9IF9yZWY1ID8gX2kgPCBfcmVmNSA6IF9pID4gX3JlZjU7IGkgPSAwIDw9IF9yZWY1ID8gKytfaSA6IC0tX2kpIHsKICAgICAgICAgIGZpZWxkID0gdGhpcy5maWVsZHNbaV07CgogICAgICAgICAgaWYgKCIiICE9PSBzdHIpIHsKICAgICAgICAgICAgc3RyICs9ICIsICI7CiAgICAgICAgICB9CgogICAgICAgICAgdmFsdWUgPSB0aGlzLnZhbHVlc1swXVtpXTsKCiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykgewogICAgICAgICAgICBzdHIgKz0gZmllbGQ7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwID0gdGhpcy5fZm9ybWF0VmFsdWVBc1BhcmFtKHZhbHVlKTsKCiAgICAgICAgICAgIGlmICgocCAhPSBudWxsID8gcC50ZXh0IDogdm9pZCAwKSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgc3RyICs9ICIiICsgZmllbGQgKyAiID0gKCIgKyBwLnRleHQgKyAiKSI7CiAgICAgICAgICAgICAgX3JlZjYgPSBwLnZhbHVlczsKCiAgICAgICAgICAgICAgZm9yIChfaiA9IDAsIF9sZW4gPSBfcmVmNi5sZW5ndGg7IF9qIDwgX2xlbjsgX2orKykgewogICAgICAgICAgICAgICAgdiA9IF9yZWY2W19qXTsKICAgICAgICAgICAgICAgIHZhbHMucHVzaCh2KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgc3RyICs9ICIiICsgZmllbGQgKyAiID0gIiArIHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJDaGFyYWN0ZXI7CiAgICAgICAgICAgICAgdmFscy5wdXNoKHApOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogIlNFVCAiICsgc3RyLAogICAgICAgICAgdmFsdWVzOiB2YWxzCiAgICAgICAgfTsKICAgICAgfTsKCiAgICAgIHJldHVybiBTZXRGaWVsZEJsb2NrOwogICAgfShjbHMuQWJzdHJhY3RTZXRGaWVsZEJsb2NrKTsKCiAgICBjbHMuSW5zZXJ0RmllbGRWYWx1ZUJsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gSW5zZXJ0RmllbGRWYWx1ZUJsb2NrKCkgewogICAgICAgIF9yZWY1ID0gSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIHJldHVybiBfcmVmNTsKICAgICAgfQoKICAgICAgSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoZmllbGQsIHZhbHVlLCBvcHRpb25zKSB7CiAgICAgICAgaWYgKG9wdGlvbnMgPT0gbnVsbCkgewogICAgICAgICAgb3B0aW9ucyA9IHt9OwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuX3NldChmaWVsZCwgdmFsdWUsIG9wdGlvbnMpOwogICAgICB9OwoKICAgICAgSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5zZXRGaWVsZHMgPSBmdW5jdGlvbiAoZmllbGRzLCBvcHRpb25zKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX3NldEZpZWxkcyhmaWVsZHMsIG9wdGlvbnMpOwogICAgICB9OwoKICAgICAgSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5zZXRGaWVsZHNSb3dzID0gZnVuY3Rpb24gKGZpZWxkc1Jvd3MsIG9wdGlvbnMpIHsKICAgICAgICByZXR1cm4gdGhpcy5fc2V0RmllbGRzUm93cyhmaWVsZHNSb3dzLCBvcHRpb25zKTsKICAgICAgfTsKCiAgICAgIEluc2VydEZpZWxkVmFsdWVCbG9jay5wcm90b3R5cGUuX2J1aWxkVmFscyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgZm9ybWF0dGVkVmFsdWUsIGksIGosIHZhbHMsIF9pLCBfaiwgX3JlZjYsIF9yZWY3OwoKICAgICAgICB2YWxzID0gW107CgogICAgICAgIGZvciAoaSA9IF9pID0gMCwgX3JlZjYgPSB0aGlzLnZhbHVlcy5sZW5ndGg7IDAgPD0gX3JlZjYgPyBfaSA8IF9yZWY2IDogX2kgPiBfcmVmNjsgaSA9IDAgPD0gX3JlZjYgPyArK19pIDogLS1faSkgewogICAgICAgICAgZm9yIChqID0gX2ogPSAwLCBfcmVmNyA9IHRoaXMudmFsdWVzW2ldLmxlbmd0aDsgMCA8PSBfcmVmNyA/IF9qIDwgX3JlZjcgOiBfaiA+IF9yZWY3OyBqID0gMCA8PSBfcmVmNyA/ICsrX2ogOiAtLV9qKSB7CiAgICAgICAgICAgIGZvcm1hdHRlZFZhbHVlID0gdGhpcy5fZm9ybWF0VmFsdWUodGhpcy52YWx1ZXNbaV1bal0sIHRoaXMuZmllbGRPcHRpb25zW2ldW2pdKTsKCiAgICAgICAgICAgIGlmICgnc3RyaW5nJyA9PT0gdHlwZW9mIHZhbHNbaV0pIHsKICAgICAgICAgICAgICB2YWxzW2ldICs9ICcsICcgKyBmb3JtYXR0ZWRWYWx1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB2YWxzW2ldID0gJycgKyBmb3JtYXR0ZWRWYWx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHZhbHM7CiAgICAgIH07CgogICAgICBJbnNlcnRGaWVsZFZhbHVlQmxvY2sucHJvdG90eXBlLl9idWlsZFZhbFBhcmFtcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgaSwgaiwgcCwgcGFyYW1zLCBzdHIsIHYsIHZhbHMsIF9pLCBfaiwgX2ssIF9sZW4sIF9yZWY2LCBfcmVmNywgX3JlZjg7CgogICAgICAgIHZhbHMgPSBbXTsKICAgICAgICBwYXJhbXMgPSBbXTsKCiAgICAgICAgZm9yIChpID0gX2kgPSAwLCBfcmVmNiA9IHRoaXMudmFsdWVzLmxlbmd0aDsgMCA8PSBfcmVmNiA/IF9pIDwgX3JlZjYgOiBfaSA+IF9yZWY2OyBpID0gMCA8PSBfcmVmNiA/ICsrX2kgOiAtLV9pKSB7CiAgICAgICAgICBmb3IgKGogPSBfaiA9IDAsIF9yZWY3ID0gdGhpcy52YWx1ZXNbaV0ubGVuZ3RoOyAwIDw9IF9yZWY3ID8gX2ogPCBfcmVmNyA6IF9qID4gX3JlZjc7IGogPSAwIDw9IF9yZWY3ID8gKytfaiA6IC0tX2opIHsKICAgICAgICAgICAgcCA9IHRoaXMuX2Zvcm1hdFZhbHVlQXNQYXJhbSh0aGlzLnZhbHVlc1tpXVtqXSk7CgogICAgICAgICAgICBpZiAoKHAgIT0gbnVsbCA/IHAudGV4dCA6IHZvaWQgMCkgIT0gbnVsbCkgewogICAgICAgICAgICAgIHN0ciA9IHAudGV4dDsKICAgICAgICAgICAgICBfcmVmOCA9IHAudmFsdWVzOwoKICAgICAgICAgICAgICBmb3IgKF9rID0gMCwgX2xlbiA9IF9yZWY4Lmxlbmd0aDsgX2sgPCBfbGVuOyBfaysrKSB7CiAgICAgICAgICAgICAgICB2ID0gX3JlZjhbX2tdOwogICAgICAgICAgICAgICAgcGFyYW1zLnB1c2godik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHN0ciA9IHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJDaGFyYWN0ZXI7CiAgICAgICAgICAgICAgcGFyYW1zLnB1c2gocCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgnc3RyaW5nJyA9PT0gdHlwZW9mIHZhbHNbaV0pIHsKICAgICAgICAgICAgICB2YWxzW2ldICs9ICIsICIgKyBzdHI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdmFsc1tpXSA9ICIiICsgc3RyOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gewogICAgICAgICAgdmFsczogdmFscywKICAgICAgICAgIHBhcmFtczogcGFyYW1zCiAgICAgICAgfTsKICAgICAgfTsKCiAgICAgIEluc2VydEZpZWxkVmFsdWVCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgaWYgKDAgPj0gdGhpcy5maWVsZHMubGVuZ3RoKSB7CiAgICAgICAgICByZXR1cm4gJyc7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gIigiICsgdGhpcy5maWVsZHMuam9pbignLCAnKSArICIpIFZBTFVFUyAoIiArIHRoaXMuX2J1aWxkVmFscygpLmpvaW4oJyksICgnKSArICIpIjsKICAgICAgfTsKCiAgICAgIEluc2VydEZpZWxkVmFsdWVCbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbSA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICB2YXIgaSwgcGFyYW1zLCBzdHIsIHZhbHMsIF9pLCBfcmVmNiwgX3JlZjc7CgogICAgICAgIGlmICgwID49IHRoaXMuZmllbGRzLmxlbmd0aCkgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGV4dDogJycsCiAgICAgICAgICAgIHZhbHVlczogW10KICAgICAgICAgIH07CiAgICAgICAgfQoKICAgICAgICBzdHIgPSAiIjsKICAgICAgICBfcmVmNiA9IHRoaXMuX2J1aWxkVmFsUGFyYW1zKCksIHZhbHMgPSBfcmVmNi52YWxzLCBwYXJhbXMgPSBfcmVmNi5wYXJhbXM7CgogICAgICAgIGZvciAoaSA9IF9pID0gMCwgX3JlZjcgPSB0aGlzLmZpZWxkcy5sZW5ndGg7IDAgPD0gX3JlZjcgPyBfaSA8IF9yZWY3IDogX2kgPiBfcmVmNzsgaSA9IDAgPD0gX3JlZjcgPyArK19pIDogLS1faSkgewogICAgICAgICAgaWYgKCIiICE9PSBzdHIpIHsKICAgICAgICAgICAgc3RyICs9ICIsICI7CiAgICAgICAgICB9CgogICAgICAgICAgc3RyICs9IHRoaXMuZmllbGRzW2ldOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHRleHQ6ICIoIiArIHN0ciArICIpIFZBTFVFUyAoIiArIHZhbHMuam9pbignKSwgKCcpICsgIikiLAogICAgICAgICAgdmFsdWVzOiBwYXJhbXMKICAgICAgICB9OwogICAgICB9OwoKICAgICAgcmV0dXJuIEluc2VydEZpZWxkVmFsdWVCbG9jazsKICAgIH0oY2xzLkFic3RyYWN0U2V0RmllbGRCbG9jayk7CgogICAgY2xzLkluc2VydEZpZWxkc0Zyb21RdWVyeUJsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoSW5zZXJ0RmllbGRzRnJvbVF1ZXJ5QmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBJbnNlcnRGaWVsZHNGcm9tUXVlcnlCbG9jayhvcHRpb25zKSB7CiAgICAgICAgSW5zZXJ0RmllbGRzRnJvbVF1ZXJ5QmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7CgogICAgICAgIHRoaXMuX2ZpZWxkcyA9IFtdOwogICAgICAgIHRoaXMuX3F1ZXJ5ID0gbnVsbDsKICAgICAgfQoKICAgICAgSW5zZXJ0RmllbGRzRnJvbVF1ZXJ5QmxvY2sucHJvdG90eXBlLmZyb21RdWVyeSA9IGZ1bmN0aW9uIChmaWVsZHMsIHNlbGVjdFF1ZXJ5KSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgdGhpcy5fZmllbGRzID0gZmllbGRzLm1hcChmdW5jdGlvbiAodikgewogICAgICAgICAgcmV0dXJuIF90aGlzLl9zYW5pdGl6ZUZpZWxkKHYpOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiB0aGlzLl9xdWVyeSA9IHRoaXMuX3Nhbml0aXplTmVzdGFibGVRdWVyeShzZWxlY3RRdWVyeSk7CiAgICAgIH07CgogICAgICBJbnNlcnRGaWVsZHNGcm9tUXVlcnlCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgaWYgKDAgPj0gdGhpcy5fZmllbGRzLmxlbmd0aCkgewogICAgICAgICAgcmV0dXJuICcnOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICIoIiArIHRoaXMuX2ZpZWxkcy5qb2luKCcsICcpICsgIikgKCIgKyB0aGlzLl9xdWVyeS50b1N0cmluZygpICsgIikiOwogICAgICB9OwoKICAgICAgSW5zZXJ0RmllbGRzRnJvbVF1ZXJ5QmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW0gPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIHFyeVBhcmFtOwoKICAgICAgICBpZiAoMCA+PSB0aGlzLl9maWVsZHMubGVuZ3RoKSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0ZXh0OiAnJywKICAgICAgICAgICAgdmFsdWVzOiBbXQogICAgICAgICAgfTsKICAgICAgICB9CgogICAgICAgIHFyeVBhcmFtID0gdGhpcy5fcXVlcnkudG9QYXJhbSgpOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICB0ZXh0OiAiKCIgKyB0aGlzLl9maWVsZHMuam9pbignLCAnKSArICIpICgiICsgcXJ5UGFyYW0udGV4dCArICIpIiwKICAgICAgICAgIHZhbHVlczogcXJ5UGFyYW0udmFsdWVzCiAgICAgICAgfTsKICAgICAgfTsKCiAgICAgIHJldHVybiBJbnNlcnRGaWVsZHNGcm9tUXVlcnlCbG9jazsKICAgIH0oY2xzLkJsb2NrKTsKCiAgICBjbHMuRGlzdGluY3RCbG9jayA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKERpc3RpbmN0QmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBEaXN0aW5jdEJsb2NrKG9wdGlvbnMpIHsKICAgICAgICBEaXN0aW5jdEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG9wdGlvbnMpOwoKICAgICAgICB0aGlzLnVzZURpc3RpbmN0ID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIERpc3RpbmN0QmxvY2sucHJvdG90eXBlLmRpc3RpbmN0ID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLnVzZURpc3RpbmN0ID0gdHJ1ZTsKICAgICAgfTsKCiAgICAgIERpc3RpbmN0QmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyID0gZnVuY3Rpb24gKHF1ZXJ5QnVpbGRlcikgewogICAgICAgIGlmICh0aGlzLnVzZURpc3RpbmN0KSB7CiAgICAgICAgICByZXR1cm4gIkRJU1RJTkNUIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuICIiOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHJldHVybiBEaXN0aW5jdEJsb2NrOwogICAgfShjbHMuQmxvY2spOwoKICAgIGNscy5Hcm91cEJ5QmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhHcm91cEJ5QmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBHcm91cEJ5QmxvY2sob3B0aW9ucykgewogICAgICAgIEdyb3VwQnlCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTsKCiAgICAgICAgdGhpcy5ncm91cHMgPSBbXTsKICAgICAgfQoKICAgICAgR3JvdXBCeUJsb2NrLnByb3RvdHlwZS5ncm91cCA9IGZ1bmN0aW9uIChmaWVsZCkgewogICAgICAgIGZpZWxkID0gdGhpcy5fc2FuaXRpemVGaWVsZChmaWVsZCk7CiAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBzLnB1c2goZmllbGQpOwogICAgICB9OwoKICAgICAgR3JvdXBCeUJsb2NrLnByb3RvdHlwZS5idWlsZFN0ciA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICB2YXIgZiwgZ3JvdXBzLCBfaSwgX2xlbiwgX3JlZjY7CgogICAgICAgIGdyb3VwcyA9ICIiOwoKICAgICAgICBpZiAoMCA8IHRoaXMuZ3JvdXBzLmxlbmd0aCkgewogICAgICAgICAgX3JlZjYgPSB0aGlzLmdyb3VwczsKCiAgICAgICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWY2Lmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICAgIGYgPSBfcmVmNltfaV07CgogICAgICAgICAgICBpZiAoIiIgIT09IGdyb3VwcykgewogICAgICAgICAgICAgIGdyb3VwcyArPSAiLCAiOwogICAgICAgICAgICB9CgogICAgICAgICAgICBncm91cHMgKz0gZjsKICAgICAgICAgIH0KCiAgICAgICAgICBncm91cHMgPSAiR1JPVVAgQlkgIiArIGdyb3VwczsKICAgICAgICB9CgogICAgICAgIHJldHVybiBncm91cHM7CiAgICAgIH07CgogICAgICByZXR1cm4gR3JvdXBCeUJsb2NrOwogICAgfShjbHMuQmxvY2spOwoKICAgIGNscy5PZmZzZXRCbG9jayA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKE9mZnNldEJsb2NrLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gT2Zmc2V0QmxvY2sob3B0aW9ucykgewogICAgICAgIE9mZnNldEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG9wdGlvbnMpOwoKICAgICAgICB0aGlzLm9mZnNldHMgPSBudWxsOwogICAgICB9CgogICAgICBPZmZzZXRCbG9jay5wcm90b3R5cGUub2Zmc2V0ID0gZnVuY3Rpb24gKHN0YXJ0KSB7CiAgICAgICAgc3RhcnQgPSB0aGlzLl9zYW5pdGl6ZUxpbWl0T2Zmc2V0KHN0YXJ0KTsKICAgICAgICByZXR1cm4gdGhpcy5vZmZzZXRzID0gc3RhcnQ7CiAgICAgIH07CgogICAgICBPZmZzZXRCbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgaWYgKHRoaXMub2Zmc2V0cykgewogICAgICAgICAgcmV0dXJuICJPRkZTRVQgIiArIHRoaXMub2Zmc2V0czsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuICIiOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHJldHVybiBPZmZzZXRCbG9jazsKICAgIH0oY2xzLkJsb2NrKTsKCiAgICBjbHMuQWJzdHJhY3RDb25kaXRpb25CbG9jayA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKEFic3RyYWN0Q29uZGl0aW9uQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBBYnN0cmFjdENvbmRpdGlvbkJsb2NrKGNvbmRpdGlvblZlcmIsIG9wdGlvbnMpIHsKICAgICAgICB0aGlzLmNvbmRpdGlvblZlcmIgPSBjb25kaXRpb25WZXJiOwoKICAgICAgICBBYnN0cmFjdENvbmRpdGlvbkJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG9wdGlvbnMpOwoKICAgICAgICB0aGlzLmNvbmRpdGlvbnMgPSBbXTsKICAgICAgfQoKICAgICAgQWJzdHJhY3RDb25kaXRpb25CbG9jay5wcm90b3R5cGUuX2NvbmRpdGlvbiA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYywgY29uZGl0aW9uLCBmaW5hbENvbmRpdGlvbiwgZmluYWxWYWx1ZXMsIGlkeCwgaW5WYWx1ZXMsIGl0ZW0sIG5leHRWYWx1ZSwgdCwgdmFsdWVzLCBfaSwgX2osIF9sZW4sIF9yZWY2OwoKICAgICAgICBjb25kaXRpb24gPSBhcmd1bWVudHNbMF0sIHZhbHVlcyA9IDIgPD0gYXJndW1lbnRzLmxlbmd0aCA/IF9fc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpIDogW107CiAgICAgICAgY29uZGl0aW9uID0gdGhpcy5fc2FuaXRpemVDb25kaXRpb24oY29uZGl0aW9uKTsKICAgICAgICBmaW5hbENvbmRpdGlvbiA9ICIiOwogICAgICAgIGZpbmFsVmFsdWVzID0gW107CgogICAgICAgIGlmIChjb25kaXRpb24gaW5zdGFuY2VvZiBjbHMuRXhwcmVzc2lvbikgewogICAgICAgICAgdCA9IGNvbmRpdGlvbi50b1BhcmFtKCk7CiAgICAgICAgICBmaW5hbENvbmRpdGlvbiA9IHQudGV4dDsKICAgICAgICAgIGZpbmFsVmFsdWVzID0gdC52YWx1ZXM7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGZvciAoaWR4ID0gX2kgPSAwLCBfcmVmNiA9IGNvbmRpdGlvbi5sZW5ndGg7IDAgPD0gX3JlZjYgPyBfaSA8IF9yZWY2IDogX2kgPiBfcmVmNjsgaWR4ID0gMCA8PSBfcmVmNiA/ICsrX2kgOiAtLV9pKSB7CiAgICAgICAgICAgIGMgPSBjb25kaXRpb24uY2hhckF0KGlkeCk7CgogICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnBhcmFtZXRlckNoYXJhY3RlciA9PT0gYyAmJiAwIDwgdmFsdWVzLmxlbmd0aCkgewogICAgICAgICAgICAgIG5leHRWYWx1ZSA9IHZhbHVlcy5zaGlmdCgpOwoKICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShuZXh0VmFsdWUpKSB7CiAgICAgICAgICAgICAgICBpblZhbHVlcyA9IFtdOwoKICAgICAgICAgICAgICAgIGZvciAoX2ogPSAwLCBfbGVuID0gbmV4dFZhbHVlLmxlbmd0aDsgX2ogPCBfbGVuOyBfaisrKSB7CiAgICAgICAgICAgICAgICAgIGl0ZW0gPSBuZXh0VmFsdWVbX2pdOwogICAgICAgICAgICAgICAgICBpblZhbHVlcy5wdXNoKHRoaXMuX3Nhbml0aXplVmFsdWUoaXRlbSkpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGZpbmFsVmFsdWVzID0gZmluYWxWYWx1ZXMuY29uY2F0KGluVmFsdWVzKTsKCiAgICAgICAgICAgICAgICBmaW5hbENvbmRpdGlvbiArPSAiKCIgKyBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfaywgX2xlbjEsIF9yZXN1bHRzOwoKICAgICAgICAgICAgICAgICAgX3Jlc3VsdHMgPSBbXTsKCiAgICAgICAgICAgICAgICAgIGZvciAoX2sgPSAwLCBfbGVuMSA9IGluVmFsdWVzLmxlbmd0aDsgX2sgPCBfbGVuMTsgX2srKykgewogICAgICAgICAgICAgICAgICAgIGl0ZW0gPSBpblZhbHVlc1tfa107CgogICAgICAgICAgICAgICAgICAgIF9yZXN1bHRzLnB1c2godGhpcy5vcHRpb25zLnBhcmFtZXRlckNoYXJhY3Rlcik7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVzdWx0czsKICAgICAgICAgICAgICAgIH0uY2FsbCh0aGlzKS5qb2luKCcsICcpICsgIikiOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBmaW5hbENvbmRpdGlvbiArPSB0aGlzLm9wdGlvbnMucGFyYW1ldGVyQ2hhcmFjdGVyOwogICAgICAgICAgICAgICAgZmluYWxWYWx1ZXMucHVzaCh0aGlzLl9zYW5pdGl6ZVZhbHVlKG5leHRWYWx1ZSkpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBmaW5hbENvbmRpdGlvbiArPSBjOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoIiIgIT09IGZpbmFsQ29uZGl0aW9uKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy5jb25kaXRpb25zLnB1c2goewogICAgICAgICAgICB0ZXh0OiBmaW5hbENvbmRpdGlvbiwKICAgICAgICAgICAgdmFsdWVzOiBmaW5hbFZhbHVlcwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgQWJzdHJhY3RDb25kaXRpb25CbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIGMsIGNvbmQsIGNvbmRTdHIsIGlkeCwgcEluZGV4LCBfaSwgX2osIF9sZW4sIF9yZWY2LCBfcmVmNzsKCiAgICAgICAgaWYgKDAgPj0gdGhpcy5jb25kaXRpb25zLmxlbmd0aCkgewogICAgICAgICAgcmV0dXJuICIiOwogICAgICAgIH0KCiAgICAgICAgY29uZFN0ciA9ICIiOwogICAgICAgIF9yZWY2ID0gdGhpcy5jb25kaXRpb25zOwoKICAgICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWY2Lmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICBjb25kID0gX3JlZjZbX2ldOwoKICAgICAgICAgIGlmICgiIiAhPT0gY29uZFN0cikgewogICAgICAgICAgICBjb25kU3RyICs9ICIpIEFORCAoIjsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoMCA8IGNvbmQudmFsdWVzLmxlbmd0aCkgewogICAgICAgICAgICBwSW5kZXggPSAwOwoKICAgICAgICAgICAgZm9yIChpZHggPSBfaiA9IDAsIF9yZWY3ID0gY29uZC50ZXh0Lmxlbmd0aDsgMCA8PSBfcmVmNyA/IF9qIDwgX3JlZjcgOiBfaiA+IF9yZWY3OyBpZHggPSAwIDw9IF9yZWY3ID8gKytfaiA6IC0tX2opIHsKICAgICAgICAgICAgICBjID0gY29uZC50ZXh0LmNoYXJBdChpZHgpOwoKICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnBhcmFtZXRlckNoYXJhY3RlciA9PT0gYykgewogICAgICAgICAgICAgICAgY29uZFN0ciArPSB0aGlzLl9mb3JtYXRWYWx1ZShjb25kLnZhbHVlc1twSW5kZXgrK10pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb25kU3RyICs9IGM7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25kU3RyICs9IGNvbmQudGV4dDsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiAiIiArIHRoaXMuY29uZGl0aW9uVmVyYiArICIgKCIgKyBjb25kU3RyICsgIikiOwogICAgICB9OwoKICAgICAgQWJzdHJhY3RDb25kaXRpb25CbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbSA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICB2YXIgY29uZCwgY29uZFN0ciwgaSwgcCwgcXYsIHJldCwgc3RyLCB2LCBfaSwgX2osIF9rLCBfbGVuLCBfbGVuMSwgX2xlbjIsIF9yZWY2LCBfcmVmNywgX3JlZjg7CgogICAgICAgIHJldCA9IHsKICAgICAgICAgIHRleHQ6ICIiLAogICAgICAgICAgdmFsdWVzOiBbXQogICAgICAgIH07CgogICAgICAgIGlmICgwID49IHRoaXMuY29uZGl0aW9ucy5sZW5ndGgpIHsKICAgICAgICAgIHJldHVybiByZXQ7CiAgICAgICAgfQoKICAgICAgICBjb25kU3RyID0gIiI7CiAgICAgICAgX3JlZjYgPSB0aGlzLmNvbmRpdGlvbnM7CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgIGNvbmQgPSBfcmVmNltfaV07CgogICAgICAgICAgaWYgKCIiICE9PSBjb25kU3RyKSB7CiAgICAgICAgICAgIGNvbmRTdHIgKz0gIikgQU5EICgiOwogICAgICAgICAgfQoKICAgICAgICAgIHN0ciA9IGNvbmQudGV4dC5zcGxpdCh0aGlzLm9wdGlvbnMucGFyYW1ldGVyQ2hhcmFjdGVyKTsKICAgICAgICAgIGkgPSAwOwogICAgICAgICAgX3JlZjcgPSBjb25kLnZhbHVlczsKCiAgICAgICAgICBmb3IgKF9qID0gMCwgX2xlbjEgPSBfcmVmNy5sZW5ndGg7IF9qIDwgX2xlbjE7IF9qKyspIHsKICAgICAgICAgICAgdiA9IF9yZWY3W19qXTsKCiAgICAgICAgICAgIGlmIChzdHJbaV0gIT0gbnVsbCkgewogICAgICAgICAgICAgIGNvbmRTdHIgKz0gIiIgKyBzdHJbaV07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHAgPSB0aGlzLl9mb3JtYXRWYWx1ZUFzUGFyYW0odik7CgogICAgICAgICAgICBpZiAoKHAgIT0gbnVsbCA/IHAudGV4dCA6IHZvaWQgMCkgIT0gbnVsbCkgewogICAgICAgICAgICAgIGNvbmRTdHIgKz0gIigiICsgcC50ZXh0ICsgIikiOwogICAgICAgICAgICAgIF9yZWY4ID0gcC52YWx1ZXM7CgogICAgICAgICAgICAgIGZvciAoX2sgPSAwLCBfbGVuMiA9IF9yZWY4Lmxlbmd0aDsgX2sgPCBfbGVuMjsgX2srKykgewogICAgICAgICAgICAgICAgcXYgPSBfcmVmOFtfa107CiAgICAgICAgICAgICAgICByZXQudmFsdWVzLnB1c2gocXYpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBjb25kU3RyICs9IHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJDaGFyYWN0ZXI7CiAgICAgICAgICAgICAgcmV0LnZhbHVlcy5wdXNoKHApOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpID0gaSArIDE7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHN0cltpXSAhPSBudWxsKSB7CiAgICAgICAgICAgIGNvbmRTdHIgKz0gIiIgKyBzdHJbaV07CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXQudGV4dCA9ICIiICsgdGhpcy5jb25kaXRpb25WZXJiICsgIiAoIiArIGNvbmRTdHIgKyAiKSI7CiAgICAgICAgcmV0dXJuIHJldDsKICAgICAgfTsKCiAgICAgIHJldHVybiBBYnN0cmFjdENvbmRpdGlvbkJsb2NrOwogICAgfShjbHMuQmxvY2spOwoKICAgIGNscy5XaGVyZUJsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoV2hlcmVCbG9jaywgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIFdoZXJlQmxvY2sob3B0aW9ucykgewogICAgICAgIFdoZXJlQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgJ1dIRVJFJywgb3B0aW9ucyk7CiAgICAgIH0KCiAgICAgIFdoZXJlQmxvY2sucHJvdG90eXBlLndoZXJlID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBjb25kaXRpb24sIHZhbHVlczsKICAgICAgICBjb25kaXRpb24gPSBhcmd1bWVudHNbMF0sIHZhbHVlcyA9IDIgPD0gYXJndW1lbnRzLmxlbmd0aCA/IF9fc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpIDogW107CiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmRpdGlvbi5hcHBseSh0aGlzLCBbY29uZGl0aW9uXS5jb25jYXQoX19zbGljZS5jYWxsKHZhbHVlcykpKTsKICAgICAgfTsKCiAgICAgIHJldHVybiBXaGVyZUJsb2NrOwogICAgfShjbHMuQWJzdHJhY3RDb25kaXRpb25CbG9jayk7CgogICAgY2xzLkhhdmluZ0Jsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoSGF2aW5nQmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBIYXZpbmdCbG9jayhvcHRpb25zKSB7CiAgICAgICAgSGF2aW5nQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgJ0hBVklORycsIG9wdGlvbnMpOwogICAgICB9CgogICAgICBIYXZpbmdCbG9jay5wcm90b3R5cGUuaGF2aW5nID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBjb25kaXRpb24sIHZhbHVlczsKICAgICAgICBjb25kaXRpb24gPSBhcmd1bWVudHNbMF0sIHZhbHVlcyA9IDIgPD0gYXJndW1lbnRzLmxlbmd0aCA/IF9fc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpIDogW107CiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmRpdGlvbi5hcHBseSh0aGlzLCBbY29uZGl0aW9uXS5jb25jYXQoX19zbGljZS5jYWxsKHZhbHVlcykpKTsKICAgICAgfTsKCiAgICAgIHJldHVybiBIYXZpbmdCbG9jazsKICAgIH0oY2xzLkFic3RyYWN0Q29uZGl0aW9uQmxvY2spOwoKICAgIGNscy5PcmRlckJ5QmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhPcmRlckJ5QmxvY2ssIF9zdXBlcik7CgogICAgICBmdW5jdGlvbiBPcmRlckJ5QmxvY2sob3B0aW9ucykgewogICAgICAgIE9yZGVyQnlCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTsKCiAgICAgICAgdGhpcy5vcmRlcnMgPSBbXTsKICAgICAgICB0aGlzLl92YWx1ZXMgPSBbXTsKICAgICAgfQoKICAgICAgT3JkZXJCeUJsb2NrLnByb3RvdHlwZS5vcmRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYXNjLCBmaWVsZCwgdmFsdWVzOwogICAgICAgIGZpZWxkID0gYXJndW1lbnRzWzBdLCBhc2MgPSBhcmd1bWVudHNbMV0sIHZhbHVlcyA9IDMgPD0gYXJndW1lbnRzLmxlbmd0aCA/IF9fc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpIDogW107CiAgICAgICAgZmllbGQgPSB0aGlzLl9zYW5pdGl6ZUZpZWxkKGZpZWxkKTsKCiAgICAgICAgaWYgKGFzYyA9PT0gdm9pZCAwKSB7CiAgICAgICAgICBhc2MgPSB0cnVlOwogICAgICAgIH0KCiAgICAgICAgaWYgKGFzYyAhPT0gbnVsbCkgewogICAgICAgICAgYXNjID0gISFhc2M7CiAgICAgICAgfQoKICAgICAgICB0aGlzLl92YWx1ZXMgPSB2YWx1ZXM7CiAgICAgICAgcmV0dXJuIHRoaXMub3JkZXJzLnB1c2goewogICAgICAgICAgZmllbGQ6IGZpZWxkLAogICAgICAgICAgZGlyOiBhc2MKICAgICAgICB9KTsKICAgICAgfTsKCiAgICAgIE9yZGVyQnlCbG9jay5wcm90b3R5cGUuX2J1aWxkU3RyID0gZnVuY3Rpb24gKHRvUGFyYW0pIHsKICAgICAgICB2YXIgYywgZnN0ciwgaWR4LCBvLCBvcmRlcnMsIHBJbmRleCwgX2ksIF9qLCBfbGVuLCBfcmVmNiwgX3JlZjc7CgogICAgICAgIGlmICh0b1BhcmFtID09IG51bGwpIHsKICAgICAgICAgIHRvUGFyYW0gPSBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmICgwIDwgdGhpcy5vcmRlcnMubGVuZ3RoKSB7CiAgICAgICAgICBwSW5kZXggPSAwOwogICAgICAgICAgb3JkZXJzID0gIiI7CiAgICAgICAgICBfcmVmNiA9IHRoaXMub3JkZXJzOwoKICAgICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgICAgbyA9IF9yZWY2W19pXTsKCiAgICAgICAgICAgIGlmICgiIiAhPT0gb3JkZXJzKSB7CiAgICAgICAgICAgICAgb3JkZXJzICs9ICIsICI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZzdHIgPSAiIjsKCiAgICAgICAgICAgIGlmICghdG9QYXJhbSkgewogICAgICAgICAgICAgIGZvciAoaWR4ID0gX2ogPSAwLCBfcmVmNyA9IG8uZmllbGQubGVuZ3RoOyAwIDw9IF9yZWY3ID8gX2ogPCBfcmVmNyA6IF9qID4gX3JlZjc7IGlkeCA9IDAgPD0gX3JlZjcgPyArK19qIDogLS1faikgewogICAgICAgICAgICAgICAgYyA9IG8uZmllbGQuY2hhckF0KGlkeCk7CgogICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJDaGFyYWN0ZXIgPT09IGMpIHsKICAgICAgICAgICAgICAgICAgZnN0ciArPSB0aGlzLl9mb3JtYXRWYWx1ZSh0aGlzLl92YWx1ZXNbcEluZGV4KytdKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGZzdHIgKz0gYzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgZnN0ciA9IG8uZmllbGQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIG9yZGVycyArPSAiIiArIGZzdHI7CgogICAgICAgICAgICBpZiAoby5kaXIgIT09IG51bGwpIHsKICAgICAgICAgICAgICBvcmRlcnMgKz0gIiAiICsgKG8uZGlyID8gJ0FTQycgOiAnREVTQycpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuICJPUkRFUiBCWSAiICsgb3JkZXJzOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gIiI7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgT3JkZXJCeUJsb2NrLnByb3RvdHlwZS5idWlsZFN0ciA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICByZXR1cm4gdGhpcy5fYnVpbGRTdHIoKTsKICAgICAgfTsKCiAgICAgIE9yZGVyQnlCbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbSA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogdGhpcy5fYnVpbGRTdHIodHJ1ZSksCiAgICAgICAgICB2YWx1ZXM6IHRoaXMuX3ZhbHVlcy5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLl9mb3JtYXRWYWx1ZUFzUGFyYW0odik7CiAgICAgICAgICB9KQogICAgICAgIH07CiAgICAgIH07CgogICAgICByZXR1cm4gT3JkZXJCeUJsb2NrOwogICAgfShjbHMuQmxvY2spOwoKICAgIGNscy5MaW1pdEJsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoTGltaXRCbG9jaywgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIExpbWl0QmxvY2sob3B0aW9ucykgewogICAgICAgIExpbWl0QmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7CgogICAgICAgIHRoaXMubGltaXRzID0gbnVsbDsKICAgICAgfQoKICAgICAgTGltaXRCbG9jay5wcm90b3R5cGUubGltaXQgPSBmdW5jdGlvbiAobWF4KSB7CiAgICAgICAgbWF4ID0gdGhpcy5fc2FuaXRpemVMaW1pdE9mZnNldChtYXgpOwogICAgICAgIHJldHVybiB0aGlzLmxpbWl0cyA9IG1heDsKICAgICAgfTsKCiAgICAgIExpbWl0QmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyID0gZnVuY3Rpb24gKHF1ZXJ5QnVpbGRlcikgewogICAgICAgIGlmICh0aGlzLmxpbWl0cyB8fCB0aGlzLmxpbWl0cyA9PT0gMCkgewogICAgICAgICAgcmV0dXJuICJMSU1JVCAiICsgdGhpcy5saW1pdHM7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiAiIjsKICAgICAgICB9CiAgICAgIH07CgogICAgICByZXR1cm4gTGltaXRCbG9jazsKICAgIH0oY2xzLkJsb2NrKTsKCiAgICBjbHMuSm9pbkJsb2NrID0gZnVuY3Rpb24gKF9zdXBlcikgewogICAgICBfX2V4dGVuZHMoSm9pbkJsb2NrLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gSm9pbkJsb2NrKG9wdGlvbnMpIHsKICAgICAgICBKb2luQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7CgogICAgICAgIHRoaXMuam9pbnMgPSBbXTsKICAgICAgfQoKICAgICAgSm9pbkJsb2NrLnByb3RvdHlwZS5qb2luID0gZnVuY3Rpb24gKHRhYmxlLCBhbGlhcywgY29uZGl0aW9uLCB0eXBlKSB7CiAgICAgICAgaWYgKGFsaWFzID09IG51bGwpIHsKICAgICAgICAgIGFsaWFzID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIGlmIChjb25kaXRpb24gPT0gbnVsbCkgewogICAgICAgICAgY29uZGl0aW9uID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIGlmICh0eXBlID09IG51bGwpIHsKICAgICAgICAgIHR5cGUgPSAnSU5ORVInOwogICAgICAgIH0KCiAgICAgICAgdGFibGUgPSB0aGlzLl9zYW5pdGl6ZVRhYmxlKHRhYmxlLCB0cnVlKTsKCiAgICAgICAgaWYgKGFsaWFzKSB7CiAgICAgICAgICBhbGlhcyA9IHRoaXMuX3Nhbml0aXplVGFibGVBbGlhcyhhbGlhcyk7CiAgICAgICAgfQoKICAgICAgICBpZiAoY29uZGl0aW9uKSB7CiAgICAgICAgICBjb25kaXRpb24gPSB0aGlzLl9zYW5pdGl6ZUNvbmRpdGlvbihjb25kaXRpb24pOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5qb2lucy5wdXNoKHsKICAgICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgICB0YWJsZTogdGFibGUsCiAgICAgICAgICBhbGlhczogYWxpYXMsCiAgICAgICAgICBjb25kaXRpb246IGNvbmRpdGlvbgogICAgICAgIH0pOwogICAgICAgIHJldHVybiB0aGlzOwogICAgICB9OwoKICAgICAgSm9pbkJsb2NrLnByb3RvdHlwZS5sZWZ0X2pvaW4gPSBmdW5jdGlvbiAodGFibGUsIGFsaWFzLCBjb25kaXRpb24pIHsKICAgICAgICBpZiAoYWxpYXMgPT0gbnVsbCkgewogICAgICAgICAgYWxpYXMgPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgaWYgKGNvbmRpdGlvbiA9PSBudWxsKSB7CiAgICAgICAgICBjb25kaXRpb24gPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuam9pbih0YWJsZSwgYWxpYXMsIGNvbmRpdGlvbiwgJ0xFRlQnKTsKICAgICAgfTsKCiAgICAgIEpvaW5CbG9jay5wcm90b3R5cGUucmlnaHRfam9pbiA9IGZ1bmN0aW9uICh0YWJsZSwgYWxpYXMsIGNvbmRpdGlvbikgewogICAgICAgIGlmIChhbGlhcyA9PSBudWxsKSB7CiAgICAgICAgICBhbGlhcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoY29uZGl0aW9uID09IG51bGwpIHsKICAgICAgICAgIGNvbmRpdGlvbiA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdGhpcy5qb2luKHRhYmxlLCBhbGlhcywgY29uZGl0aW9uLCAnUklHSFQnKTsKICAgICAgfTsKCiAgICAgIEpvaW5CbG9jay5wcm90b3R5cGUub3V0ZXJfam9pbiA9IGZ1bmN0aW9uICh0YWJsZSwgYWxpYXMsIGNvbmRpdGlvbikgewogICAgICAgIGlmIChhbGlhcyA9PSBudWxsKSB7CiAgICAgICAgICBhbGlhcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoY29uZGl0aW9uID09IG51bGwpIHsKICAgICAgICAgIGNvbmRpdGlvbiA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdGhpcy5qb2luKHRhYmxlLCBhbGlhcywgY29uZGl0aW9uLCAnT1VURVInKTsKICAgICAgfTsKCiAgICAgIEpvaW5CbG9jay5wcm90b3R5cGUubGVmdF9vdXRlcl9qb2luID0gZnVuY3Rpb24gKHRhYmxlLCBhbGlhcywgY29uZGl0aW9uKSB7CiAgICAgICAgaWYgKGFsaWFzID09IG51bGwpIHsKICAgICAgICAgIGFsaWFzID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIGlmIChjb25kaXRpb24gPT0gbnVsbCkgewogICAgICAgICAgY29uZGl0aW9uID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzLmpvaW4odGFibGUsIGFsaWFzLCBjb25kaXRpb24sICdMRUZUIE9VVEVSJyk7CiAgICAgIH07CgogICAgICBKb2luQmxvY2sucHJvdG90eXBlLmZ1bGxfam9pbiA9IGZ1bmN0aW9uICh0YWJsZSwgYWxpYXMsIGNvbmRpdGlvbikgewogICAgICAgIGlmIChhbGlhcyA9PSBudWxsKSB7CiAgICAgICAgICBhbGlhcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoY29uZGl0aW9uID09IG51bGwpIHsKICAgICAgICAgIGNvbmRpdGlvbiA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdGhpcy5qb2luKHRhYmxlLCBhbGlhcywgY29uZGl0aW9uLCAnRlVMTCcpOwogICAgICB9OwoKICAgICAgSm9pbkJsb2NrLnByb3RvdHlwZS5jcm9zc19qb2luID0gZnVuY3Rpb24gKHRhYmxlLCBhbGlhcywgY29uZGl0aW9uKSB7CiAgICAgICAgaWYgKGFsaWFzID09IG51bGwpIHsKICAgICAgICAgIGFsaWFzID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIGlmIChjb25kaXRpb24gPT0gbnVsbCkgewogICAgICAgICAgY29uZGl0aW9uID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzLmpvaW4odGFibGUsIGFsaWFzLCBjb25kaXRpb24sICdDUk9TUycpOwogICAgICB9OwoKICAgICAgSm9pbkJsb2NrLnByb3RvdHlwZS5idWlsZFN0ciA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICB2YXIgaiwgam9pbnMsIF9pLCBfbGVuLCBfcmVmNjsKCiAgICAgICAgam9pbnMgPSAiIjsKICAgICAgICBfcmVmNiA9IHRoaXMuam9pbnMgfHwgW107CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgIGogPSBfcmVmNltfaV07CgogICAgICAgICAgaWYgKGpvaW5zICE9PSAiIikgewogICAgICAgICAgICBqb2lucyArPSAiICI7CiAgICAgICAgICB9CgogICAgICAgICAgam9pbnMgKz0gIiIgKyBqLnR5cGUgKyAiIEpPSU4gIjsKCiAgICAgICAgICBpZiAoInN0cmluZyIgPT09IHR5cGVvZiBqLnRhYmxlKSB7CiAgICAgICAgICAgIGpvaW5zICs9IGoudGFibGU7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBqb2lucyArPSAiKCIgKyBqLnRhYmxlICsgIikiOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChqLmFsaWFzKSB7CiAgICAgICAgICAgIGpvaW5zICs9ICIgIiArIGouYWxpYXM7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGouY29uZGl0aW9uKSB7CiAgICAgICAgICAgIGpvaW5zICs9ICIgT04gKCIgKyBqLmNvbmRpdGlvbiArICIpIjsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBqb2luczsKICAgICAgfTsKCiAgICAgIEpvaW5CbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbSA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICB2YXIgYmxrLCBjcCwgam9pblN0ciwgcCwgcGFyYW1zLCByZXQsIHYsIF9pLCBfaiwgX2ssIF9sZW4sIF9sZW4xLCBfbGVuMiwgX3JlZjYsIF9yZWY3OwoKICAgICAgICByZXQgPSB7CiAgICAgICAgICB0ZXh0OiAiIiwKICAgICAgICAgIHZhbHVlczogW10KICAgICAgICB9OwogICAgICAgIHBhcmFtcyA9IFtdOwogICAgICAgIGpvaW5TdHIgPSAiIjsKCiAgICAgICAgaWYgKDAgPj0gdGhpcy5qb2lucy5sZW5ndGgpIHsKICAgICAgICAgIHJldHVybiByZXQ7CiAgICAgICAgfQoKICAgICAgICBfcmVmNiA9IHRoaXMuam9pbnM7CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgIGJsayA9IF9yZWY2W19pXTsKCiAgICAgICAgICBpZiAoInN0cmluZyIgPT09IHR5cGVvZiBibGsudGFibGUpIHsKICAgICAgICAgICAgcCA9IHsKICAgICAgICAgICAgICAidGV4dCI6ICIiICsgYmxrLnRhYmxlLAogICAgICAgICAgICAgICJ2YWx1ZXMiOiBbXQogICAgICAgICAgICB9OwogICAgICAgICAgfSBlbHNlIGlmIChibGsudGFibGUgaW5zdGFuY2VvZiBjbHMuUXVlcnlCdWlsZGVyKSB7CiAgICAgICAgICAgIGJsay50YWJsZS51cGRhdGVPcHRpb25zKHsKICAgICAgICAgICAgICAibmVzdGVkQnVpbGRlciI6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHAgPSBibGsudGFibGUudG9QYXJhbSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYmxrLnVwZGF0ZU9wdGlvbnMoewogICAgICAgICAgICAgICJuZXN0ZWRCdWlsZGVyIjogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcCA9IGJsay5idWlsZFBhcmFtKHF1ZXJ5QnVpbGRlcik7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGJsay5jb25kaXRpb24gaW5zdGFuY2VvZiBjbHMuRXhwcmVzc2lvbikgewogICAgICAgICAgICBjcCA9IGJsay5jb25kaXRpb24udG9QYXJhbSgpOwogICAgICAgICAgICBwLmNvbmRpdGlvbiA9IGNwLnRleHQ7CiAgICAgICAgICAgIHAudmFsdWVzID0gcC52YWx1ZXMuY29uY2F0KGNwLnZhbHVlcyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwLmNvbmRpdGlvbiA9IGJsay5jb25kaXRpb247CiAgICAgICAgICB9CgogICAgICAgICAgcC5qb2luID0gYmxrOwogICAgICAgICAgcGFyYW1zLnB1c2gocCk7CiAgICAgICAgfQoKICAgICAgICBmb3IgKF9qID0gMCwgX2xlbjEgPSBwYXJhbXMubGVuZ3RoOyBfaiA8IF9sZW4xOyBfaisrKSB7CiAgICAgICAgICBwID0gcGFyYW1zW19qXTsKCiAgICAgICAgICBpZiAoam9pblN0ciAhPT0gIiIpIHsKICAgICAgICAgICAgam9pblN0ciArPSAiICI7CiAgICAgICAgICB9CgogICAgICAgICAgam9pblN0ciArPSAiIiArIHAuam9pbi50eXBlICsgIiBKT0lOICI7CgogICAgICAgICAgaWYgKCJzdHJpbmciID09PSB0eXBlb2YgcC5qb2luLnRhYmxlKSB7CiAgICAgICAgICAgIGpvaW5TdHIgKz0gcC50ZXh0OwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgam9pblN0ciArPSAiKCIgKyBwLnRleHQgKyAiKSI7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHAuam9pbi5hbGlhcykgewogICAgICAgICAgICBqb2luU3RyICs9ICIgIiArIHAuam9pbi5hbGlhczsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAocC5jb25kaXRpb24pIHsKICAgICAgICAgICAgam9pblN0ciArPSAiIE9OICgiICsgcC5jb25kaXRpb24gKyAiKSI7CiAgICAgICAgICB9CgogICAgICAgICAgX3JlZjcgPSBwLnZhbHVlczsKCiAgICAgICAgICBmb3IgKF9rID0gMCwgX2xlbjIgPSBfcmVmNy5sZW5ndGg7IF9rIDwgX2xlbjI7IF9rKyspIHsKICAgICAgICAgICAgdiA9IF9yZWY3W19rXTsKICAgICAgICAgICAgcmV0LnZhbHVlcy5wdXNoKHRoaXMuX2Zvcm1hdEN1c3RvbVZhbHVlKHYpKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldC50ZXh0ICs9IGpvaW5TdHI7CiAgICAgICAgcmV0dXJuIHJldDsKICAgICAgfTsKCiAgICAgIHJldHVybiBKb2luQmxvY2s7CiAgICB9KGNscy5CbG9jayk7CgogICAgY2xzLlVuaW9uQmxvY2sgPSBmdW5jdGlvbiAoX3N1cGVyKSB7CiAgICAgIF9fZXh0ZW5kcyhVbmlvbkJsb2NrLCBfc3VwZXIpOwoKICAgICAgZnVuY3Rpb24gVW5pb25CbG9jayhvcHRpb25zKSB7CiAgICAgICAgVW5pb25CbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTsKCiAgICAgICAgdGhpcy51bmlvbnMgPSBbXTsKICAgICAgfQoKICAgICAgVW5pb25CbG9jay5wcm90b3R5cGUudW5pb24gPSBmdW5jdGlvbiAodGFibGUsIHR5cGUpIHsKICAgICAgICBpZiAodHlwZSA9PSBudWxsKSB7CiAgICAgICAgICB0eXBlID0gJ1VOSU9OJzsKICAgICAgICB9CgogICAgICAgIHRhYmxlID0gdGhpcy5fc2FuaXRpemVUYWJsZSh0YWJsZSwgdHJ1ZSk7CiAgICAgICAgdGhpcy51bmlvbnMucHVzaCh7CiAgICAgICAgICB0eXBlOiB0eXBlLAogICAgICAgICAgdGFibGU6IHRhYmxlCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgIH07CgogICAgICBVbmlvbkJsb2NrLnByb3RvdHlwZS51bmlvbl9hbGwgPSBmdW5jdGlvbiAodGFibGUpIHsKICAgICAgICByZXR1cm4gdGhpcy51bmlvbih0YWJsZSwgJ1VOSU9OIEFMTCcpOwogICAgICB9OwoKICAgICAgVW5pb25CbG9jay5wcm90b3R5cGUuYnVpbGRTdHIgPSBmdW5jdGlvbiAocXVlcnlCdWlsZGVyKSB7CiAgICAgICAgdmFyIGosIHVuaW9uU3RyLCBfaSwgX2xlbiwgX3JlZjY7CgogICAgICAgIHVuaW9uU3RyID0gIiI7CiAgICAgICAgX3JlZjYgPSB0aGlzLnVuaW9ucyB8fCBbXTsKCiAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmNi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgaiA9IF9yZWY2W19pXTsKCiAgICAgICAgICBpZiAodW5pb25TdHIgIT09ICIiKSB7CiAgICAgICAgICAgIHVuaW9uU3RyICs9ICIgIjsKICAgICAgICAgIH0KCiAgICAgICAgICB1bmlvblN0ciArPSAiIiArIGoudHlwZSArICIgIjsKCiAgICAgICAgICBpZiAoInN0cmluZyIgPT09IHR5cGVvZiBqLnRhYmxlKSB7CiAgICAgICAgICAgIHVuaW9uU3RyICs9IGoudGFibGU7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB1bmlvblN0ciArPSAiKCIgKyBqLnRhYmxlICsgIikiOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHVuaW9uU3RyOwogICAgICB9OwoKICAgICAgVW5pb25CbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbSA9IGZ1bmN0aW9uIChxdWVyeUJ1aWxkZXIpIHsKICAgICAgICB2YXIgYmxrLCBwLCBwYXJhbXMsIHJldCwgdW5pb25TdHIsIHYsIF9pLCBfaiwgX2ssIF9sZW4sIF9sZW4xLCBfbGVuMiwgX3JlZjYsIF9yZWY3OwoKICAgICAgICByZXQgPSB7CiAgICAgICAgICB0ZXh0OiAiIiwKICAgICAgICAgIHZhbHVlczogW10KICAgICAgICB9OwogICAgICAgIHBhcmFtcyA9IFtdOwogICAgICAgIHVuaW9uU3RyID0gIiI7CgogICAgICAgIGlmICgwID49IHRoaXMudW5pb25zLmxlbmd0aCkgewogICAgICAgICAgcmV0dXJuIHJldDsKICAgICAgICB9CgogICAgICAgIF9yZWY2ID0gdGhpcy51bmlvbnMgfHwgW107CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgIGJsayA9IF9yZWY2W19pXTsKCiAgICAgICAgICBpZiAoInN0cmluZyIgPT09IHR5cGVvZiBibGsudGFibGUpIHsKICAgICAgICAgICAgcCA9IHsKICAgICAgICAgICAgICAidGV4dCI6ICIiICsgYmxrLnRhYmxlLAogICAgICAgICAgICAgICJ2YWx1ZXMiOiBbXQogICAgICAgICAgICB9OwogICAgICAgICAgfSBlbHNlIGlmIChibGsudGFibGUgaW5zdGFuY2VvZiBjbHMuUXVlcnlCdWlsZGVyKSB7CiAgICAgICAgICAgIGJsay50YWJsZS51cGRhdGVPcHRpb25zKHsKICAgICAgICAgICAgICAibmVzdGVkQnVpbGRlciI6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHAgPSBibGsudGFibGUudG9QYXJhbSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYmxrLnVwZGF0ZU9wdGlvbnMoewogICAgICAgICAgICAgICJuZXN0ZWRCdWlsZGVyIjogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcCA9IGJsay5idWlsZFBhcmFtKHF1ZXJ5QnVpbGRlcik7CiAgICAgICAgICB9CgogICAgICAgICAgcC50eXBlID0gYmxrLnR5cGU7CiAgICAgICAgICBwYXJhbXMucHVzaChwKTsKICAgICAgICB9CgogICAgICAgIGZvciAoX2ogPSAwLCBfbGVuMSA9IHBhcmFtcy5sZW5ndGg7IF9qIDwgX2xlbjE7IF9qKyspIHsKICAgICAgICAgIHAgPSBwYXJhbXNbX2pdOwoKICAgICAgICAgIGlmICh1bmlvblN0ciAhPT0gIiIpIHsKICAgICAgICAgICAgdW5pb25TdHIgKz0gIiAiOwogICAgICAgICAgfQoKICAgICAgICAgIHVuaW9uU3RyICs9ICIiICsgcC50eXBlICsgIiAoIiArIHAudGV4dCArICIpIjsKICAgICAgICAgIF9yZWY3ID0gcC52YWx1ZXM7CgogICAgICAgICAgZm9yIChfayA9IDAsIF9sZW4yID0gX3JlZjcubGVuZ3RoOyBfayA8IF9sZW4yOyBfaysrKSB7CiAgICAgICAgICAgIHYgPSBfcmVmN1tfa107CiAgICAgICAgICAgIHJldC52YWx1ZXMucHVzaCh0aGlzLl9mb3JtYXRDdXN0b21WYWx1ZSh2KSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXQudGV4dCArPSB1bmlvblN0cjsKICAgICAgICByZXR1cm4gcmV0OwogICAgICB9OwoKICAgICAgcmV0dXJuIFVuaW9uQmxvY2s7CiAgICB9KGNscy5CbG9jayk7CgogICAgY2xzLlF1ZXJ5QnVpbGRlciA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKFF1ZXJ5QnVpbGRlciwgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIFF1ZXJ5QnVpbGRlcihvcHRpb25zLCBibG9ja3MpIHsKICAgICAgICB2YXIgYmxvY2ssCiAgICAgICAgICAgIG1ldGhvZEJvZHksCiAgICAgICAgICAgIG1ldGhvZE5hbWUsCiAgICAgICAgICAgIF9mbiwKICAgICAgICAgICAgX2ksCiAgICAgICAgICAgIF9sZW4sCiAgICAgICAgICAgIF9yZWY2LAogICAgICAgICAgICBfcmVmNywKICAgICAgICAgICAgX3RoaXMgPSB0aGlzOwoKICAgICAgICBRdWVyeUJ1aWxkZXIuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7CgogICAgICAgIHRoaXMuYmxvY2tzID0gYmxvY2tzIHx8IFtdOwogICAgICAgIF9yZWY2ID0gdGhpcy5ibG9ja3M7CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgIGJsb2NrID0gX3JlZjZbX2ldOwogICAgICAgICAgX3JlZjcgPSBibG9jay5leHBvc2VkTWV0aG9kcygpOwoKICAgICAgICAgIF9mbiA9IGZ1bmN0aW9uIF9mbihibG9jaywgbmFtZSwgYm9keSkgewogICAgICAgICAgICByZXR1cm4gX3RoaXNbbmFtZV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgYm9keS5hcHBseShibG9jaywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM7CiAgICAgICAgICAgIH07CiAgICAgICAgICB9OwoKICAgICAgICAgIGZvciAobWV0aG9kTmFtZSBpbiBfcmVmNykgewogICAgICAgICAgICBtZXRob2RCb2R5ID0gX3JlZjdbbWV0aG9kTmFtZV07CgogICAgICAgICAgICBpZiAodGhpc1ttZXRob2ROYW1lXSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCIiICsgdGhpcy5fZ2V0T2JqZWN0Q2xhc3NOYW1lKHRoaXMpICsgIiBhbHJlYWR5IGhhcyBhIGJ1aWxkZXIgbWV0aG9kIGNhbGxlZDogIiArIG1ldGhvZE5hbWUpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfZm4oYmxvY2ssIG1ldGhvZE5hbWUsIG1ldGhvZEJvZHkpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgUXVlcnlCdWlsZGVyLnByb3RvdHlwZS5yZWdpc3RlclZhbHVlSGFuZGxlciA9IGZ1bmN0aW9uICh0eXBlLCBoYW5kbGVyKSB7CiAgICAgICAgdmFyIGJsb2NrLCBfaSwgX2xlbiwgX3JlZjY7CgogICAgICAgIF9yZWY2ID0gdGhpcy5ibG9ja3M7CgogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZjYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgIGJsb2NrID0gX3JlZjZbX2ldOwogICAgICAgICAgYmxvY2sucmVnaXN0ZXJWYWx1ZUhhbmRsZXIodHlwZSwgaGFuZGxlcik7CiAgICAgICAgfQoKICAgICAgICBRdWVyeUJ1aWxkZXIuX19zdXBlcl9fLnJlZ2lzdGVyVmFsdWVIYW5kbGVyLmNhbGwodGhpcywgdHlwZSwgaGFuZGxlcik7CgogICAgICAgIHJldHVybiB0aGlzOwogICAgICB9OwoKICAgICAgUXVlcnlCdWlsZGVyLnByb3RvdHlwZS51cGRhdGVPcHRpb25zID0gZnVuY3Rpb24gKG9wdGlvbnMpIHsKICAgICAgICB2YXIgYmxvY2ssIF9pLCBfbGVuLCBfcmVmNiwgX3Jlc3VsdHM7CgogICAgICAgIHRoaXMub3B0aW9ucyA9IF9leHRlbmQoe30sIHRoaXMub3B0aW9ucywgb3B0aW9ucyk7CiAgICAgICAgX3JlZjYgPSB0aGlzLmJsb2NrczsKICAgICAgICBfcmVzdWx0cyA9IFtdOwoKICAgICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWY2Lmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICBibG9jayA9IF9yZWY2W19pXTsKCiAgICAgICAgICBfcmVzdWx0cy5wdXNoKGJsb2NrLm9wdGlvbnMgPSBfZXh0ZW5kKHt9LCBibG9jay5vcHRpb25zLCBvcHRpb25zKSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gX3Jlc3VsdHM7CiAgICAgIH07CgogICAgICBRdWVyeUJ1aWxkZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBibG9jazsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIF9pLCBfbGVuLCBfcmVmNiwgX3Jlc3VsdHM7CgogICAgICAgICAgX3JlZjYgPSB0aGlzLmJsb2NrczsKICAgICAgICAgIF9yZXN1bHRzID0gW107CgogICAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmNi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgICBibG9jayA9IF9yZWY2W19pXTsKCiAgICAgICAgICAgIF9yZXN1bHRzLnB1c2goYmxvY2suYnVpbGRTdHIodGhpcykpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBfcmVzdWx0czsKICAgICAgICB9LmNhbGwodGhpcykuZmlsdGVyKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICByZXR1cm4gMCA8IHYubGVuZ3RoOwogICAgICAgIH0pLmpvaW4odGhpcy5vcHRpb25zLnNlcGFyYXRvcik7CiAgICAgIH07CgogICAgICBRdWVyeUJ1aWxkZXIucHJvdG90eXBlLnRvUGFyYW0gPSBmdW5jdGlvbiAob3B0aW9ucykgewogICAgICAgIHZhciBibG9jaywKICAgICAgICAgICAgYmxvY2tzLAogICAgICAgICAgICBpLAogICAgICAgICAgICBvbGQsCiAgICAgICAgICAgIHJlZ2V4LAogICAgICAgICAgICByZXN1bHQsCiAgICAgICAgICAgIF9yZWY2LAogICAgICAgICAgICBfdGhpcyA9IHRoaXM7CgogICAgICAgIGlmIChvcHRpb25zID09IG51bGwpIHsKICAgICAgICAgIG9wdGlvbnMgPSB2b2lkIDA7CiAgICAgICAgfQoKICAgICAgICBvbGQgPSB0aGlzLm9wdGlvbnM7CgogICAgICAgIGlmIChvcHRpb25zICE9IG51bGwpIHsKICAgICAgICAgIHRoaXMub3B0aW9ucyA9IF9leHRlbmQoe30sIHRoaXMub3B0aW9ucywgb3B0aW9ucyk7CiAgICAgICAgfQoKICAgICAgICByZXN1bHQgPSB7CiAgICAgICAgICB0ZXh0OiAnJywKICAgICAgICAgIHZhbHVlczogW10KICAgICAgICB9OwoKICAgICAgICBibG9ja3MgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgX2ksIF9sZW4sIF9yZWY2LCBfcmVzdWx0czsKCiAgICAgICAgICBfcmVmNiA9IHRoaXMuYmxvY2tzOwogICAgICAgICAgX3Jlc3VsdHMgPSBbXTsKCiAgICAgICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWY2Lmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgICAgIGJsb2NrID0gX3JlZjZbX2ldOwoKICAgICAgICAgICAgX3Jlc3VsdHMucHVzaChibG9jay5idWlsZFBhcmFtKHRoaXMpKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gX3Jlc3VsdHM7CiAgICAgICAgfS5jYWxsKHRoaXMpOwoKICAgICAgICByZXN1bHQudGV4dCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBfaSwgX2xlbiwgX3Jlc3VsdHM7CgogICAgICAgICAgX3Jlc3VsdHMgPSBbXTsKCiAgICAgICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IGJsb2Nrcy5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgICBibG9jayA9IGJsb2Nrc1tfaV07CgogICAgICAgICAgICBfcmVzdWx0cy5wdXNoKGJsb2NrLnRleHQpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBfcmVzdWx0czsKICAgICAgICB9KCkuZmlsdGVyKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICByZXR1cm4gMCA8IHYubGVuZ3RoOwogICAgICAgIH0pLmpvaW4odGhpcy5vcHRpb25zLnNlcGFyYXRvcik7CgogICAgICAgIHJlc3VsdC52YWx1ZXMgPSAoX3JlZjYgPSBbXSkuY29uY2F0LmFwcGx5KF9yZWY2LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgX2ksIF9sZW4sIF9yZXN1bHRzOwoKICAgICAgICAgIF9yZXN1bHRzID0gW107CgogICAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBibG9ja3MubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICAgICAgYmxvY2sgPSBibG9ja3NbX2ldOwoKICAgICAgICAgICAgX3Jlc3VsdHMucHVzaChibG9jay52YWx1ZXMpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBfcmVzdWx0czsKICAgICAgICB9KCkpOwoKICAgICAgICBpZiAodGhpcy5vcHRpb25zLm5lc3RlZEJ1aWxkZXIgPT0gbnVsbCkgewogICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5udW1iZXJlZFBhcmFtZXRlcnMgfHwgKG9wdGlvbnMgIT0gbnVsbCA/IG9wdGlvbnMubnVtYmVyZWRQYXJhbWV0ZXJzU3RhcnRBdCA6IHZvaWQgMCkgIT0gbnVsbCkgewogICAgICAgICAgICBpID0gMTsKCiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMubnVtYmVyZWRQYXJhbWV0ZXJzU3RhcnRBdCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgaSA9IHRoaXMub3B0aW9ucy5udW1iZXJlZFBhcmFtZXRlcnNTdGFydEF0OwogICAgICAgICAgICB9CgogICAgICAgICAgICByZWdleCA9IG5ldyBSZWdFeHAoIlxcIiArIHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJDaGFyYWN0ZXIsICdnJyk7CiAgICAgICAgICAgIHJlc3VsdC50ZXh0ID0gcmVzdWx0LnRleHQucmVwbGFjZShyZWdleCwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIHJldHVybiAiIiArIF90aGlzLm9wdGlvbnMubnVtYmVyZWRQYXJhbWV0ZXJzUHJlZml4ICsgaSsrOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMub3B0aW9ucyA9IG9sZDsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICB9OwoKICAgICAgUXVlcnlCdWlsZGVyLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYmxvY2s7CiAgICAgICAgcmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMub3B0aW9ucywgZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIF9pLCBfbGVuLCBfcmVmNiwgX3Jlc3VsdHM7CgogICAgICAgICAgX3JlZjYgPSB0aGlzLmJsb2NrczsKICAgICAgICAgIF9yZXN1bHRzID0gW107CgogICAgICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmNi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgICBibG9jayA9IF9yZWY2W19pXTsKCiAgICAgICAgICAgIF9yZXN1bHRzLnB1c2goYmxvY2suY2xvbmUoKSk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIF9yZXN1bHRzOwogICAgICAgIH0uY2FsbCh0aGlzKSk7CiAgICAgIH07CgogICAgICBRdWVyeUJ1aWxkZXIucHJvdG90eXBlLmlzTmVzdGFibGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9OwoKICAgICAgUXVlcnlCdWlsZGVyLnByb3RvdHlwZS5nZXRCbG9jayA9IGZ1bmN0aW9uIChibG9ja1R5cGUpIHsKICAgICAgICByZXR1cm4gdGhpcy5ibG9ja3MuZmlsdGVyKGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICByZXR1cm4gYiBpbnN0YW5jZW9mIGJsb2NrVHlwZTsKICAgICAgICB9KVswXTsKICAgICAgfTsKCiAgICAgIHJldHVybiBRdWVyeUJ1aWxkZXI7CiAgICB9KGNscy5CYXNlQnVpbGRlcik7CgogICAgY2xzLlNlbGVjdCA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKFNlbGVjdCwgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIFNlbGVjdChvcHRpb25zLCBibG9ja3MpIHsKICAgICAgICBpZiAoYmxvY2tzID09IG51bGwpIHsKICAgICAgICAgIGJsb2NrcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBibG9ja3MgfHwgKGJsb2NrcyA9IFtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsICdTRUxFQ1QnKSwgbmV3IGNscy5GdW5jdGlvbkJsb2NrKG9wdGlvbnMpLCBuZXcgY2xzLkRpc3RpbmN0QmxvY2sob3B0aW9ucyksIG5ldyBjbHMuR2V0RmllbGRCbG9jayhvcHRpb25zKSwgbmV3IGNscy5Gcm9tVGFibGVCbG9jayhfZXh0ZW5kKHt9LCBvcHRpb25zLCB7CiAgICAgICAgICBhbGxvd05lc3RlZDogdHJ1ZQogICAgICAgIH0pKSwgbmV3IGNscy5Kb2luQmxvY2soX2V4dGVuZCh7fSwgb3B0aW9ucywgewogICAgICAgICAgYWxsb3dOZXN0ZWQ6IHRydWUKICAgICAgICB9KSksIG5ldyBjbHMuV2hlcmVCbG9jayhvcHRpb25zKSwgbmV3IGNscy5Hcm91cEJ5QmxvY2sob3B0aW9ucyksIG5ldyBjbHMuSGF2aW5nQmxvY2sob3B0aW9ucyksIG5ldyBjbHMuT3JkZXJCeUJsb2NrKG9wdGlvbnMpLCBuZXcgY2xzLkxpbWl0QmxvY2sob3B0aW9ucyksIG5ldyBjbHMuT2Zmc2V0QmxvY2sob3B0aW9ucyksIG5ldyBjbHMuVW5pb25CbG9jayhfZXh0ZW5kKHt9LCBvcHRpb25zLCB7CiAgICAgICAgICBhbGxvd05lc3RlZDogdHJ1ZQogICAgICAgIH0pKV0pOwoKICAgICAgICBTZWxlY3QuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucywgYmxvY2tzKTsKICAgICAgfQoKICAgICAgU2VsZWN0LnByb3RvdHlwZS5pc05lc3RhYmxlID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9OwoKICAgICAgcmV0dXJuIFNlbGVjdDsKICAgIH0oY2xzLlF1ZXJ5QnVpbGRlcik7CgogICAgY2xzLlVwZGF0ZSA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKFVwZGF0ZSwgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIFVwZGF0ZShvcHRpb25zLCBibG9ja3MpIHsKICAgICAgICBpZiAoYmxvY2tzID09IG51bGwpIHsKICAgICAgICAgIGJsb2NrcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBibG9ja3MgfHwgKGJsb2NrcyA9IFtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsICdVUERBVEUnKSwgbmV3IGNscy5VcGRhdGVUYWJsZUJsb2NrKG9wdGlvbnMpLCBuZXcgY2xzLlNldEZpZWxkQmxvY2sob3B0aW9ucyksIG5ldyBjbHMuV2hlcmVCbG9jayhvcHRpb25zKSwgbmV3IGNscy5PcmRlckJ5QmxvY2sob3B0aW9ucyksIG5ldyBjbHMuTGltaXRCbG9jayhvcHRpb25zKV0pOwoKICAgICAgICBVcGRhdGUuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucywgYmxvY2tzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIFVwZGF0ZTsKICAgIH0oY2xzLlF1ZXJ5QnVpbGRlcik7CgogICAgY2xzLkRlbGV0ZSA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKERlbGV0ZSwgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIERlbGV0ZShvcHRpb25zLCBibG9ja3MpIHsKICAgICAgICBpZiAoYmxvY2tzID09IG51bGwpIHsKICAgICAgICAgIGJsb2NrcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBibG9ja3MgfHwgKGJsb2NrcyA9IFtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsICdERUxFVEUnKSwgbmV3IGNscy5Gcm9tVGFibGVCbG9jayhfZXh0ZW5kKHt9LCBvcHRpb25zLCB7CiAgICAgICAgICBzaW5nbGVUYWJsZTogdHJ1ZQogICAgICAgIH0pKSwgbmV3IGNscy5Kb2luQmxvY2sob3B0aW9ucyksIG5ldyBjbHMuV2hlcmVCbG9jayhvcHRpb25zKSwgbmV3IGNscy5PcmRlckJ5QmxvY2sob3B0aW9ucyksIG5ldyBjbHMuTGltaXRCbG9jayhvcHRpb25zKV0pOwoKICAgICAgICBEZWxldGUuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucywgYmxvY2tzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIERlbGV0ZTsKICAgIH0oY2xzLlF1ZXJ5QnVpbGRlcik7CgogICAgY2xzLkluc2VydCA9IGZ1bmN0aW9uIChfc3VwZXIpIHsKICAgICAgX19leHRlbmRzKEluc2VydCwgX3N1cGVyKTsKCiAgICAgIGZ1bmN0aW9uIEluc2VydChvcHRpb25zLCBibG9ja3MpIHsKICAgICAgICBpZiAoYmxvY2tzID09IG51bGwpIHsKICAgICAgICAgIGJsb2NrcyA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBibG9ja3MgfHwgKGJsb2NrcyA9IFtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsICdJTlNFUlQnKSwgbmV3IGNscy5JbnRvVGFibGVCbG9jayhvcHRpb25zKSwgbmV3IGNscy5JbnNlcnRGaWVsZFZhbHVlQmxvY2sob3B0aW9ucyksIG5ldyBjbHMuSW5zZXJ0RmllbGRzRnJvbVF1ZXJ5QmxvY2sob3B0aW9ucyldKTsKCiAgICAgICAgSW5zZXJ0Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG9wdGlvbnMsIGJsb2Nrcyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBJbnNlcnQ7CiAgICB9KGNscy5RdWVyeUJ1aWxkZXIpOwoKICAgIF9zcXVlbCA9IHsKICAgICAgVkVSU0lPTjogJzQuMi4zJywKICAgICAgZmxhdm91cjogZmxhdm91ciwKICAgICAgZXhwcjogZnVuY3Rpb24gZXhwcihvcHRpb25zKSB7CiAgICAgICAgcmV0dXJuIG5ldyBjbHMuRXhwcmVzc2lvbihvcHRpb25zKTsKICAgICAgfSwKICAgICAgc2VsZWN0OiBmdW5jdGlvbiBzZWxlY3Qob3B0aW9ucywgYmxvY2tzKSB7CiAgICAgICAgcmV0dXJuIG5ldyBjbHMuU2VsZWN0KG9wdGlvbnMsIGJsb2Nrcyk7CiAgICAgIH0sCiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9wdGlvbnMsIGJsb2NrcykgewogICAgICAgIHJldHVybiBuZXcgY2xzLlVwZGF0ZShvcHRpb25zLCBibG9ja3MpOwogICAgICB9LAogICAgICBpbnNlcnQ6IGZ1bmN0aW9uIGluc2VydChvcHRpb25zLCBibG9ja3MpIHsKICAgICAgICByZXR1cm4gbmV3IGNscy5JbnNlcnQob3B0aW9ucywgYmxvY2tzKTsKICAgICAgfSwKICAgICAgImRlbGV0ZSI6IGZ1bmN0aW9uIF9kZWxldGUob3B0aW9ucywgYmxvY2tzKSB7CiAgICAgICAgcmV0dXJuIG5ldyBjbHMuRGVsZXRlKG9wdGlvbnMsIGJsb2Nrcyk7CiAgICAgIH0sCiAgICAgIHJlZ2lzdGVyVmFsdWVIYW5kbGVyOiBjbHMucmVnaXN0ZXJWYWx1ZUhhbmRsZXIsCiAgICAgIGZ2YWw6IGNscy5mdmFsCiAgICB9OwogICAgX3NxdWVsLnJlbW92ZSA9IF9zcXVlbFsiZGVsZXRlIl07CiAgICBfc3F1ZWwuY2xzID0gY2xzOwogICAgcmV0dXJuIF9zcXVlbDsKICB9OwoKICBzcXVlbCA9IF9idWlsZFNxdWVsKCk7CgogIGlmICh0eXBlb2YgZGVmaW5lICE9PSAidW5kZWZpbmVkIiAmJiBkZWZpbmUgIT09IG51bGwgPyBkZWZpbmUuYW1kIDogdm9pZCAwKSB7CiAgICBkZWZpbmUoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gc3F1ZWw7CiAgICB9KTsKICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICJ1bmRlZmluZWQiICYmIG1vZHVsZSAhPT0gbnVsbCA/IG1vZHVsZS5leHBvcnRzIDogdm9pZCAwKSB7CiAgICBtb2R1bGUuZXhwb3J0cyA9IHNxdWVsOwogIH0gZWxzZSB7CiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgJiYgd2luZG93ICE9PSBudWxsKSB7CiAgICAgIHdpbmRvdy5zcXVlbCA9IHNxdWVsOwogICAgfQogIH0KCiAgc3F1ZWwuZmxhdm91cnMgPSB7fTsKCiAgc3F1ZWwudXNlRmxhdm91ciA9IGZ1bmN0aW9uIChmbGF2b3VyKSB7CiAgICB2YXIgczsKCiAgICBpZiAoZmxhdm91ciA9PSBudWxsKSB7CiAgICAgIGZsYXZvdXIgPSBudWxsOwogICAgfQoKICAgIGlmICghZmxhdm91cikgewogICAgICByZXR1cm4gc3F1ZWw7CiAgICB9CgogICAgaWYgKHNxdWVsLmZsYXZvdXJzW2ZsYXZvdXJdIGluc3RhbmNlb2YgRnVuY3Rpb24pIHsKICAgICAgcyA9IF9idWlsZFNxdWVsKGZsYXZvdXIpOwogICAgICBzcXVlbC5mbGF2b3Vyc1tmbGF2b3VyXS5jYWxsKG51bGwsIHMpOwogICAgICByZXR1cm4gczsKICAgIH0gZWxzZSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiRmxhdm91ciBub3QgYXZhaWxhYmxlOiAiICsgZmxhdm91cik7CiAgICB9CiAgfTsKCiAgU1EgPSBzcXVlbDsKICByZXR1cm4gU1E7Cn0gLy8gKS5jYWxsKHRoaXMpOw=="},{"version":3,"sources":["/Users/hyamakawa/VSCodeWork/Modern-T/Modern-T/study_template/web_application/server/util/squel.js"],"names":["SQ","setSQ","getValueHandler","registerValueHandler","squel","_buildSquel","_clone","_extend","_isArray","_isPlainObject","__slice","slice","__hasProp","hasOwnProperty","__bind","fn","me","apply","arguments","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","dst","k","sources","src","v","_i","_len","length","obj","Object","Array","ret","clone","JSON","parse","stringify","handlers","type","handler","typeHandler","Error","push","handlerLists","value","_j","_len1","flavour","cls","_ref","_ref1","_ref2","_ref3","_ref4","_ref5","_squel","DefaultQueryBuilderOptions","autoQuoteTableNames","autoQuoteFieldNames","autoQuoteAliasNames","nameQuoteCharacter","tableAliasQuoteCharacter","fieldAliasQuoteCharacter","valueHandlers","parameterCharacter","numberedParameters","numberedParametersPrefix","numberedParametersStartAt","replaceSingleQuotes","singleQuoteReplacement","separator","globalValueHandlers","Cloneable","newInstance","BaseBuilder","_super","options","_sanitizeNestableQuery","defaults","_getObjectClassName","arr","toString","match","_sanitizeCondition","condition","Expression","_sanitizeName","_sanitizeField","item","formattingOptions","quoteChar","QueryBuilder","ignorePeriodsForFieldNameQuotes","split","map","join","isNestable","_sanitizeTable","allowNested","e","sanitized","_error","_sanitizeTableAlias","_sanitizeFieldAlias","_sanitizeLimitOffset","parseInt","isNaN","_sanitizeValue","itemType","typeIsValid","FunctionBlock","_escapeValue","replace","_formatCustomValue","asParam","customHandler","_formatValueAsParam","p","_this","isArray","updateOptions","toParam","_formatValue","customFormattedValue","escapedValue","dontQuote","tree","current","nodes","_begin","op","new_tree","and_begin","or_begin","end","and","expr","param","para","or","_toString","node","paramMode","cv","inStr","nodeStr","params","str","text","concat","values","_cloneTree","_results","Block","exposedMethods","attr","charAt","buildStr","queryBuilder","buildParam","StringBlock","AbstractValueBlock","_str","_values","_setValue","c","finalStr","idx","shift","fval","inst","AbstractTableBlock","tables","_table","table","alias","singleTable","_hasTable","_buildParam","prefix","blk","paramStr","_k","_len2","UpdateTableBlock","FromTableBlock","from","IntoTableBlock","into","GetFieldBlock","_fieldAliases","_fields","fields","field","_results1","name","getBlock","AbstractSetFieldBlock","fieldOptions","_set","index","indexOf","_setFields","_setFieldsRows","fieldsRows","i","SetFieldBlock","set","setFields","vals","_ref6","InsertFieldValueBlock","setFieldsRows","_buildVals","formattedValue","j","_ref7","_buildValParams","_ref8","InsertFieldsFromQueryBlock","_query","fromQuery","selectQuery","qryParam","DistinctBlock","useDistinct","distinct","GroupByBlock","groups","group","f","OffsetBlock","offsets","offset","start","AbstractConditionBlock","conditionVerb","conditions","_condition","finalCondition","finalValues","inValues","nextValue","t","cond","condStr","pIndex","qv","WhereBlock","where","HavingBlock","having","OrderByBlock","orders","order","asc","dir","_buildStr","fstr","o","LimitBlock","limits","limit","max","JoinBlock","joins","left_join","right_join","outer_join","left_outer_join","full_join","cross_join","cp","joinStr","UnionBlock","unions","union","union_all","unionStr","blocks","block","methodBody","methodName","_fn","body","filter","old","regex","result","nestedBuilder","RegExp","blockType","b","Select","Update","Delete","Insert","VERSION","select","update","insert","remove","define","amd","module","exports","window","flavours","useFlavour","s","Function"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2014 Ramesh Nair (hiddentao.com)\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar SQ;\n\nexport function setSQ () {\n  var getValueHandler, registerValueHandler, squel, _buildSquel, _clone, _extend, _isArray, _isPlainObject,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _extend = function() {\n    var dst, k, sources, src, v, _i, _len;\n    dst = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    if (sources) {\n      for (_i = 0, _len = sources.length; _i < _len; _i++) {\n        src = sources[_i];\n        if (src) {\n          for (k in src) {\n            if (!__hasProp.call(src, k)) continue;\n            v = src[k];\n            dst[k] = v;\n          }\n        }\n      }\n    }\n    return dst;\n  };\n\n  _isPlainObject = function(obj) {\n    return obj.constructor.prototype === Object.prototype;\n  };\n\n  _isArray = function(obj) {\n    return obj.constructor.prototype === Array.prototype;\n  };\n\n  _clone = function(src) {\n    var k, ret, v;\n    if (!src) {\n      return src;\n    }\n    if ('function' === typeof src.clone) {\n      return src.clone();\n    } else if (_isPlainObject(src) || _isArray(src)) {\n      ret = new src.constructor;\n      for (k in src) {\n        if (!__hasProp.call(src, k)) continue;\n        v = src[k];\n        if ('function' !== typeof v) {\n          ret[k] = _clone(v);\n        }\n      }\n      return ret;\n    } else {\n      return JSON.parse(JSON.stringify(src));\n    }\n  };\n\n  registerValueHandler = function(handlers, type, handler) {\n    var typeHandler, _i, _len;\n    if ('function' !== typeof type && 'string' !== typeof type) {\n      throw new Error(\"type must be a class constructor or string denoting 'typeof' result\");\n    }\n    if ('function' !== typeof handler) {\n      throw new Error(\"handler must be a function\");\n    }\n    for (_i = 0, _len = handlers.length; _i < _len; _i++) {\n      typeHandler = handlers[_i];\n      if (typeHandler.type === type) {\n        typeHandler.handler = handler;\n        return;\n      }\n    }\n    return handlers.push({\n      type: type,\n      handler: handler\n    });\n  };\n\n  getValueHandler = function() {\n    var handlerLists, handlers, typeHandler, value, _i, _j, _len, _len1;\n    value = arguments[0], handlerLists = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = handlerLists.length; _i < _len; _i++) {\n      handlers = handlerLists[_i];\n      for (_j = 0, _len1 = handlers.length; _j < _len1; _j++) {\n        typeHandler = handlers[_j];\n        if (typeHandler.type === typeof value || (typeof typeHandler.type !== 'string' && value instanceof typeHandler.type)) {\n          return typeHandler.handler;\n        }\n      }\n    }\n    return void 0;\n  };\n\n  _buildSquel = function(flavour) {\n    var cls, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _squel;\n    if (flavour == null) {\n      flavour = null;\n    }\n    cls = {};\n    cls.DefaultQueryBuilderOptions = {\n      autoQuoteTableNames: false,\n      autoQuoteFieldNames: false,\n      autoQuoteAliasNames: true,\n      nameQuoteCharacter: '`',\n      tableAliasQuoteCharacter: '`',\n      fieldAliasQuoteCharacter: '\"',\n      valueHandlers: [],\n      parameterCharacter: '?',\n      numberedParameters: false,\n      numberedParametersPrefix: '$',\n      numberedParametersStartAt: 1,\n      replaceSingleQuotes: false,\n      singleQuoteReplacement: '\\'\\'',\n      separator: ' '\n    };\n    cls.globalValueHandlers = [];\n    cls.registerValueHandler = function(type, handler) {\n      return registerValueHandler(cls.globalValueHandlers, type, handler);\n    };\n    cls.Cloneable = (function() {\n      function Cloneable() {}\n\n      Cloneable.prototype.clone = function() {\n        var newInstance;\n        newInstance = new this.constructor;\n        return _extend(newInstance, _clone(_extend({}, this)));\n      };\n\n      return Cloneable;\n\n    })();\n    cls.BaseBuilder = (function(_super) {\n      __extends(BaseBuilder, _super);\n\n      function BaseBuilder(options) {\n        this._sanitizeNestableQuery = __bind(this._sanitizeNestableQuery, this);\n        var defaults;\n        defaults = JSON.parse(JSON.stringify(cls.DefaultQueryBuilderOptions));\n        this.options = _extend({}, defaults, options);\n      }\n\n      BaseBuilder.prototype.registerValueHandler = function(type, handler) {\n        registerValueHandler(this.options.valueHandlers, type, handler);\n        return this;\n      };\n\n      BaseBuilder.prototype._getObjectClassName = function(obj) {\n        var arr;\n        if (obj && obj.constructor && obj.constructor.toString) {\n          arr = obj.constructor.toString().match(/function\\s*(\\w+)/);\n          if (arr && arr.length === 2) {\n            return arr[1];\n          }\n        }\n        return void 0;\n      };\n\n      BaseBuilder.prototype._sanitizeCondition = function(condition) {\n        if (!(condition instanceof cls.Expression)) {\n          if (\"string\" !== typeof condition) {\n            throw new Error(\"condition must be a string or Expression instance\");\n          }\n        }\n        return condition;\n      };\n\n      BaseBuilder.prototype._sanitizeName = function(value, type) {\n        if (\"string\" !== typeof value) {\n          throw new Error(\"\" + type + \" must be a string\");\n        }\n        return value;\n      };\n\n      BaseBuilder.prototype._sanitizeField = function(item, formattingOptions) {\n        var quoteChar;\n        if (formattingOptions == null) {\n          formattingOptions = {};\n        }\n        if (item instanceof cls.QueryBuilder) {\n          item = \"(\" + item + \")\";\n        } else {\n          item = this._sanitizeName(item, \"field name\");\n          if (this.options.autoQuoteFieldNames) {\n            quoteChar = this.options.nameQuoteCharacter;\n            if (formattingOptions.ignorePeriodsForFieldNameQuotes) {\n              item = \"\" + quoteChar + item + quoteChar;\n            } else {\n              item = item.split('.').map(function(v) {\n                if ('*' === v) {\n                  return v;\n                } else {\n                  return \"\" + quoteChar + v + quoteChar;\n                }\n              }).join('.');\n            }\n          }\n        }\n        return item;\n      };\n\n      BaseBuilder.prototype._sanitizeNestableQuery = function(item) {\n        if (item instanceof cls.QueryBuilder && item.isNestable()) {\n          return item;\n        }\n        throw new Error(\"must be a nestable query, e.g. SELECT\");\n      };\n\n      BaseBuilder.prototype._sanitizeTable = function(item, allowNested) {\n        var e, sanitized;\n        if (allowNested == null) {\n          allowNested = false;\n        }\n        if (allowNested) {\n          if (\"string\" === typeof item) {\n            sanitized = item;\n          } else {\n            try {\n              sanitized = this._sanitizeNestableQuery(item);\n            } catch (_error) {\n              e = _error;\n              throw new Error(\"table name must be a string or a nestable query instance\");\n            }\n          }\n        } else {\n          sanitized = this._sanitizeName(item, 'table name');\n        }\n        if (this.options.autoQuoteTableNames) {\n          return \"\" + this.options.nameQuoteCharacter + sanitized + this.options.nameQuoteCharacter;\n        } else {\n          return sanitized;\n        }\n      };\n\n      BaseBuilder.prototype._sanitizeTableAlias = function(item) {\n        var sanitized;\n        sanitized = this._sanitizeName(item, \"table alias\");\n        if (this.options.autoQuoteAliasNames) {\n          return \"\" + this.options.tableAliasQuoteCharacter + sanitized + this.options.tableAliasQuoteCharacter;\n        } else {\n          return sanitized;\n        }\n      };\n\n      BaseBuilder.prototype._sanitizeFieldAlias = function(item) {\n        var sanitized;\n        sanitized = this._sanitizeName(item, \"field alias\");\n        if (this.options.autoQuoteAliasNames) {\n          return \"\" + this.options.fieldAliasQuoteCharacter + sanitized + this.options.fieldAliasQuoteCharacter;\n        } else {\n          return sanitized;\n        }\n      };\n\n      BaseBuilder.prototype._sanitizeLimitOffset = function(value) {\n        value = parseInt(value);\n        if (0 > value || isNaN(value)) {\n          throw new Error(\"limit/offset must be >= 0\");\n        }\n        return value;\n      };\n\n      BaseBuilder.prototype._sanitizeValue = function(item) {\n        var itemType, typeIsValid;\n        itemType = typeof item;\n        if (null === item) {\n\n        } else if (\"string\" === itemType || \"number\" === itemType || \"boolean\" === itemType) {\n\n        } else if (item instanceof cls.QueryBuilder && item.isNestable()) {\n\n        } else if (item instanceof cls.FunctionBlock) {\n\n        } else {\n          typeIsValid = void 0 !== getValueHandler(item, this.options.valueHandlers, cls.globalValueHandlers);\n          if (!typeIsValid) {\n            throw new Error(\"field value must be a string, number, boolean, null or one of the registered custom value types\");\n          }\n        }\n        return item;\n      };\n\n      BaseBuilder.prototype._escapeValue = function(value) {\n        if (true !== this.options.replaceSingleQuotes) {\n          return value;\n        }\n        return value.replace(/\\'/g, this.options.singleQuoteReplacement);\n      };\n\n      BaseBuilder.prototype._formatCustomValue = function(value, asParam) {\n        var customHandler;\n        if (asParam == null) {\n          asParam = false;\n        }\n        customHandler = getValueHandler(value, this.options.valueHandlers, cls.globalValueHandlers);\n        if (customHandler) {\n          value = customHandler(value, asParam);\n        }\n        return value;\n      };\n\n      BaseBuilder.prototype._formatValueAsParam = function(value) {\n        var p,\n          _this = this;\n        if (Array.isArray(value)) {\n          return value.map(function(v) {\n            return _this._formatValueAsParam(v);\n          });\n        } else {\n          if (value instanceof cls.QueryBuilder && value.isNestable()) {\n            value.updateOptions({\n              \"nestedBuilder\": true\n            });\n            return p = value.toParam();\n          } else if (value instanceof cls.Expression) {\n            return p = value.toParam();\n          } else {\n            return this._formatCustomValue(value, true);\n          }\n        }\n      };\n\n      BaseBuilder.prototype._formatValue = function(value, formattingOptions) {\n        var customFormattedValue, escapedValue,\n          _this = this;\n        if (formattingOptions == null) {\n          formattingOptions = {};\n        }\n        customFormattedValue = this._formatCustomValue(value);\n        if (customFormattedValue !== value) {\n          return \"(\" + customFormattedValue + \")\";\n        }\n        if (Array.isArray(value)) {\n          value = value.map(function(v) {\n            return _this._formatValue(v);\n          });\n          value = \"(\" + (value.join(', ')) + \")\";\n        } else {\n          if (null === value) {\n            value = \"NULL\";\n          } else if (\"boolean\" === typeof value) {\n            value = value ? \"TRUE\" : \"FALSE\";\n          } else if (value instanceof cls.QueryBuilder) {\n            value = \"(\" + value + \")\";\n          } else if (value instanceof cls.Expression) {\n            value = \"(\" + value + \")\";\n          } else if (\"number\" !== typeof value) {\n            if (formattingOptions.dontQuote) {\n              value = \"\" + value;\n            } else {\n              escapedValue = this._escapeValue(value);\n              value = \"'\" + escapedValue + \"'\";\n            }\n          }\n        }\n        return value;\n      };\n\n      return BaseBuilder;\n\n    })(cls.Cloneable);\n    cls.Expression = (function(_super) {\n      __extends(Expression, _super);\n\n      Expression.prototype.tree = null;\n\n      Expression.prototype.current = null;\n\n      function Expression(options) {\n        var defaults,\n          _this = this;\n        Expression.__super__.constructor.call(this);\n        defaults = JSON.parse(JSON.stringify(cls.DefaultQueryBuilderOptions));\n        this.options = _extend({}, defaults, options);\n        this.tree = {\n          parent: null,\n          nodes: []\n        };\n        this.current = this.tree;\n        this._begin = function(op) {\n          var new_tree;\n          new_tree = {\n            type: op,\n            parent: _this.current,\n            nodes: []\n          };\n          _this.current.nodes.push(new_tree);\n          _this.current = _this.current.nodes[_this.current.nodes.length - 1];\n          return _this;\n        };\n      }\n\n      Expression.prototype.and_begin = function() {\n        return this._begin('AND');\n      };\n\n      Expression.prototype.or_begin = function() {\n        return this._begin('OR');\n      };\n\n      Expression.prototype.end = function() {\n        if (!this.current.parent) {\n          throw new Error(\"begin() needs to be called\");\n        }\n        this.current = this.current.parent;\n        return this;\n      };\n\n      Expression.prototype.and = function(expr, param) {\n        if (!expr || \"string\" !== typeof expr) {\n          throw new Error(\"expr must be a string\");\n        }\n        this.current.nodes.push({\n          type: 'AND',\n          expr: expr,\n          para: param\n        });\n        return this;\n      };\n\n      Expression.prototype.or = function(expr, param) {\n        if (!expr || \"string\" !== typeof expr) {\n          throw new Error(\"expr must be a string\");\n        }\n        this.current.nodes.push({\n          type: 'OR',\n          expr: expr,\n          para: param\n        });\n        return this;\n      };\n\n      Expression.prototype.toString = function() {\n        if (null !== this.current.parent) {\n          throw new Error(\"end() needs to be called\");\n        }\n        return this._toString(this.tree);\n      };\n\n      Expression.prototype.toParam = function() {\n        if (null !== this.current.parent) {\n          throw new Error(\"end() needs to be called\");\n        }\n        return this._toString(this.tree, true);\n      };\n\n      Expression.prototype._toString = function(node, paramMode) {\n        var child, cv, inStr, nodeStr, params, str, _i, _len, _ref,\n          _this = this;\n        if (paramMode == null) {\n          paramMode = false;\n        }\n        str = \"\";\n        params = [];\n        _ref = node.nodes;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (child.expr != null) {\n            nodeStr = child.expr;\n            if (void 0 !== child.para) {\n              if (!paramMode) {\n                nodeStr = nodeStr.replace(this.options.parameterCharacter, this._formatValue(child.para));\n              } else {\n                cv = this._formatValueAsParam(child.para);\n                if (((cv != null ? cv.text : void 0) != null)) {\n                  params = params.concat(cv.values);\n                  nodeStr = nodeStr.replace(this.options.parameterCharacter, \"(\" + cv.text + \")\");\n                } else {\n                  params = params.concat(cv);\n                }\n                if (Array.isArray(child.para)) {\n                  inStr = Array.apply(null, new Array(child.para.length)).map(function() {\n                    return _this.options.parameterCharacter;\n                  });\n                  nodeStr = nodeStr.replace(this.options.parameterCharacter, \"(\" + (inStr.join(', ')) + \")\");\n                }\n              }\n            }\n          } else {\n            nodeStr = this._toString(child, paramMode);\n            if (paramMode) {\n              params = params.concat(nodeStr.values);\n              nodeStr = nodeStr.text;\n            }\n            if (\"\" !== nodeStr) {\n              nodeStr = \"(\" + nodeStr + \")\";\n            }\n          }\n          if (\"\" !== nodeStr) {\n            if (\"\" !== str) {\n              str += \" \" + child.type + \" \";\n            }\n            str += nodeStr;\n          }\n        }\n        if (paramMode) {\n          return {\n            text: str,\n            values: params\n          };\n        } else {\n          return str;\n        }\n      };\n\n      /*\n      Clone this expression.\n      \n      Note that the algorithm contained within this method is probably non-optimal, so please avoid cloning large\n      expression trees.\n      */\n\n\n      Expression.prototype.clone = function() {\n        var newInstance, _cloneTree;\n        newInstance = new this.constructor;\n        (_cloneTree = function(node) {\n          var child, _i, _len, _ref, _results;\n          _ref = node.nodes;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            child = _ref[_i];\n            if (child.expr != null) {\n              _results.push(newInstance.current.nodes.push(_clone(child)));\n            } else {\n              newInstance._begin(child.type);\n              _cloneTree(child);\n              if (!this.current === child) {\n                _results.push(newInstance.end());\n              } else {\n                _results.push(void 0);\n              }\n            }\n          }\n          return _results;\n        })(this.tree);\n        return newInstance;\n      };\n\n      return Expression;\n\n    })(cls.BaseBuilder);\n    cls.Block = (function(_super) {\n      __extends(Block, _super);\n\n      function Block() {\n        _ref = Block.__super__.constructor.apply(this, arguments);\n        return _ref;\n      }\n\n      Block.prototype.exposedMethods = function() {\n        var attr, ret, value;\n        ret = {};\n        for (attr in this) {\n          value = this[attr];\n          if (typeof value === \"function\" && attr.charAt(0) !== '_' && !cls.Block.prototype[attr]) {\n            ret[attr] = value;\n          }\n        }\n        return ret;\n      };\n\n      Block.prototype.buildStr = function(queryBuilder) {\n        return '';\n      };\n\n      Block.prototype.buildParam = function(queryBuilder) {\n        return {\n          text: this.buildStr(queryBuilder),\n          values: []\n        };\n      };\n\n      return Block;\n\n    })(cls.BaseBuilder);\n    cls.StringBlock = (function(_super) {\n      __extends(StringBlock, _super);\n\n      function StringBlock(options, str) {\n        StringBlock.__super__.constructor.call(this, options);\n        this.str = str;\n      }\n\n      StringBlock.prototype.buildStr = function(queryBuilder) {\n        return this.str;\n      };\n\n      return StringBlock;\n\n    })(cls.Block);\n    cls.AbstractValueBlock = (function(_super) {\n      __extends(AbstractValueBlock, _super);\n\n      function AbstractValueBlock(options) {\n        AbstractValueBlock.__super__.constructor.call(this, options);\n        this._str = '';\n        this._values = [];\n      }\n\n      AbstractValueBlock.prototype._setValue = function() {\n        var str, values;\n        str = arguments[0], values = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        this._str = str;\n        this._values = values;\n        return this;\n      };\n\n      AbstractValueBlock.prototype.buildStr = function(queryBuilder) {\n        var c, finalStr, idx, str, values, _i, _ref1;\n        str = this._str;\n        finalStr = '';\n        values = [].concat(this._values);\n        for (idx = _i = 0, _ref1 = str.length; 0 <= _ref1 ? _i < _ref1 : _i > _ref1; idx = 0 <= _ref1 ? ++_i : --_i) {\n          c = str.charAt(idx);\n          if (this.options.parameterCharacter === c && 0 < values.length) {\n            c = values.shift();\n          }\n          finalStr += c;\n        }\n        return finalStr;\n      };\n\n      AbstractValueBlock.prototype.buildParam = function(queryBuilder) {\n        return {\n          text: this._str,\n          values: this._values\n        };\n      };\n\n      return AbstractValueBlock;\n\n    })(cls.Block);\n    cls.FunctionBlock = (function(_super) {\n      __extends(FunctionBlock, _super);\n\n      function FunctionBlock() {\n        _ref1 = FunctionBlock.__super__.constructor.apply(this, arguments);\n        return _ref1;\n      }\n\n      FunctionBlock.prototype[\"function\"] = function() {\n        var str, values;\n        str = arguments[0], values = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        return this._setValue.apply(this, [str].concat(values));\n      };\n\n      return FunctionBlock;\n\n    })(cls.AbstractValueBlock);\n    cls.fval = function() {\n      var inst, str, values;\n      str = arguments[0], values = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      inst = new cls.FunctionBlock();\n      return inst[\"function\"].apply(inst, [str].concat(values));\n    };\n    cls.registerValueHandler(cls.FunctionBlock, function(value, asParam) {\n      if (asParam == null) {\n        asParam = false;\n      }\n      if (asParam) {\n        return value.buildParam();\n      } else {\n        return value.buildStr();\n      }\n    });\n    cls.AbstractTableBlock = (function(_super) {\n      __extends(AbstractTableBlock, _super);\n\n      function AbstractTableBlock(options) {\n        AbstractTableBlock.__super__.constructor.call(this, options);\n        this.tables = [];\n      }\n\n      AbstractTableBlock.prototype._table = function(table, alias) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (alias) {\n          alias = this._sanitizeTableAlias(alias);\n        }\n        table = this._sanitizeTable(table, this.options.allowNested || false);\n        if (this.options.singleTable) {\n          this.tables = [];\n        }\n        return this.tables.push({\n          table: table,\n          alias: alias\n        });\n      };\n\n      AbstractTableBlock.prototype._hasTable = function() {\n        return 0 < this.tables.length;\n      };\n\n      AbstractTableBlock.prototype.buildStr = function(queryBuilder) {\n        var table, tables, _i, _len, _ref2;\n        if (!this._hasTable()) {\n          return \"\";\n        }\n        tables = \"\";\n        _ref2 = this.tables;\n        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n          table = _ref2[_i];\n          if (\"\" !== tables) {\n            tables += \", \";\n          }\n          if (\"string\" === typeof table.table) {\n            tables += table.table;\n          } else {\n            tables += \"(\" + table.table + \")\";\n          }\n          if (table.alias) {\n            tables += \" \" + table.alias;\n          }\n        }\n        return tables;\n      };\n\n      AbstractTableBlock.prototype._buildParam = function(queryBuilder, prefix) {\n        var blk, p, paramStr, params, ret, v, _i, _j, _k, _len, _len1, _len2, _ref2, _ref3;\n        if (prefix == null) {\n          prefix = null;\n        }\n        ret = {\n          text: \"\",\n          values: []\n        };\n        params = [];\n        paramStr = \"\";\n        if (!this._hasTable()) {\n          return ret;\n        }\n        _ref2 = this.tables;\n        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n          blk = _ref2[_i];\n          if (\"string\" === typeof blk.table) {\n            p = {\n              \"text\": \"\" + blk.table,\n              \"values\": []\n            };\n          } else if (blk.table instanceof cls.QueryBuilder) {\n            blk.table.updateOptions({\n              \"nestedBuilder\": true\n            });\n            p = blk.table.toParam();\n          } else {\n            blk.updateOptions({\n              \"nestedBuilder\": true\n            });\n            p = blk.buildParam(queryBuilder);\n          }\n          p.table = blk;\n          params.push(p);\n        }\n        for (_j = 0, _len1 = params.length; _j < _len1; _j++) {\n          p = params[_j];\n          if (paramStr !== \"\") {\n            paramStr += \", \";\n          } else {\n            if ((prefix != null) && prefix !== \"\") {\n              paramStr += \"\" + prefix + \" \" + paramStr;\n            }\n            paramStr;\n          }\n          if (\"string\" === typeof p.table.table) {\n            paramStr += \"\" + p.text;\n          } else {\n            paramStr += \"(\" + p.text + \")\";\n          }\n          if (p.table.alias != null) {\n            paramStr += \" \" + p.table.alias;\n          }\n          _ref3 = p.values;\n          for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {\n            v = _ref3[_k];\n            ret.values.push(this._formatCustomValue(v));\n          }\n        }\n        ret.text += paramStr;\n        return ret;\n      };\n\n      AbstractTableBlock.prototype.buildParam = function(queryBuilder) {\n        return this._buildParam(queryBuilder);\n      };\n\n      return AbstractTableBlock;\n\n    })(cls.Block);\n    cls.UpdateTableBlock = (function(_super) {\n      __extends(UpdateTableBlock, _super);\n\n      function UpdateTableBlock() {\n        _ref2 = UpdateTableBlock.__super__.constructor.apply(this, arguments);\n        return _ref2;\n      }\n\n      UpdateTableBlock.prototype.table = function(table, alias) {\n        if (alias == null) {\n          alias = null;\n        }\n        return this._table(table, alias);\n      };\n\n      return UpdateTableBlock;\n\n    })(cls.AbstractTableBlock);\n    cls.FromTableBlock = (function(_super) {\n      __extends(FromTableBlock, _super);\n\n      function FromTableBlock() {\n        _ref3 = FromTableBlock.__super__.constructor.apply(this, arguments);\n        return _ref3;\n      }\n\n      FromTableBlock.prototype.from = function(table, alias) {\n        if (alias == null) {\n          alias = null;\n        }\n        return this._table(table, alias);\n      };\n\n      FromTableBlock.prototype.buildStr = function(queryBuilder) {\n        var tables;\n        tables = FromTableBlock.__super__.buildStr.call(this, queryBuilder);\n        if (tables.length) {\n          return \"FROM \" + tables;\n        } else {\n          return \"\";\n        }\n      };\n\n      FromTableBlock.prototype.buildParam = function(queryBuilder) {\n        return this._buildParam(queryBuilder, \"FROM\");\n      };\n\n      return FromTableBlock;\n\n    })(cls.AbstractTableBlock);\n    cls.IntoTableBlock = (function(_super) {\n      __extends(IntoTableBlock, _super);\n\n      function IntoTableBlock(options) {\n        IntoTableBlock.__super__.constructor.call(this, options);\n        this.table = null;\n      }\n\n      IntoTableBlock.prototype.into = function(table) {\n        return this.table = this._sanitizeTable(table, false);\n      };\n\n      IntoTableBlock.prototype.buildStr = function(queryBuilder) {\n        if (!this.table) {\n          throw new Error(\"into() needs to be called\");\n        }\n        return \"INTO \" + this.table;\n      };\n\n      return IntoTableBlock;\n\n    })(cls.Block);\n    cls.GetFieldBlock = (function(_super) {\n      __extends(GetFieldBlock, _super);\n\n      function GetFieldBlock(options) {\n        GetFieldBlock.__super__.constructor.call(this, options);\n        this._fieldAliases = {};\n        this._fields = [];\n      }\n\n      GetFieldBlock.prototype.fields = function(_fields, options) {\n        var alias, field, _i, _len, _results, _results1;\n        if (options == null) {\n          options = {};\n        }\n        if (Array.isArray(_fields)) {\n          _results = [];\n          for (_i = 0, _len = _fields.length; _i < _len; _i++) {\n            field = _fields[_i];\n            _results.push(this.field(field, null, options));\n          }\n          return _results;\n        } else {\n          _results1 = [];\n          for (field in _fields) {\n            alias = _fields[field];\n            _results1.push(this.field(field, alias, options));\n          }\n          return _results1;\n        }\n      };\n\n      GetFieldBlock.prototype.field = function(field, alias, options) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (options == null) {\n          options = {};\n        }\n        field = this._sanitizeField(field, options);\n        if (alias) {\n          alias = this._sanitizeFieldAlias(alias);\n        }\n        if (this._fieldAliases[field] === alias) {\n          return;\n        }\n        this._fieldAliases[field] = alias;\n        return this._fields.push({\n          name: field,\n          alias: alias\n        });\n      };\n\n      GetFieldBlock.prototype.buildStr = function(queryBuilder) {\n        var field, fields, _i, _len, _ref4;\n        if (!queryBuilder.getBlock(cls.FromTableBlock)._hasTable()) {\n          return \"\";\n        }\n        fields = \"\";\n        _ref4 = this._fields;\n        for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n          field = _ref4[_i];\n          if (\"\" !== fields) {\n            fields += \", \";\n          }\n          fields += field.name;\n          if (field.alias) {\n            fields += \" AS \" + field.alias;\n          }\n        }\n        if (\"\" === fields) {\n          return \"*\";\n        } else {\n          return fields;\n        }\n      };\n\n      return GetFieldBlock;\n\n    })(cls.Block);\n    cls.AbstractSetFieldBlock = (function(_super) {\n      __extends(AbstractSetFieldBlock, _super);\n\n      function AbstractSetFieldBlock(options) {\n        AbstractSetFieldBlock.__super__.constructor.call(this, options);\n        this.fieldOptions = [];\n        this.fields = [];\n        this.values = [];\n      }\n\n      AbstractSetFieldBlock.prototype._set = function(field, value, options) {\n        var index;\n        if (options == null) {\n          options = {};\n        }\n        if (this.values.length > 1) {\n          throw new Error(\"Cannot call set or setFields on multiple rows of fields.\");\n        }\n        if (void 0 !== value) {\n          value = this._sanitizeValue(value);\n        }\n        index = this.fields.indexOf(this._sanitizeField(field, options));\n        if (index !== -1) {\n          this.values[0][index] = value;\n          this.fieldOptions[0][index] = options;\n        } else {\n          this.fields.push(this._sanitizeField(field, options));\n          index = this.fields.length - 1;\n          if (Array.isArray(this.values[0])) {\n            this.values[0][index] = value;\n            this.fieldOptions[0][index] = options;\n          } else {\n            this.values.push([value]);\n            this.fieldOptions.push([options]);\n          }\n        }\n        return this;\n      };\n\n      AbstractSetFieldBlock.prototype._setFields = function(fields, options) {\n        var field;\n        if (options == null) {\n          options = {};\n        }\n        if (typeof fields !== 'object') {\n          throw new Error(\"Expected an object but got \" + typeof fields);\n        }\n        for (field in fields) {\n          if (!__hasProp.call(fields, field)) continue;\n          this._set(field, fields[field], options);\n        }\n        return this;\n      };\n\n      AbstractSetFieldBlock.prototype._setFieldsRows = function(fieldsRows, options) {\n        var field, i, index, value, _i, _ref4, _ref5;\n        if (options == null) {\n          options = {};\n        }\n        if (!Array.isArray(fieldsRows)) {\n          throw new Error(\"Expected an array of objects but got \" + typeof fieldsRows);\n        }\n        this.fields = [];\n        this.values = [];\n        for (i = _i = 0, _ref4 = fieldsRows.length; 0 <= _ref4 ? _i < _ref4 : _i > _ref4; i = 0 <= _ref4 ? ++_i : --_i) {\n          _ref5 = fieldsRows[i];\n          for (field in _ref5) {\n            if (!__hasProp.call(_ref5, field)) continue;\n            index = this.fields.indexOf(this._sanitizeField(field, options));\n            if (0 < i && -1 === index) {\n              throw new Error('All fields in subsequent rows must match the fields in the first row');\n            }\n            if (-1 === index) {\n              this.fields.push(this._sanitizeField(field, options));\n              index = this.fields.length - 1;\n            }\n            value = this._sanitizeValue(fieldsRows[i][field]);\n            if (Array.isArray(this.values[i])) {\n              this.values[i][index] = value;\n              this.fieldOptions[i][index] = options;\n            } else {\n              this.values[i] = [value];\n              this.fieldOptions[i] = [options];\n            }\n          }\n        }\n        return this;\n      };\n\n      AbstractSetFieldBlock.prototype.buildStr = function() {\n        throw new Error('Not yet implemented');\n      };\n\n      AbstractSetFieldBlock.prototype.buildParam = function() {\n        throw new Error('Not yet implemented');\n      };\n\n      return AbstractSetFieldBlock;\n\n    })(cls.Block);\n    cls.SetFieldBlock = (function(_super) {\n      __extends(SetFieldBlock, _super);\n\n      function SetFieldBlock() {\n        _ref4 = SetFieldBlock.__super__.constructor.apply(this, arguments);\n        return _ref4;\n      }\n\n      SetFieldBlock.prototype.set = function(field, value, options) {\n        return this._set(field, value, options);\n      };\n\n      SetFieldBlock.prototype.setFields = function(fields, options) {\n        return this._setFields(fields, options);\n      };\n\n      SetFieldBlock.prototype.buildStr = function(queryBuilder) {\n        var field, fieldOptions, i, str, value, _i, _ref5;\n        if (0 >= this.fields.length) {\n          throw new Error(\"set() needs to be called\");\n        }\n        str = \"\";\n        for (i = _i = 0, _ref5 = this.fields.length; 0 <= _ref5 ? _i < _ref5 : _i > _ref5; i = 0 <= _ref5 ? ++_i : --_i) {\n          field = this.fields[i];\n          if (\"\" !== str) {\n            str += \", \";\n          }\n          value = this.values[0][i];\n          fieldOptions = this.fieldOptions[0][i];\n          if (typeof value === 'undefined') {\n            str += field;\n          } else {\n            str += \"\" + field + \" = \" + (this._formatValue(value, fieldOptions));\n          }\n        }\n        return \"SET \" + str;\n      };\n\n      SetFieldBlock.prototype.buildParam = function(queryBuilder) {\n        var field, i, p, str, v, vals, value, _i, _j, _len, _ref5, _ref6;\n        if (0 >= this.fields.length) {\n          throw new Error(\"set() needs to be called\");\n        }\n        str = \"\";\n        vals = [];\n        for (i = _i = 0, _ref5 = this.fields.length; 0 <= _ref5 ? _i < _ref5 : _i > _ref5; i = 0 <= _ref5 ? ++_i : --_i) {\n          field = this.fields[i];\n          if (\"\" !== str) {\n            str += \", \";\n          }\n          value = this.values[0][i];\n          if (typeof value === 'undefined') {\n            str += field;\n          } else {\n            p = this._formatValueAsParam(value);\n            if ((p != null ? p.text : void 0) != null) {\n              str += \"\" + field + \" = (\" + p.text + \")\";\n              _ref6 = p.values;\n              for (_j = 0, _len = _ref6.length; _j < _len; _j++) {\n                v = _ref6[_j];\n                vals.push(v);\n              }\n            } else {\n              str += \"\" + field + \" = \" + this.options.parameterCharacter;\n              vals.push(p);\n            }\n          }\n        }\n        return {\n          text: \"SET \" + str,\n          values: vals\n        };\n      };\n\n      return SetFieldBlock;\n\n    })(cls.AbstractSetFieldBlock);\n    cls.InsertFieldValueBlock = (function(_super) {\n      __extends(InsertFieldValueBlock, _super);\n\n      function InsertFieldValueBlock() {\n        _ref5 = InsertFieldValueBlock.__super__.constructor.apply(this, arguments);\n        return _ref5;\n      }\n\n      InsertFieldValueBlock.prototype.set = function(field, value, options) {\n        if (options == null) {\n          options = {};\n        }\n        return this._set(field, value, options);\n      };\n\n      InsertFieldValueBlock.prototype.setFields = function(fields, options) {\n        return this._setFields(fields, options);\n      };\n\n      InsertFieldValueBlock.prototype.setFieldsRows = function(fieldsRows, options) {\n        return this._setFieldsRows(fieldsRows, options);\n      };\n\n      InsertFieldValueBlock.prototype._buildVals = function() {\n        var formattedValue, i, j, vals, _i, _j, _ref6, _ref7;\n        vals = [];\n        for (i = _i = 0, _ref6 = this.values.length; 0 <= _ref6 ? _i < _ref6 : _i > _ref6; i = 0 <= _ref6 ? ++_i : --_i) {\n          for (j = _j = 0, _ref7 = this.values[i].length; 0 <= _ref7 ? _j < _ref7 : _j > _ref7; j = 0 <= _ref7 ? ++_j : --_j) {\n            formattedValue = this._formatValue(this.values[i][j], this.fieldOptions[i][j]);\n            if ('string' === typeof vals[i]) {\n              vals[i] += ', ' + formattedValue;\n            } else {\n              vals[i] = '' + formattedValue;\n            }\n          }\n        }\n        return vals;\n      };\n\n      InsertFieldValueBlock.prototype._buildValParams = function() {\n        var i, j, p, params, str, v, vals, _i, _j, _k, _len, _ref6, _ref7, _ref8;\n        vals = [];\n        params = [];\n        for (i = _i = 0, _ref6 = this.values.length; 0 <= _ref6 ? _i < _ref6 : _i > _ref6; i = 0 <= _ref6 ? ++_i : --_i) {\n          for (j = _j = 0, _ref7 = this.values[i].length; 0 <= _ref7 ? _j < _ref7 : _j > _ref7; j = 0 <= _ref7 ? ++_j : --_j) {\n            p = this._formatValueAsParam(this.values[i][j]);\n            if ((p != null ? p.text : void 0) != null) {\n              str = p.text;\n              _ref8 = p.values;\n              for (_k = 0, _len = _ref8.length; _k < _len; _k++) {\n                v = _ref8[_k];\n                params.push(v);\n              }\n            } else {\n              str = this.options.parameterCharacter;\n              params.push(p);\n            }\n            if ('string' === typeof vals[i]) {\n              vals[i] += \", \" + str;\n            } else {\n              vals[i] = \"\" + str;\n            }\n          }\n        }\n        return {\n          vals: vals,\n          params: params\n        };\n      };\n\n      InsertFieldValueBlock.prototype.buildStr = function(queryBuilder) {\n        if (0 >= this.fields.length) {\n          return '';\n        }\n        return \"(\" + (this.fields.join(', ')) + \") VALUES (\" + (this._buildVals().join('), (')) + \")\";\n      };\n\n      InsertFieldValueBlock.prototype.buildParam = function(queryBuilder) {\n        var i, params, str, vals, _i, _ref6, _ref7;\n        if (0 >= this.fields.length) {\n          return {\n            text: '',\n            values: []\n          };\n        }\n        str = \"\";\n        _ref6 = this._buildValParams(), vals = _ref6.vals, params = _ref6.params;\n        for (i = _i = 0, _ref7 = this.fields.length; 0 <= _ref7 ? _i < _ref7 : _i > _ref7; i = 0 <= _ref7 ? ++_i : --_i) {\n          if (\"\" !== str) {\n            str += \", \";\n          }\n          str += this.fields[i];\n        }\n        return {\n          text: \"(\" + str + \") VALUES (\" + (vals.join('), (')) + \")\",\n          values: params\n        };\n      };\n\n      return InsertFieldValueBlock;\n\n    })(cls.AbstractSetFieldBlock);\n    cls.InsertFieldsFromQueryBlock = (function(_super) {\n      __extends(InsertFieldsFromQueryBlock, _super);\n\n      function InsertFieldsFromQueryBlock(options) {\n        InsertFieldsFromQueryBlock.__super__.constructor.call(this, options);\n        this._fields = [];\n        this._query = null;\n      }\n\n      InsertFieldsFromQueryBlock.prototype.fromQuery = function(fields, selectQuery) {\n        var _this = this;\n        this._fields = fields.map((function(v) {\n          return _this._sanitizeField(v);\n        }));\n        return this._query = this._sanitizeNestableQuery(selectQuery);\n      };\n\n      InsertFieldsFromQueryBlock.prototype.buildStr = function(queryBuilder) {\n        if (0 >= this._fields.length) {\n          return '';\n        }\n        return \"(\" + (this._fields.join(', ')) + \") (\" + (this._query.toString()) + \")\";\n      };\n\n      InsertFieldsFromQueryBlock.prototype.buildParam = function(queryBuilder) {\n        var qryParam;\n        if (0 >= this._fields.length) {\n          return {\n            text: '',\n            values: []\n          };\n        }\n        qryParam = this._query.toParam();\n        return {\n          text: \"(\" + (this._fields.join(', ')) + \") (\" + qryParam.text + \")\",\n          values: qryParam.values\n        };\n      };\n\n      return InsertFieldsFromQueryBlock;\n\n    })(cls.Block);\n    cls.DistinctBlock = (function(_super) {\n      __extends(DistinctBlock, _super);\n\n      function DistinctBlock(options) {\n        DistinctBlock.__super__.constructor.call(this, options);\n        this.useDistinct = false;\n      }\n\n      DistinctBlock.prototype.distinct = function() {\n        return this.useDistinct = true;\n      };\n\n      DistinctBlock.prototype.buildStr = function(queryBuilder) {\n        if (this.useDistinct) {\n          return \"DISTINCT\";\n        } else {\n          return \"\";\n        }\n      };\n\n      return DistinctBlock;\n\n    })(cls.Block);\n    cls.GroupByBlock = (function(_super) {\n      __extends(GroupByBlock, _super);\n\n      function GroupByBlock(options) {\n        GroupByBlock.__super__.constructor.call(this, options);\n        this.groups = [];\n      }\n\n      GroupByBlock.prototype.group = function(field) {\n        field = this._sanitizeField(field);\n        return this.groups.push(field);\n      };\n\n      GroupByBlock.prototype.buildStr = function(queryBuilder) {\n        var f, groups, _i, _len, _ref6;\n        groups = \"\";\n        if (0 < this.groups.length) {\n          _ref6 = this.groups;\n          for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n            f = _ref6[_i];\n            if (\"\" !== groups) {\n              groups += \", \";\n            }\n            groups += f;\n          }\n          groups = \"GROUP BY \" + groups;\n        }\n        return groups;\n      };\n\n      return GroupByBlock;\n\n    })(cls.Block);\n    cls.OffsetBlock = (function(_super) {\n      __extends(OffsetBlock, _super);\n\n      function OffsetBlock(options) {\n        OffsetBlock.__super__.constructor.call(this, options);\n        this.offsets = null;\n      }\n\n      OffsetBlock.prototype.offset = function(start) {\n        start = this._sanitizeLimitOffset(start);\n        return this.offsets = start;\n      };\n\n      OffsetBlock.prototype.buildStr = function(queryBuilder) {\n        if (this.offsets) {\n          return \"OFFSET \" + this.offsets;\n        } else {\n          return \"\";\n        }\n      };\n\n      return OffsetBlock;\n\n    })(cls.Block);\n    cls.AbstractConditionBlock = (function(_super) {\n      __extends(AbstractConditionBlock, _super);\n\n      function AbstractConditionBlock(conditionVerb, options) {\n        this.conditionVerb = conditionVerb;\n        AbstractConditionBlock.__super__.constructor.call(this, options);\n        this.conditions = [];\n      }\n\n      AbstractConditionBlock.prototype._condition = function() {\n        var c, condition, finalCondition, finalValues, idx, inValues, item, nextValue, t, values, _i, _j, _len, _ref6;\n        condition = arguments[0], values = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        condition = this._sanitizeCondition(condition);\n        finalCondition = \"\";\n        finalValues = [];\n        if (condition instanceof cls.Expression) {\n          t = condition.toParam();\n          finalCondition = t.text;\n          finalValues = t.values;\n        } else {\n          for (idx = _i = 0, _ref6 = condition.length; 0 <= _ref6 ? _i < _ref6 : _i > _ref6; idx = 0 <= _ref6 ? ++_i : --_i) {\n            c = condition.charAt(idx);\n            if (this.options.parameterCharacter === c && 0 < values.length) {\n              nextValue = values.shift();\n              if (Array.isArray(nextValue)) {\n                inValues = [];\n                for (_j = 0, _len = nextValue.length; _j < _len; _j++) {\n                  item = nextValue[_j];\n                  inValues.push(this._sanitizeValue(item));\n                }\n                finalValues = finalValues.concat(inValues);\n                finalCondition += \"(\" + (((function() {\n                  var _k, _len1, _results;\n                  _results = [];\n                  for (_k = 0, _len1 = inValues.length; _k < _len1; _k++) {\n                    item = inValues[_k];\n                    _results.push(this.options.parameterCharacter);\n                  }\n                  return _results;\n                }).call(this)).join(', ')) + \")\";\n              } else {\n                finalCondition += this.options.parameterCharacter;\n                finalValues.push(this._sanitizeValue(nextValue));\n              }\n            } else {\n              finalCondition += c;\n            }\n          }\n        }\n        if (\"\" !== finalCondition) {\n          return this.conditions.push({\n            text: finalCondition,\n            values: finalValues\n          });\n        }\n      };\n\n      AbstractConditionBlock.prototype.buildStr = function(queryBuilder) {\n        var c, cond, condStr, idx, pIndex, _i, _j, _len, _ref6, _ref7;\n        if (0 >= this.conditions.length) {\n          return \"\";\n        }\n        condStr = \"\";\n        _ref6 = this.conditions;\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          cond = _ref6[_i];\n          if (\"\" !== condStr) {\n            condStr += \") AND (\";\n          }\n          if (0 < cond.values.length) {\n            pIndex = 0;\n            for (idx = _j = 0, _ref7 = cond.text.length; 0 <= _ref7 ? _j < _ref7 : _j > _ref7; idx = 0 <= _ref7 ? ++_j : --_j) {\n              c = cond.text.charAt(idx);\n              if (this.options.parameterCharacter === c) {\n                condStr += this._formatValue(cond.values[pIndex++]);\n              } else {\n                condStr += c;\n              }\n            }\n          } else {\n            condStr += cond.text;\n          }\n        }\n        return \"\" + this.conditionVerb + \" (\" + condStr + \")\";\n      };\n\n      AbstractConditionBlock.prototype.buildParam = function(queryBuilder) {\n        var cond, condStr, i, p, qv, ret, str, v, _i, _j, _k, _len, _len1, _len2, _ref6, _ref7, _ref8;\n        ret = {\n          text: \"\",\n          values: []\n        };\n        if (0 >= this.conditions.length) {\n          return ret;\n        }\n        condStr = \"\";\n        _ref6 = this.conditions;\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          cond = _ref6[_i];\n          if (\"\" !== condStr) {\n            condStr += \") AND (\";\n          }\n          str = cond.text.split(this.options.parameterCharacter);\n          i = 0;\n          _ref7 = cond.values;\n          for (_j = 0, _len1 = _ref7.length; _j < _len1; _j++) {\n            v = _ref7[_j];\n            if (str[i] != null) {\n              condStr += \"\" + str[i];\n            }\n            p = this._formatValueAsParam(v);\n            if (((p != null ? p.text : void 0) != null)) {\n              condStr += \"(\" + p.text + \")\";\n              _ref8 = p.values;\n              for (_k = 0, _len2 = _ref8.length; _k < _len2; _k++) {\n                qv = _ref8[_k];\n                ret.values.push(qv);\n              }\n            } else {\n              condStr += this.options.parameterCharacter;\n              ret.values.push(p);\n            }\n            i = i + 1;\n          }\n          if (str[i] != null) {\n            condStr += \"\" + str[i];\n          }\n        }\n        ret.text = \"\" + this.conditionVerb + \" (\" + condStr + \")\";\n        return ret;\n      };\n\n      return AbstractConditionBlock;\n\n    })(cls.Block);\n    cls.WhereBlock = (function(_super) {\n      __extends(WhereBlock, _super);\n\n      function WhereBlock(options) {\n        WhereBlock.__super__.constructor.call(this, 'WHERE', options);\n      }\n\n      WhereBlock.prototype.where = function() {\n        var condition, values;\n        condition = arguments[0], values = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        return this._condition.apply(this, [condition].concat(__slice.call(values)));\n      };\n\n      return WhereBlock;\n\n    })(cls.AbstractConditionBlock);\n    cls.HavingBlock = (function(_super) {\n      __extends(HavingBlock, _super);\n\n      function HavingBlock(options) {\n        HavingBlock.__super__.constructor.call(this, 'HAVING', options);\n      }\n\n      HavingBlock.prototype.having = function() {\n        var condition, values;\n        condition = arguments[0], values = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        return this._condition.apply(this, [condition].concat(__slice.call(values)));\n      };\n\n      return HavingBlock;\n\n    })(cls.AbstractConditionBlock);\n    cls.OrderByBlock = (function(_super) {\n      __extends(OrderByBlock, _super);\n\n      function OrderByBlock(options) {\n        OrderByBlock.__super__.constructor.call(this, options);\n        this.orders = [];\n        this._values = [];\n      }\n\n      OrderByBlock.prototype.order = function() {\n        var asc, field, values;\n        field = arguments[0], asc = arguments[1], values = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n        field = this._sanitizeField(field);\n        if (asc === void 0) {\n          asc = true;\n        }\n        if (asc !== null) {\n          asc = !!asc;\n        }\n        this._values = values;\n        return this.orders.push({\n          field: field,\n          dir: asc\n        });\n      };\n\n      OrderByBlock.prototype._buildStr = function(toParam) {\n        var c, fstr, idx, o, orders, pIndex, _i, _j, _len, _ref6, _ref7;\n        if (toParam == null) {\n          toParam = false;\n        }\n        if (0 < this.orders.length) {\n          pIndex = 0;\n          orders = \"\";\n          _ref6 = this.orders;\n          for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n            o = _ref6[_i];\n            if (\"\" !== orders) {\n              orders += \", \";\n            }\n            fstr = \"\";\n            if (!toParam) {\n              for (idx = _j = 0, _ref7 = o.field.length; 0 <= _ref7 ? _j < _ref7 : _j > _ref7; idx = 0 <= _ref7 ? ++_j : --_j) {\n                c = o.field.charAt(idx);\n                if (this.options.parameterCharacter === c) {\n                  fstr += this._formatValue(this._values[pIndex++]);\n                } else {\n                  fstr += c;\n                }\n              }\n            } else {\n              fstr = o.field;\n            }\n            orders += \"\" + fstr;\n            if (o.dir !== null) {\n              orders += \" \" + (o.dir ? 'ASC' : 'DESC');\n            }\n          }\n          return \"ORDER BY \" + orders;\n        } else {\n          return \"\";\n        }\n      };\n\n      OrderByBlock.prototype.buildStr = function(queryBuilder) {\n        return this._buildStr();\n      };\n\n      OrderByBlock.prototype.buildParam = function(queryBuilder) {\n        var _this = this;\n        return {\n          text: this._buildStr(true),\n          values: this._values.map(function(v) {\n            return _this._formatValueAsParam(v);\n          })\n        };\n      };\n\n      return OrderByBlock;\n\n    })(cls.Block);\n    cls.LimitBlock = (function(_super) {\n      __extends(LimitBlock, _super);\n\n      function LimitBlock(options) {\n        LimitBlock.__super__.constructor.call(this, options);\n        this.limits = null;\n      }\n\n      LimitBlock.prototype.limit = function(max) {\n        max = this._sanitizeLimitOffset(max);\n        return this.limits = max;\n      };\n\n      LimitBlock.prototype.buildStr = function(queryBuilder) {\n        if (this.limits || this.limits === 0) {\n          return \"LIMIT \" + this.limits;\n        } else {\n          return \"\";\n        }\n      };\n\n      return LimitBlock;\n\n    })(cls.Block);\n    cls.JoinBlock = (function(_super) {\n      __extends(JoinBlock, _super);\n\n      function JoinBlock(options) {\n        JoinBlock.__super__.constructor.call(this, options);\n        this.joins = [];\n      }\n\n      JoinBlock.prototype.join = function(table, alias, condition, type) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (condition == null) {\n          condition = null;\n        }\n        if (type == null) {\n          type = 'INNER';\n        }\n        table = this._sanitizeTable(table, true);\n        if (alias) {\n          alias = this._sanitizeTableAlias(alias);\n        }\n        if (condition) {\n          condition = this._sanitizeCondition(condition);\n        }\n        this.joins.push({\n          type: type,\n          table: table,\n          alias: alias,\n          condition: condition\n        });\n        return this;\n      };\n\n      JoinBlock.prototype.left_join = function(table, alias, condition) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (condition == null) {\n          condition = null;\n        }\n        return this.join(table, alias, condition, 'LEFT');\n      };\n\n      JoinBlock.prototype.right_join = function(table, alias, condition) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (condition == null) {\n          condition = null;\n        }\n        return this.join(table, alias, condition, 'RIGHT');\n      };\n\n      JoinBlock.prototype.outer_join = function(table, alias, condition) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (condition == null) {\n          condition = null;\n        }\n        return this.join(table, alias, condition, 'OUTER');\n      };\n\n      JoinBlock.prototype.left_outer_join = function(table, alias, condition) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (condition == null) {\n          condition = null;\n        }\n        return this.join(table, alias, condition, 'LEFT OUTER');\n      };\n\n      JoinBlock.prototype.full_join = function(table, alias, condition) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (condition == null) {\n          condition = null;\n        }\n        return this.join(table, alias, condition, 'FULL');\n      };\n\n      JoinBlock.prototype.cross_join = function(table, alias, condition) {\n        if (alias == null) {\n          alias = null;\n        }\n        if (condition == null) {\n          condition = null;\n        }\n        return this.join(table, alias, condition, 'CROSS');\n      };\n\n      JoinBlock.prototype.buildStr = function(queryBuilder) {\n        var j, joins, _i, _len, _ref6;\n        joins = \"\";\n        _ref6 = this.joins || [];\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          j = _ref6[_i];\n          if (joins !== \"\") {\n            joins += \" \";\n          }\n          joins += \"\" + j.type + \" JOIN \";\n          if (\"string\" === typeof j.table) {\n            joins += j.table;\n          } else {\n            joins += \"(\" + j.table + \")\";\n          }\n          if (j.alias) {\n            joins += \" \" + j.alias;\n          }\n          if (j.condition) {\n            joins += \" ON (\" + j.condition + \")\";\n          }\n        }\n        return joins;\n      };\n\n      JoinBlock.prototype.buildParam = function(queryBuilder) {\n        var blk, cp, joinStr, p, params, ret, v, _i, _j, _k, _len, _len1, _len2, _ref6, _ref7;\n        ret = {\n          text: \"\",\n          values: []\n        };\n        params = [];\n        joinStr = \"\";\n        if (0 >= this.joins.length) {\n          return ret;\n        }\n        _ref6 = this.joins;\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          blk = _ref6[_i];\n          if (\"string\" === typeof blk.table) {\n            p = {\n              \"text\": \"\" + blk.table,\n              \"values\": []\n            };\n          } else if (blk.table instanceof cls.QueryBuilder) {\n            blk.table.updateOptions({\n              \"nestedBuilder\": true\n            });\n            p = blk.table.toParam();\n          } else {\n            blk.updateOptions({\n              \"nestedBuilder\": true\n            });\n            p = blk.buildParam(queryBuilder);\n          }\n          if (blk.condition instanceof cls.Expression) {\n            cp = blk.condition.toParam();\n            p.condition = cp.text;\n            p.values = p.values.concat(cp.values);\n          } else {\n            p.condition = blk.condition;\n          }\n          p.join = blk;\n          params.push(p);\n        }\n        for (_j = 0, _len1 = params.length; _j < _len1; _j++) {\n          p = params[_j];\n          if (joinStr !== \"\") {\n            joinStr += \" \";\n          }\n          joinStr += \"\" + p.join.type + \" JOIN \";\n          if (\"string\" === typeof p.join.table) {\n            joinStr += p.text;\n          } else {\n            joinStr += \"(\" + p.text + \")\";\n          }\n          if (p.join.alias) {\n            joinStr += \" \" + p.join.alias;\n          }\n          if (p.condition) {\n            joinStr += \" ON (\" + p.condition + \")\";\n          }\n          _ref7 = p.values;\n          for (_k = 0, _len2 = _ref7.length; _k < _len2; _k++) {\n            v = _ref7[_k];\n            ret.values.push(this._formatCustomValue(v));\n          }\n        }\n        ret.text += joinStr;\n        return ret;\n      };\n\n      return JoinBlock;\n\n    })(cls.Block);\n    cls.UnionBlock = (function(_super) {\n      __extends(UnionBlock, _super);\n\n      function UnionBlock(options) {\n        UnionBlock.__super__.constructor.call(this, options);\n        this.unions = [];\n      }\n\n      UnionBlock.prototype.union = function(table, type) {\n        if (type == null) {\n          type = 'UNION';\n        }\n        table = this._sanitizeTable(table, true);\n        this.unions.push({\n          type: type,\n          table: table\n        });\n        return this;\n      };\n\n      UnionBlock.prototype.union_all = function(table) {\n        return this.union(table, 'UNION ALL');\n      };\n\n      UnionBlock.prototype.buildStr = function(queryBuilder) {\n        var j, unionStr, _i, _len, _ref6;\n        unionStr = \"\";\n        _ref6 = this.unions || [];\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          j = _ref6[_i];\n          if (unionStr !== \"\") {\n            unionStr += \" \";\n          }\n          unionStr += \"\" + j.type + \" \";\n          if (\"string\" === typeof j.table) {\n            unionStr += j.table;\n          } else {\n            unionStr += \"(\" + j.table + \")\";\n          }\n        }\n        return unionStr;\n      };\n\n      UnionBlock.prototype.buildParam = function(queryBuilder) {\n        var blk, p, params, ret, unionStr, v, _i, _j, _k, _len, _len1, _len2, _ref6, _ref7;\n        ret = {\n          text: \"\",\n          values: []\n        };\n        params = [];\n        unionStr = \"\";\n        if (0 >= this.unions.length) {\n          return ret;\n        }\n        _ref6 = this.unions || [];\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          blk = _ref6[_i];\n          if (\"string\" === typeof blk.table) {\n            p = {\n              \"text\": \"\" + blk.table,\n              \"values\": []\n            };\n          } else if (blk.table instanceof cls.QueryBuilder) {\n            blk.table.updateOptions({\n              \"nestedBuilder\": true\n            });\n            p = blk.table.toParam();\n          } else {\n            blk.updateOptions({\n              \"nestedBuilder\": true\n            });\n            p = blk.buildParam(queryBuilder);\n          }\n          p.type = blk.type;\n          params.push(p);\n        }\n        for (_j = 0, _len1 = params.length; _j < _len1; _j++) {\n          p = params[_j];\n          if (unionStr !== \"\") {\n            unionStr += \" \";\n          }\n          unionStr += \"\" + p.type + \" (\" + p.text + \")\";\n          _ref7 = p.values;\n          for (_k = 0, _len2 = _ref7.length; _k < _len2; _k++) {\n            v = _ref7[_k];\n            ret.values.push(this._formatCustomValue(v));\n          }\n        }\n        ret.text += unionStr;\n        return ret;\n      };\n\n      return UnionBlock;\n\n    })(cls.Block);\n    cls.QueryBuilder = (function(_super) {\n      __extends(QueryBuilder, _super);\n\n      function QueryBuilder(options, blocks) {\n        var block, methodBody, methodName, _fn, _i, _len, _ref6, _ref7,\n          _this = this;\n        QueryBuilder.__super__.constructor.call(this, options);\n        this.blocks = blocks || [];\n        _ref6 = this.blocks;\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          block = _ref6[_i];\n          _ref7 = block.exposedMethods();\n          _fn = function(block, name, body) {\n            return _this[name] = function() {\n              body.apply(block, arguments);\n              return _this;\n            };\n          };\n          for (methodName in _ref7) {\n            methodBody = _ref7[methodName];\n            if (this[methodName] != null) {\n              throw new Error(\"\" + (this._getObjectClassName(this)) + \" already has a builder method called: \" + methodName);\n            }\n            _fn(block, methodName, methodBody);\n          }\n        }\n      }\n\n      QueryBuilder.prototype.registerValueHandler = function(type, handler) {\n        var block, _i, _len, _ref6;\n        _ref6 = this.blocks;\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          block = _ref6[_i];\n          block.registerValueHandler(type, handler);\n        }\n        QueryBuilder.__super__.registerValueHandler.call(this, type, handler);\n        return this;\n      };\n\n      QueryBuilder.prototype.updateOptions = function(options) {\n        var block, _i, _len, _ref6, _results;\n        this.options = _extend({}, this.options, options);\n        _ref6 = this.blocks;\n        _results = [];\n        for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n          block = _ref6[_i];\n          _results.push(block.options = _extend({}, block.options, options));\n        }\n        return _results;\n      };\n\n      QueryBuilder.prototype.toString = function() {\n        var block;\n        return ((function() {\n          var _i, _len, _ref6, _results;\n          _ref6 = this.blocks;\n          _results = [];\n          for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n            block = _ref6[_i];\n            _results.push(block.buildStr(this));\n          }\n          return _results;\n        }).call(this)).filter(function(v) {\n          return 0 < v.length;\n        }).join(this.options.separator);\n      };\n\n      QueryBuilder.prototype.toParam = function(options) {\n        var block, blocks, i, old, regex, result, _ref6,\n          _this = this;\n        if (options == null) {\n          options = void 0;\n        }\n        old = this.options;\n        if (options != null) {\n          this.options = _extend({}, this.options, options);\n        }\n        result = {\n          text: '',\n          values: []\n        };\n        blocks = (function() {\n          var _i, _len, _ref6, _results;\n          _ref6 = this.blocks;\n          _results = [];\n          for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n            block = _ref6[_i];\n            _results.push(block.buildParam(this));\n          }\n          return _results;\n        }).call(this);\n        result.text = ((function() {\n          var _i, _len, _results;\n          _results = [];\n          for (_i = 0, _len = blocks.length; _i < _len; _i++) {\n            block = blocks[_i];\n            _results.push(block.text);\n          }\n          return _results;\n        })()).filter(function(v) {\n          return 0 < v.length;\n        }).join(this.options.separator);\n        result.values = (_ref6 = []).concat.apply(_ref6, (function() {\n          var _i, _len, _results;\n          _results = [];\n          for (_i = 0, _len = blocks.length; _i < _len; _i++) {\n            block = blocks[_i];\n            _results.push(block.values);\n          }\n          return _results;\n        })());\n        if (this.options.nestedBuilder == null) {\n          if (this.options.numberedParameters || ((options != null ? options.numberedParametersStartAt : void 0) != null)) {\n            i = 1;\n            if (this.options.numberedParametersStartAt != null) {\n              i = this.options.numberedParametersStartAt;\n            }\n            regex = new RegExp(\"\\\\\" + this.options.parameterCharacter, 'g');\n            result.text = result.text.replace(regex, function() {\n              return \"\" + _this.options.numberedParametersPrefix + (i++);\n            });\n          }\n        }\n        this.options = old;\n        return result;\n      };\n\n      QueryBuilder.prototype.clone = function() {\n        var block;\n        return new this.constructor(this.options, (function() {\n          var _i, _len, _ref6, _results;\n          _ref6 = this.blocks;\n          _results = [];\n          for (_i = 0, _len = _ref6.length; _i < _len; _i++) {\n            block = _ref6[_i];\n            _results.push(block.clone());\n          }\n          return _results;\n        }).call(this));\n      };\n\n      QueryBuilder.prototype.isNestable = function() {\n        return false;\n      };\n\n      QueryBuilder.prototype.getBlock = function(blockType) {\n        return this.blocks.filter(function(b) {\n          return b instanceof blockType;\n        })[0];\n      };\n\n      return QueryBuilder;\n\n    })(cls.BaseBuilder);\n    cls.Select = (function(_super) {\n      __extends(Select, _super);\n\n      function Select(options, blocks) {\n        if (blocks == null) {\n          blocks = null;\n        }\n        blocks || (blocks = [\n          new cls.StringBlock(options, 'SELECT'), new cls.FunctionBlock(options), new cls.DistinctBlock(options), new cls.GetFieldBlock(options), new cls.FromTableBlock(_extend({}, options, {\n            allowNested: true\n          })), new cls.JoinBlock(_extend({}, options, {\n            allowNested: true\n          })), new cls.WhereBlock(options), new cls.GroupByBlock(options), new cls.HavingBlock(options), new cls.OrderByBlock(options), new cls.LimitBlock(options), new cls.OffsetBlock(options), new cls.UnionBlock(_extend({}, options, {\n            allowNested: true\n          }))\n        ]);\n        Select.__super__.constructor.call(this, options, blocks);\n      }\n\n      Select.prototype.isNestable = function() {\n        return true;\n      };\n\n      return Select;\n\n    })(cls.QueryBuilder);\n    cls.Update = (function(_super) {\n      __extends(Update, _super);\n\n      function Update(options, blocks) {\n        if (blocks == null) {\n          blocks = null;\n        }\n        blocks || (blocks = [new cls.StringBlock(options, 'UPDATE'), new cls.UpdateTableBlock(options), new cls.SetFieldBlock(options), new cls.WhereBlock(options), new cls.OrderByBlock(options), new cls.LimitBlock(options)]);\n        Update.__super__.constructor.call(this, options, blocks);\n      }\n\n      return Update;\n\n    })(cls.QueryBuilder);\n    cls.Delete = (function(_super) {\n      __extends(Delete, _super);\n\n      function Delete(options, blocks) {\n        if (blocks == null) {\n          blocks = null;\n        }\n        blocks || (blocks = [\n          new cls.StringBlock(options, 'DELETE'), new cls.FromTableBlock(_extend({}, options, {\n            singleTable: true\n          })), new cls.JoinBlock(options), new cls.WhereBlock(options), new cls.OrderByBlock(options), new cls.LimitBlock(options)\n        ]);\n        Delete.__super__.constructor.call(this, options, blocks);\n      }\n\n      return Delete;\n\n    })(cls.QueryBuilder);\n    cls.Insert = (function(_super) {\n      __extends(Insert, _super);\n\n      function Insert(options, blocks) {\n        if (blocks == null) {\n          blocks = null;\n        }\n        blocks || (blocks = [new cls.StringBlock(options, 'INSERT'), new cls.IntoTableBlock(options), new cls.InsertFieldValueBlock(options), new cls.InsertFieldsFromQueryBlock(options)]);\n        Insert.__super__.constructor.call(this, options, blocks);\n      }\n\n      return Insert;\n\n    })(cls.QueryBuilder);\n    _squel = {\n      VERSION: '4.2.3',\n      flavour: flavour,\n      expr: function(options) {\n        return new cls.Expression(options);\n      },\n      select: function(options, blocks) {\n        return new cls.Select(options, blocks);\n      },\n      update: function(options, blocks) {\n        return new cls.Update(options, blocks);\n      },\n      insert: function(options, blocks) {\n        return new cls.Insert(options, blocks);\n      },\n      \"delete\": function(options, blocks) {\n        return new cls.Delete(options, blocks);\n      },\n      registerValueHandler: cls.registerValueHandler,\n      fval: cls.fval\n    };\n    _squel.remove = _squel[\"delete\"];\n    _squel.cls = cls;\n    return _squel;\n  };\n\n  squel = _buildSquel();\n\n  if (typeof define !== \"undefined\" && define !== null ? define.amd : void 0) {\n    define(function() {\n      return squel;\n    });\n  } else if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = squel;\n  } else {\n    if (typeof window !== \"undefined\" && window !== null) {\n      window.squel = squel;\n    }\n  }\n\n  squel.flavours = {};\n\n  squel.useFlavour = function(flavour) {\n    var s;\n    if (flavour == null) {\n      flavour = null;\n    }\n    if (!flavour) {\n      return squel;\n    }\n    if (squel.flavours[flavour] instanceof Function) {\n      s = _buildSquel(flavour);\n      squel.flavours[flavour].call(null, s);\n      return s;\n    } else {\n      throw new Error(\"Flavour not available: \" + flavour);\n    }\n  };\n\n  SQ = squel;\n  return SQ\n\n}\n// ).call(this);\n"]}]}